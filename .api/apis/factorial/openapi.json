{
  "openapi": "3.1.0",
  "info": {
    "title": "Factorial API",
    "description": "",
    "version": "2.0.0"
  },
  "webhooks": {
    "Webhooks > ApiPublic > WebhookSubscription > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `api_public/webhook_subscription/create`",
        "deprecated": false,
        "summary": "ApiPublic > WebhookSubscription > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "target_url",
                  "type",
                  "enabled",
                  "api_version"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the webhook subscription",
                    "example": 1
                  },
                  "target_url": {
                    "type": "string",
                    "description": "URL where the webhook payload will be sent",
                    "example": "https://webhook.site/"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the webhook subscription",
                    "example": "ats/job_posting/create"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the webhook subscription",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the webhook subscription",
                    "example": "Webhook subscription of a job posting created"
                  },
                  "challenge": {
                    "type": "string",
                    "description": "String to verify the subscription",
                    "example": "2bca4e6d-9aaf-4f11-9e5d"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Boolean to enable/disable the subscription",
                    "example": true
                  },
                  "api_version": {
                    "type": "string",
                    "description": "API version of the webhook subscription that determines the schema of the payload",
                    "example": "2024-10-01"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > ApiPublic > WebhookSubscription > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `api_public/webhook_subscription/delete`",
        "deprecated": false,
        "summary": "ApiPublic > WebhookSubscription > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "target_url",
                  "type",
                  "enabled",
                  "api_version"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the webhook subscription",
                    "example": 1
                  },
                  "target_url": {
                    "type": "string",
                    "description": "URL where the webhook payload will be sent",
                    "example": "https://webhook.site/"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the webhook subscription",
                    "example": "ats/job_posting/create"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the webhook subscription",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the webhook subscription",
                    "example": "Webhook subscription of a job posting created"
                  },
                  "challenge": {
                    "type": "string",
                    "description": "String to verify the subscription",
                    "example": "2bca4e6d-9aaf-4f11-9e5d"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Boolean to enable/disable the subscription",
                    "example": true
                  },
                  "api_version": {
                    "type": "string",
                    "description": "API version of the webhook subscription that determines the schema of the payload",
                    "example": "2024-10-01"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > ApiPublic > WebhookSubscription > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `api_public/webhook_subscription/update`",
        "deprecated": false,
        "summary": "ApiPublic > WebhookSubscription > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "target_url",
                  "type",
                  "enabled",
                  "api_version"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the webhook subscription",
                    "example": 1
                  },
                  "target_url": {
                    "type": "string",
                    "description": "URL where the webhook payload will be sent",
                    "example": "https://webhook.site/"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the webhook subscription",
                    "example": "ats/job_posting/create"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the webhook subscription",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the webhook subscription",
                    "example": "Webhook subscription of a job posting created"
                  },
                  "challenge": {
                    "type": "string",
                    "description": "String to verify the subscription",
                    "example": "2bca4e6d-9aaf-4f11-9e5d"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Boolean to enable/disable the subscription",
                    "example": true
                  },
                  "api_version": {
                    "type": "string",
                    "description": "API version of the webhook subscription that determines the schema of the payload",
                    "example": "2024-10-01"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > Application > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/application/create`",
        "deprecated": false,
        "summary": "Ats > Application > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "ats_job_posting_id",
                  "ats_candidate_id",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the application",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company id of the application",
                    "example": 1
                  },
                  "ats_job_posting_id": {
                    "type": "integer",
                    "description": "Job posting id of the application",
                    "example": 1
                  },
                  "ats_candidate_id": {
                    "type": "integer",
                    "description": "Candidate id of the application",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id of the application",
                    "example": 1
                  },
                  "phone": {
                    "type": "string",
                    "description": "Candidate phone of the application",
                    "example": "123321"
                  },
                  "qualified": {
                    "type": "boolean",
                    "description": "Qualified of the application",
                    "example": true
                  },
                  "ats_application_phase_id": {
                    "type": "integer",
                    "description": "Application phase id",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Application created at date",
                    "example": "2024-08-19T14:30:00Z"
                  },
                  "cover_letter": {
                    "type": "string",
                    "description": "Application cover letter",
                    "example": "cover_letter"
                  },
                  "ats_conversation_id": {
                    "type": "integer",
                    "description": "Application conversation id",
                    "example": 1
                  },
                  "medium": {
                    "type": "string",
                    "description": "Application medium",
                    "example": "medium"
                  },
                  "rating_average": {
                    "type": "integer",
                    "description": "Application average rating",
                    "example": 1
                  },
                  "ats_rejection_reason_id": {
                    "type": "integer",
                    "description": "Application rejection reason id",
                    "example": 1
                  },
                  "source_id": {
                    "type": "integer",
                    "description": "Application source id",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > Application > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/application/delete`",
        "deprecated": false,
        "summary": "Ats > Application > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "ats_job_posting_id",
                  "ats_candidate_id",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the application",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company id of the application",
                    "example": 1
                  },
                  "ats_job_posting_id": {
                    "type": "integer",
                    "description": "Job posting id of the application",
                    "example": 1
                  },
                  "ats_candidate_id": {
                    "type": "integer",
                    "description": "Candidate id of the application",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id of the application",
                    "example": 1
                  },
                  "phone": {
                    "type": "string",
                    "description": "Candidate phone of the application",
                    "example": "123321"
                  },
                  "qualified": {
                    "type": "boolean",
                    "description": "Qualified of the application",
                    "example": true
                  },
                  "ats_application_phase_id": {
                    "type": "integer",
                    "description": "Application phase id",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Application created at date",
                    "example": "2024-08-19T14:30:00Z"
                  },
                  "cover_letter": {
                    "type": "string",
                    "description": "Application cover letter",
                    "example": "cover_letter"
                  },
                  "ats_conversation_id": {
                    "type": "integer",
                    "description": "Application conversation id",
                    "example": 1
                  },
                  "medium": {
                    "type": "string",
                    "description": "Application medium",
                    "example": "medium"
                  },
                  "rating_average": {
                    "type": "integer",
                    "description": "Application average rating",
                    "example": 1
                  },
                  "ats_rejection_reason_id": {
                    "type": "integer",
                    "description": "Application rejection reason id",
                    "example": 1
                  },
                  "source_id": {
                    "type": "integer",
                    "description": "Application source id",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > Application > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/application/update`",
        "deprecated": false,
        "summary": "Ats > Application > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "ats_job_posting_id",
                  "ats_candidate_id",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the application",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company id of the application",
                    "example": 1
                  },
                  "ats_job_posting_id": {
                    "type": "integer",
                    "description": "Job posting id of the application",
                    "example": 1
                  },
                  "ats_candidate_id": {
                    "type": "integer",
                    "description": "Candidate id of the application",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id of the application",
                    "example": 1
                  },
                  "phone": {
                    "type": "string",
                    "description": "Candidate phone of the application",
                    "example": "123321"
                  },
                  "qualified": {
                    "type": "boolean",
                    "description": "Qualified of the application",
                    "example": true
                  },
                  "ats_application_phase_id": {
                    "type": "integer",
                    "description": "Application phase id",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Application created at date",
                    "example": "2024-08-19T14:30:00Z"
                  },
                  "cover_letter": {
                    "type": "string",
                    "description": "Application cover letter",
                    "example": "cover_letter"
                  },
                  "ats_conversation_id": {
                    "type": "integer",
                    "description": "Application conversation id",
                    "example": 1
                  },
                  "medium": {
                    "type": "string",
                    "description": "Application medium",
                    "example": "medium"
                  },
                  "rating_average": {
                    "type": "integer",
                    "description": "Application average rating",
                    "example": 1
                  },
                  "ats_rejection_reason_id": {
                    "type": "integer",
                    "description": "Application rejection reason id",
                    "example": 1
                  },
                  "source_id": {
                    "type": "integer",
                    "description": "Application source id",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > Candidate > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/candidate/create`",
        "deprecated": false,
        "summary": "Ats > Candidate > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "talent_pool",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the candidate.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the candidate.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the candidate.",
                    "example": "Fernandez Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the candidate.",
                    "example": "Ana Fernandez Perez"
                  },
                  "email": {
                    "type": "string",
                    "description": "email of the candidate.",
                    "example": "ana@factorial.com"
                  },
                  "talent_pool": {
                    "type": "boolean",
                    "description": "is the candidate part of talent pool?",
                    "example": true
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the candidate.",
                    "example": 645786980
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the candidate.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update of the candidate.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "consent_given_at": {
                    "type": "string",
                    "description": "date when the consent was given.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "inactive_since": {
                    "type": "string",
                    "description": "date when the candidate became inactive.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "ats_job_posting_ids": {
                    "type": "array",
                    "description": "list of job posting identifiers.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "personal web resource from the candidate.",
                    "example": "https://anaperez.factorial.com"
                  },
                  "consent_expiration_date": {
                    "type": "string",
                    "description": "date when the consent expires.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "consent_to_talent_pool": {
                    "type": "boolean",
                    "description": "consent to talent pool.",
                    "example": true
                  },
                  "medium": {
                    "type": "string",
                    "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                    "example": "email"
                  },
                  "source_id": {
                    "type": "integer",
                    "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                    "example": 1
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the candidate.",
                    "enum": [
                      "female",
                      "male",
                      "unanswered",
                      "other"
                    ],
                    "example": "female"
                  },
                  "score": {
                    "type": "number",
                    "description": "score of the candidate.",
                    "example": 7
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > Candidate > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/candidate/delete`",
        "deprecated": false,
        "summary": "Ats > Candidate > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "talent_pool",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the candidate.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the candidate.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the candidate.",
                    "example": "Fernandez Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the candidate.",
                    "example": "Ana Fernandez Perez"
                  },
                  "email": {
                    "type": "string",
                    "description": "email of the candidate.",
                    "example": "ana@factorial.com"
                  },
                  "talent_pool": {
                    "type": "boolean",
                    "description": "is the candidate part of talent pool?",
                    "example": true
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the candidate.",
                    "example": 645786980
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the candidate.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update of the candidate.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "consent_given_at": {
                    "type": "string",
                    "description": "date when the consent was given.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "inactive_since": {
                    "type": "string",
                    "description": "date when the candidate became inactive.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "ats_job_posting_ids": {
                    "type": "array",
                    "description": "list of job posting identifiers.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "personal web resource from the candidate.",
                    "example": "https://anaperez.factorial.com"
                  },
                  "consent_expiration_date": {
                    "type": "string",
                    "description": "date when the consent expires.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "consent_to_talent_pool": {
                    "type": "boolean",
                    "description": "consent to talent pool.",
                    "example": true
                  },
                  "medium": {
                    "type": "string",
                    "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                    "example": "email"
                  },
                  "source_id": {
                    "type": "integer",
                    "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                    "example": 1
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the candidate.",
                    "enum": [
                      "female",
                      "male",
                      "unanswered",
                      "other"
                    ],
                    "example": "female"
                  },
                  "score": {
                    "type": "number",
                    "description": "score of the candidate.",
                    "example": 7
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > Candidate > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/candidate/update`",
        "deprecated": false,
        "summary": "Ats > Candidate > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "talent_pool",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the candidate.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the candidate.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the candidate.",
                    "example": "Fernandez Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the candidate.",
                    "example": "Ana Fernandez Perez"
                  },
                  "email": {
                    "type": "string",
                    "description": "email of the candidate.",
                    "example": "ana@factorial.com"
                  },
                  "talent_pool": {
                    "type": "boolean",
                    "description": "is the candidate part of talent pool?",
                    "example": true
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the candidate.",
                    "example": 645786980
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the candidate.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update of the candidate.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "consent_given_at": {
                    "type": "string",
                    "description": "date when the consent was given.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "inactive_since": {
                    "type": "string",
                    "description": "date when the candidate became inactive.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "ats_job_posting_ids": {
                    "type": "array",
                    "description": "list of job posting identifiers.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "personal web resource from the candidate.",
                    "example": "https://anaperez.factorial.com"
                  },
                  "consent_expiration_date": {
                    "type": "string",
                    "description": "date when the consent expires.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "consent_to_talent_pool": {
                    "type": "boolean",
                    "description": "consent to talent pool.",
                    "example": true
                  },
                  "medium": {
                    "type": "string",
                    "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                    "example": "email"
                  },
                  "source_id": {
                    "type": "integer",
                    "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                    "example": 1
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the candidate.",
                    "enum": [
                      "female",
                      "male",
                      "unanswered",
                      "other"
                    ],
                    "example": "female"
                  },
                  "score": {
                    "type": "number",
                    "description": "score of the candidate.",
                    "example": 7
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > EvaluationForm > Save as templates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/evaluation_form/save_as_template`",
        "deprecated": false,
        "summary": "Ats > EvaluationForm > Save as templates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "name",
                  "questions",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the evaluation form.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Id of the company that the evaluation form belongs to.",
                    "example": 1
                  },
                  "ats_job_posting_id": {
                    "type": "integer",
                    "description": "Id of the job posting that the evaluation form is associated with.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the evaluation form.",
                    "example": "Technical Evaluation"
                  },
                  "based_on_id": {
                    "type": "integer",
                    "description": "Id of the evaluation form that this evaluation form is related.",
                    "example": 1
                  },
                  "questions": {
                    "type": "array",
                    "description": "List of questions in the evaluation form.",
                    "example": [
                      {
                        "id": 1,
                        "text": "What is your experience with Ruby on Rails?",
                        "description": "experience in years"
                      }
                    ],
                    "items": {}
                  },
                  "created_at": {
                    "type": "string",
                    "description": "date and time when the evaluation form was created.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "date and time when the evaluation form was last updated.",
                    "example": "2021-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > JobPosting > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/job_posting/create`",
        "deprecated": false,
        "summary": "Ats > JobPosting > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "ats_company_id",
                  "title",
                  "remote",
                  "status",
                  "cv_requirement",
                  "cover_letter_requirement",
                  "phone_requirement",
                  "photo_requirement",
                  "salary_period",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the job posting",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "ats_company_id": {
                    "type": "integer",
                    "description": "Identifier of the ATS company associated with the job posting",
                    "example": "1"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the job posting",
                    "example": "My job title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the job posting",
                    "example": "My job description"
                  },
                  "contract_type": {
                    "type": "string"
                  },
                  "workplace_type": {
                    "type": "string"
                  },
                  "remote": {
                    "type": "boolean",
                    "description": "Indicates if the job posting is remote",
                    "example": "true"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the job posting (e.g., draft, published, archived)",
                    "enum": [
                      "draft",
                      "published",
                      "unlisted",
                      "archived",
                      "cancelled"
                    ],
                    "example": "draft"
                  },
                  "schedule_type": {
                    "type": "string",
                    "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                    "example": "full_time"
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "Identifier of the team associated with the job posting",
                    "example": "1"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Identifier of the location associated with the job posting",
                    "example": "1"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "Identifier of the legal entity associated with the job posting",
                    "example": "1"
                  },
                  "salary_format": {
                    "type": "string",
                    "description": "The format of the salary (e.g., range, fixed_amount)",
                    "example": "range"
                  },
                  "salary_from_amount_in_cents": {
                    "type": "integer",
                    "description": "The minimum salary amount in cents",
                    "example": "3000000"
                  },
                  "salary_to_amount_in_cents": {
                    "type": "integer",
                    "description": "The maximum salary amount in cents",
                    "example": "5000000"
                  },
                  "hide_salary": {
                    "type": "boolean",
                    "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                    "example": "true"
                  },
                  "cv_requirement": {
                    "type": "string",
                    "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                    "example": "mandatory"
                  },
                  "cover_letter_requirement": {
                    "type": "string",
                    "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                    "example": "optional"
                  },
                  "phone_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "photo_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "preview_token": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "description": "If published, the public URL of the job posting. Otherwise will be null",
                    "example": "https://my-factorial-domain/job_posting/job-title-slug"
                  },
                  "salary_period": {
                    "type": "string",
                    "enum": [
                      "annual",
                      "monthly",
                      "daily"
                    ]
                  },
                  "published_at": {
                    "type": "string",
                    "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                    "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Date in ISO 8601 format when the job posting was created",
                    "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > JobPosting > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/job_posting/delete`",
        "deprecated": false,
        "summary": "Ats > JobPosting > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "ats_company_id",
                  "title",
                  "remote",
                  "status",
                  "cv_requirement",
                  "cover_letter_requirement",
                  "phone_requirement",
                  "photo_requirement",
                  "salary_period",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the job posting",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "ats_company_id": {
                    "type": "integer",
                    "description": "Identifier of the ATS company associated with the job posting",
                    "example": "1"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the job posting",
                    "example": "My job title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the job posting",
                    "example": "My job description"
                  },
                  "contract_type": {
                    "type": "string"
                  },
                  "workplace_type": {
                    "type": "string"
                  },
                  "remote": {
                    "type": "boolean",
                    "description": "Indicates if the job posting is remote",
                    "example": "true"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the job posting (e.g., draft, published, archived)",
                    "enum": [
                      "draft",
                      "published",
                      "unlisted",
                      "archived",
                      "cancelled"
                    ],
                    "example": "draft"
                  },
                  "schedule_type": {
                    "type": "string",
                    "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                    "example": "full_time"
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "Identifier of the team associated with the job posting",
                    "example": "1"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Identifier of the location associated with the job posting",
                    "example": "1"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "Identifier of the legal entity associated with the job posting",
                    "example": "1"
                  },
                  "salary_format": {
                    "type": "string",
                    "description": "The format of the salary (e.g., range, fixed_amount)",
                    "example": "range"
                  },
                  "salary_from_amount_in_cents": {
                    "type": "integer",
                    "description": "The minimum salary amount in cents",
                    "example": "3000000"
                  },
                  "salary_to_amount_in_cents": {
                    "type": "integer",
                    "description": "The maximum salary amount in cents",
                    "example": "5000000"
                  },
                  "hide_salary": {
                    "type": "boolean",
                    "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                    "example": "true"
                  },
                  "cv_requirement": {
                    "type": "string",
                    "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                    "example": "mandatory"
                  },
                  "cover_letter_requirement": {
                    "type": "string",
                    "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                    "example": "optional"
                  },
                  "phone_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "photo_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "preview_token": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "description": "If published, the public URL of the job posting. Otherwise will be null",
                    "example": "https://my-factorial-domain/job_posting/job-title-slug"
                  },
                  "salary_period": {
                    "type": "string",
                    "enum": [
                      "annual",
                      "monthly",
                      "daily"
                    ]
                  },
                  "published_at": {
                    "type": "string",
                    "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                    "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Date in ISO 8601 format when the job posting was created",
                    "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > JobPosting > Duplicates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/job_posting/duplicate`",
        "deprecated": false,
        "summary": "Ats > JobPosting > Duplicates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "ats_company_id",
                  "title",
                  "remote",
                  "status",
                  "cv_requirement",
                  "cover_letter_requirement",
                  "phone_requirement",
                  "photo_requirement",
                  "salary_period",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the job posting",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "ats_company_id": {
                    "type": "integer",
                    "description": "Identifier of the ATS company associated with the job posting",
                    "example": "1"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the job posting",
                    "example": "My job title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the job posting",
                    "example": "My job description"
                  },
                  "contract_type": {
                    "type": "string"
                  },
                  "workplace_type": {
                    "type": "string"
                  },
                  "remote": {
                    "type": "boolean",
                    "description": "Indicates if the job posting is remote",
                    "example": "true"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the job posting (e.g., draft, published, archived)",
                    "enum": [
                      "draft",
                      "published",
                      "unlisted",
                      "archived",
                      "cancelled"
                    ],
                    "example": "draft"
                  },
                  "schedule_type": {
                    "type": "string",
                    "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                    "example": "full_time"
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "Identifier of the team associated with the job posting",
                    "example": "1"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Identifier of the location associated with the job posting",
                    "example": "1"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "Identifier of the legal entity associated with the job posting",
                    "example": "1"
                  },
                  "salary_format": {
                    "type": "string",
                    "description": "The format of the salary (e.g., range, fixed_amount)",
                    "example": "range"
                  },
                  "salary_from_amount_in_cents": {
                    "type": "integer",
                    "description": "The minimum salary amount in cents",
                    "example": "3000000"
                  },
                  "salary_to_amount_in_cents": {
                    "type": "integer",
                    "description": "The maximum salary amount in cents",
                    "example": "5000000"
                  },
                  "hide_salary": {
                    "type": "boolean",
                    "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                    "example": "true"
                  },
                  "cv_requirement": {
                    "type": "string",
                    "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                    "example": "mandatory"
                  },
                  "cover_letter_requirement": {
                    "type": "string",
                    "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                    "example": "optional"
                  },
                  "phone_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "photo_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "preview_token": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "description": "If published, the public URL of the job posting. Otherwise will be null",
                    "example": "https://my-factorial-domain/job_posting/job-title-slug"
                  },
                  "salary_period": {
                    "type": "string",
                    "enum": [
                      "annual",
                      "monthly",
                      "daily"
                    ]
                  },
                  "published_at": {
                    "type": "string",
                    "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                    "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Date in ISO 8601 format when the job posting was created",
                    "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Ats > JobPosting > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `ats/job_posting/update`",
        "deprecated": false,
        "summary": "Ats > JobPosting > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "ats_company_id",
                  "title",
                  "remote",
                  "status",
                  "cv_requirement",
                  "cover_letter_requirement",
                  "phone_requirement",
                  "photo_requirement",
                  "salary_period",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the job posting",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "ats_company_id": {
                    "type": "integer",
                    "description": "Identifier of the ATS company associated with the job posting",
                    "example": "1"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the job posting",
                    "example": "My job title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the job posting",
                    "example": "My job description"
                  },
                  "contract_type": {
                    "type": "string"
                  },
                  "workplace_type": {
                    "type": "string"
                  },
                  "remote": {
                    "type": "boolean",
                    "description": "Indicates if the job posting is remote",
                    "example": "true"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the job posting (e.g., draft, published, archived)",
                    "enum": [
                      "draft",
                      "published",
                      "unlisted",
                      "archived",
                      "cancelled"
                    ],
                    "example": "draft"
                  },
                  "schedule_type": {
                    "type": "string",
                    "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                    "example": "full_time"
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "Identifier of the team associated with the job posting",
                    "example": "1"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Identifier of the location associated with the job posting",
                    "example": "1"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "Identifier of the legal entity associated with the job posting",
                    "example": "1"
                  },
                  "salary_format": {
                    "type": "string",
                    "description": "The format of the salary (e.g., range, fixed_amount)",
                    "example": "range"
                  },
                  "salary_from_amount_in_cents": {
                    "type": "integer",
                    "description": "The minimum salary amount in cents",
                    "example": "3000000"
                  },
                  "salary_to_amount_in_cents": {
                    "type": "integer",
                    "description": "The maximum salary amount in cents",
                    "example": "5000000"
                  },
                  "hide_salary": {
                    "type": "boolean",
                    "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                    "example": "true"
                  },
                  "cv_requirement": {
                    "type": "string",
                    "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                    "example": "mandatory"
                  },
                  "cover_letter_requirement": {
                    "type": "string",
                    "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                    "example": "optional"
                  },
                  "phone_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "photo_requirement": {
                    "type": "string",
                    "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                    "example": "do_not_ask"
                  },
                  "preview_token": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "description": "If published, the public URL of the job posting. Otherwise will be null",
                    "example": "https://my-factorial-domain/job_posting/job-title-slug"
                  },
                  "salary_period": {
                    "type": "string",
                    "enum": [
                      "annual",
                      "monthly",
                      "daily"
                    ]
                  },
                  "published_at": {
                    "type": "string",
                    "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                    "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Date in ISO 8601 format when the job posting was created",
                    "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Autofills": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/autofill`",
        "deprecated": false,
        "summary": "Attendance > Shift > Autofills",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Break ends": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/break_end`",
        "deprecated": false,
        "summary": "Attendance > Shift > Break ends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Break starts": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/break_start`",
        "deprecated": false,
        "summary": "Attendance > Shift > Break starts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Clock ins": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/clock_in`",
        "deprecated": false,
        "summary": "Attendance > Shift > Clock ins",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Clock outs": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/clock_out`",
        "deprecated": false,
        "summary": "Attendance > Shift > Clock outs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/create`",
        "deprecated": false,
        "summary": "Attendance > Shift > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/delete`",
        "deprecated": false,
        "summary": "Attendance > Shift > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Toggle clocks": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/toggle_clock`",
        "deprecated": false,
        "summary": "Attendance > Shift > Toggle clocks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Attendance > Shift > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `attendance/shift/update`",
        "deprecated": false,
        "summary": "Attendance > Shift > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "date",
                  "reference_date",
                  "created_at",
                  "company_id",
                  "minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the shift",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Identifier for the employee assigned to the shift",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2023-10-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date for the shift",
                    "example": "2023-09-30"
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time when the employee clocked in",
                    "example": "08:30"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time when the employee clocked out",
                    "example": "12:30"
                  },
                  "in_source": {
                    "type": "string",
                    "description": "Source of the clock-in time",
                    "example": "automatic"
                  },
                  "out_source": {
                    "type": "string",
                    "description": "Source of the clock-out time",
                    "example": "automatic"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Additional observations about the shift",
                    "example": "Employee arrived late due to traffic"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of location for the shift",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates which worked part of the day",
                    "enum": [
                      "beginning_of_day",
                      "end_of_day"
                    ],
                    "example": "beginning_of_day"
                  },
                  "in_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-in location",
                    "example": 37.7749
                  },
                  "in_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-in location",
                    "example": -122.4194
                  },
                  "in_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-in location",
                    "example": 5
                  },
                  "out_location_latitude": {
                    "type": "number",
                    "description": "Latitude of the clock-out location",
                    "example": 37.7749
                  },
                  "out_location_longitude": {
                    "type": "number",
                    "description": "Longitude of the clock-out location",
                    "example": -122.4194
                  },
                  "out_location_accuracy": {
                    "type": "number",
                    "description": "Accuracy of the clock-out location",
                    "example": 5.7
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Indicates if the shift is workable",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Timestamp when the shift record was created",
                    "example": "2023-10-01T08:00:00Z"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Identifier for the location",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Identifier for the break configuration",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier for the company",
                    "example": 1
                  },
                  "minutes": {
                    "type": "integer",
                    "description": "Number in minutes of the shift",
                    "example": 152
                  },
                  "clock_in_with_seconds": {
                    "type": "string",
                    "description": "Clock in time with seconds",
                    "example": "08:30:15"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > BookkeepersManagement > Incidence > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `bookkeepers_management/incidence/update`",
        "deprecated": false,
        "summary": "BookkeepersManagement > Incidence > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "legal_entity_id",
                  "name",
                  "target_id",
                  "target_type",
                  "status",
                  "company_id",
                  "created_at",
                  "is_reopened"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the incidence (aka employee update).",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "identifier of employee related.",
                    "example": 1
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "identifier of legal entity related.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the incidence (aka employee update). It also represent the incidence type. For example a new hire incidence will be",
                    "example": "hiring"
                  },
                  "custom_name": {
                    "type": "string"
                  },
                  "target_id": {
                    "type": "integer",
                    "description": "The incidence (aka employee update) is also related to a another resource, for example for a leave target, the target identifier will be the leave id.",
                    "example": 1
                  },
                  "target_type": {
                    "type": "string",
                    "description": "The incidence (aka employee update) is also related to a another resource, for example a leave. This is the target type. The other types are Employee, Contracts::ContractVersion, BookkeepersManagement::ManualIncidence, Finance::CostCenterMembership.",
                    "example": "Timeoff::Leave"
                  },
                  "starts_on": {
                    "type": "string",
                    "description": "The date the incidence (aka employee update) starts.",
                    "example": "2020-01-01"
                  },
                  "ends_on": {
                    "type": "string",
                    "description": "The date the incidence (aka employee update) end.",
                    "example": "2020-01-01"
                  },
                  "read_at": {
                    "type": "string",
                    "description": "The date the incidence (aka employee update) was read.",
                    "example": "2020-01-01"
                  },
                  "status": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "identifier of company related.",
                    "example": 1
                  },
                  "message_from": {
                    "type": "string",
                    "description": "Indicate the message sender on the incidence (aka employee update). It can be any of 'bookkeeper', 'admin'",
                    "example": "admin"
                  },
                  "has_message": {
                    "type": "boolean",
                    "description": "Boolean that indicates if the incidence (aka employee update) has unread messages.",
                    "example": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Date in which incidence (aka employee update) was created.",
                    "example": true
                  },
                  "is_reopened": {
                    "type": "boolean",
                    "description": "Boolean that indicates if the incidence (aka employee update) has been reopened.",
                    "example": true
                  },
                  "legal_entity_name": {
                    "type": "string"
                  },
                  "employee_first_name": {
                    "type": "string"
                  },
                  "employee_last_name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Contracts > ContractVersion > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `contracts/contract_version/create`",
        "deprecated": false,
        "summary": "Contracts > ContractVersion > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "employee_id",
                  "effective_on",
                  "has_payroll",
                  "created_at",
                  "updated_at",
                  "fr_forfait_jours"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier for the contract version.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "identifier for company.",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                    "example": "2024-10-06"
                  },
                  "country": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "job_title": {
                    "type": "string",
                    "description": "job title of the employee.",
                    "example": "Designer"
                  },
                  "job_catalog_level": {
                    "type": "string",
                    "description": "the level of the employee in the job catalog.",
                    "example": "Senior Designer"
                  },
                  "job_catalog_role": {
                    "type": "string",
                    "description": "the role of the employee in the job catalog.",
                    "example": "Designer"
                  },
                  "starts_on": {
                    "type": "string",
                    "description": "the day the employee is hired.",
                    "example": "2024-10-06"
                  },
                  "ends_on": {
                    "type": "string",
                    "description": "the day the employee is terminated.",
                    "example": "2024-10-06"
                  },
                  "has_payroll": {
                    "type": "boolean",
                    "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                    "example": true
                  },
                  "has_trial_period": {
                    "type": "boolean",
                    "description": "a flag that indicates if the employee has a trial period.",
                    "example": true
                  },
                  "trial_period_ends_on": {
                    "type": "string",
                    "description": "when the trial period ends.",
                    "example": "2024-10-06"
                  },
                  "salary_amount": {
                    "type": "integer",
                    "description": "the amount of money the employee earns.",
                    "example": 1000
                  },
                  "salary_frequency": {
                    "type": "string",
                    "description": "the frequency of the salary payment.",
                    "example": "yearly"
                  },
                  "working_week_days": {
                    "type": "string",
                    "description": "the days of the week the employee works.",
                    "example": "monday,tuesday,wednesday,thursday,friday"
                  },
                  "working_hours": {
                    "type": "integer",
                    "description": "the amount of hours the employee works.",
                    "example": 40
                  },
                  "working_hours_frequency": {
                    "type": "string",
                    "description": "the frequency of the working hours.",
                    "example": "week"
                  },
                  "max_legal_yearly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a year.",
                    "example": 2000
                  },
                  "maximum_weekly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a week.",
                    "example": 40
                  },
                  "created_at": {
                    "type": "string",
                    "description": "the date the contract version was created.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "the date of the last contract version updated.",
                    "example": "2024-10-06"
                  },
                  "es_has_teleworking_contract": {
                    "type": "boolean",
                    "description": "flag that indicates if the contract has teleworking.",
                    "example": true
                  },
                  "es_cotization_group": {
                    "type": "integer",
                    "description": "the group of cotization of the employee.",
                    "example": 1
                  },
                  "es_contract_observations": {
                    "type": "string",
                    "description": "observations of the contract.",
                    "example": "review contract for job promotion"
                  },
                  "es_job_description": {
                    "type": "string",
                    "description": "the job description of the employee.",
                    "example": "Designer"
                  },
                  "es_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "es_working_day_type_id": {
                    "type": "integer",
                    "description": "working day type identifier.",
                    "example": 1
                  },
                  "es_education_level_id": {
                    "type": "integer",
                    "description": "education level identifier.",
                    "example": 1
                  },
                  "es_professional_category_id": {
                    "type": "integer",
                    "description": "professional category identifier.",
                    "example": 1
                  },
                  "fr_employee_type": {
                    "type": "string",
                    "description": "employee type.",
                    "example": "apprenti"
                  },
                  "fr_forfait_jours": {
                    "type": "boolean",
                    "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                    "example": true
                  },
                  "fr_jours_par_an": {
                    "type": "integer",
                    "description": "the number of days the employee is allowed to work.",
                    "example": 200
                  },
                  "fr_coefficient": {
                    "type": "string"
                  },
                  "fr_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "fr_level_id": {
                    "type": "integer",
                    "description": "level identifier.",
                    "example": 1
                  },
                  "fr_step_id": {
                    "type": "integer",
                    "description": "step identifier.",
                    "example": 1
                  },
                  "fr_mutual_id": {
                    "type": "integer",
                    "description": "mutual identifier.",
                    "example": 1
                  },
                  "fr_professional_category_id": {
                    "type": "integer",
                    "description": "professional category identifier.",
                    "example": 1
                  },
                  "fr_work_type_id": {
                    "type": "integer",
                    "description": "work type identifier.",
                    "example": 1
                  },
                  "de_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "pt_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Contracts > ContractVersion > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `contracts/contract_version/delete`",
        "deprecated": false,
        "summary": "Contracts > ContractVersion > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "employee_id",
                  "effective_on",
                  "has_payroll",
                  "created_at",
                  "updated_at",
                  "fr_forfait_jours"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier for the contract version.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "identifier for company.",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                    "example": "2024-10-06"
                  },
                  "country": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "job_title": {
                    "type": "string",
                    "description": "job title of the employee.",
                    "example": "Designer"
                  },
                  "job_catalog_level": {
                    "type": "string",
                    "description": "the level of the employee in the job catalog.",
                    "example": "Senior Designer"
                  },
                  "job_catalog_role": {
                    "type": "string",
                    "description": "the role of the employee in the job catalog.",
                    "example": "Designer"
                  },
                  "starts_on": {
                    "type": "string",
                    "description": "the day the employee is hired.",
                    "example": "2024-10-06"
                  },
                  "ends_on": {
                    "type": "string",
                    "description": "the day the employee is terminated.",
                    "example": "2024-10-06"
                  },
                  "has_payroll": {
                    "type": "boolean",
                    "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                    "example": true
                  },
                  "has_trial_period": {
                    "type": "boolean",
                    "description": "a flag that indicates if the employee has a trial period.",
                    "example": true
                  },
                  "trial_period_ends_on": {
                    "type": "string",
                    "description": "when the trial period ends.",
                    "example": "2024-10-06"
                  },
                  "salary_amount": {
                    "type": "integer",
                    "description": "the amount of money the employee earns.",
                    "example": 1000
                  },
                  "salary_frequency": {
                    "type": "string",
                    "description": "the frequency of the salary payment.",
                    "example": "yearly"
                  },
                  "working_week_days": {
                    "type": "string",
                    "description": "the days of the week the employee works.",
                    "example": "monday,tuesday,wednesday,thursday,friday"
                  },
                  "working_hours": {
                    "type": "integer",
                    "description": "the amount of hours the employee works.",
                    "example": 40
                  },
                  "working_hours_frequency": {
                    "type": "string",
                    "description": "the frequency of the working hours.",
                    "example": "week"
                  },
                  "max_legal_yearly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a year.",
                    "example": 2000
                  },
                  "maximum_weekly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a week.",
                    "example": 40
                  },
                  "created_at": {
                    "type": "string",
                    "description": "the date the contract version was created.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "the date of the last contract version updated.",
                    "example": "2024-10-06"
                  },
                  "es_has_teleworking_contract": {
                    "type": "boolean",
                    "description": "flag that indicates if the contract has teleworking.",
                    "example": true
                  },
                  "es_cotization_group": {
                    "type": "integer",
                    "description": "the group of cotization of the employee.",
                    "example": 1
                  },
                  "es_contract_observations": {
                    "type": "string",
                    "description": "observations of the contract.",
                    "example": "review contract for job promotion"
                  },
                  "es_job_description": {
                    "type": "string",
                    "description": "the job description of the employee.",
                    "example": "Designer"
                  },
                  "es_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "es_working_day_type_id": {
                    "type": "integer",
                    "description": "working day type identifier.",
                    "example": 1
                  },
                  "es_education_level_id": {
                    "type": "integer",
                    "description": "education level identifier.",
                    "example": 1
                  },
                  "es_professional_category_id": {
                    "type": "integer",
                    "description": "professional category identifier.",
                    "example": 1
                  },
                  "fr_employee_type": {
                    "type": "string",
                    "description": "employee type.",
                    "example": "apprenti"
                  },
                  "fr_forfait_jours": {
                    "type": "boolean",
                    "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                    "example": true
                  },
                  "fr_jours_par_an": {
                    "type": "integer",
                    "description": "the number of days the employee is allowed to work.",
                    "example": 200
                  },
                  "fr_coefficient": {
                    "type": "string"
                  },
                  "fr_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "fr_level_id": {
                    "type": "integer",
                    "description": "level identifier.",
                    "example": 1
                  },
                  "fr_step_id": {
                    "type": "integer",
                    "description": "step identifier.",
                    "example": 1
                  },
                  "fr_mutual_id": {
                    "type": "integer",
                    "description": "mutual identifier.",
                    "example": 1
                  },
                  "fr_professional_category_id": {
                    "type": "integer",
                    "description": "professional category identifier.",
                    "example": 1
                  },
                  "fr_work_type_id": {
                    "type": "integer",
                    "description": "work type identifier.",
                    "example": 1
                  },
                  "de_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "pt_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Contracts > ContractVersion > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `contracts/contract_version/update`",
        "deprecated": false,
        "summary": "Contracts > ContractVersion > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "employee_id",
                  "effective_on",
                  "has_payroll",
                  "created_at",
                  "updated_at",
                  "fr_forfait_jours"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier for the contract version.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "identifier for company.",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                    "example": "2024-10-06"
                  },
                  "country": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "job_title": {
                    "type": "string",
                    "description": "job title of the employee.",
                    "example": "Designer"
                  },
                  "job_catalog_level": {
                    "type": "string",
                    "description": "the level of the employee in the job catalog.",
                    "example": "Senior Designer"
                  },
                  "job_catalog_role": {
                    "type": "string",
                    "description": "the role of the employee in the job catalog.",
                    "example": "Designer"
                  },
                  "starts_on": {
                    "type": "string",
                    "description": "the day the employee is hired.",
                    "example": "2024-10-06"
                  },
                  "ends_on": {
                    "type": "string",
                    "description": "the day the employee is terminated.",
                    "example": "2024-10-06"
                  },
                  "has_payroll": {
                    "type": "boolean",
                    "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                    "example": true
                  },
                  "has_trial_period": {
                    "type": "boolean",
                    "description": "a flag that indicates if the employee has a trial period.",
                    "example": true
                  },
                  "trial_period_ends_on": {
                    "type": "string",
                    "description": "when the trial period ends.",
                    "example": "2024-10-06"
                  },
                  "salary_amount": {
                    "type": "integer",
                    "description": "the amount of money the employee earns.",
                    "example": 1000
                  },
                  "salary_frequency": {
                    "type": "string",
                    "description": "the frequency of the salary payment.",
                    "example": "yearly"
                  },
                  "working_week_days": {
                    "type": "string",
                    "description": "the days of the week the employee works.",
                    "example": "monday,tuesday,wednesday,thursday,friday"
                  },
                  "working_hours": {
                    "type": "integer",
                    "description": "the amount of hours the employee works.",
                    "example": 40
                  },
                  "working_hours_frequency": {
                    "type": "string",
                    "description": "the frequency of the working hours.",
                    "example": "week"
                  },
                  "max_legal_yearly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a year.",
                    "example": 2000
                  },
                  "maximum_weekly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a week.",
                    "example": 40
                  },
                  "created_at": {
                    "type": "string",
                    "description": "the date the contract version was created.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "the date of the last contract version updated.",
                    "example": "2024-10-06"
                  },
                  "es_has_teleworking_contract": {
                    "type": "boolean",
                    "description": "flag that indicates if the contract has teleworking.",
                    "example": true
                  },
                  "es_cotization_group": {
                    "type": "integer",
                    "description": "the group of cotization of the employee.",
                    "example": 1
                  },
                  "es_contract_observations": {
                    "type": "string",
                    "description": "observations of the contract.",
                    "example": "review contract for job promotion"
                  },
                  "es_job_description": {
                    "type": "string",
                    "description": "the job description of the employee.",
                    "example": "Designer"
                  },
                  "es_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "es_working_day_type_id": {
                    "type": "integer",
                    "description": "working day type identifier.",
                    "example": 1
                  },
                  "es_education_level_id": {
                    "type": "integer",
                    "description": "education level identifier.",
                    "example": 1
                  },
                  "es_professional_category_id": {
                    "type": "integer",
                    "description": "professional category identifier.",
                    "example": 1
                  },
                  "fr_employee_type": {
                    "type": "string",
                    "description": "employee type.",
                    "example": "apprenti"
                  },
                  "fr_forfait_jours": {
                    "type": "boolean",
                    "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                    "example": true
                  },
                  "fr_jours_par_an": {
                    "type": "integer",
                    "description": "the number of days the employee is allowed to work.",
                    "example": 200
                  },
                  "fr_coefficient": {
                    "type": "string"
                  },
                  "fr_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "fr_level_id": {
                    "type": "integer",
                    "description": "level identifier.",
                    "example": 1
                  },
                  "fr_step_id": {
                    "type": "integer",
                    "description": "step identifier.",
                    "example": 1
                  },
                  "fr_mutual_id": {
                    "type": "integer",
                    "description": "mutual identifier.",
                    "example": 1
                  },
                  "fr_professional_category_id": {
                    "type": "integer",
                    "description": "professional category identifier.",
                    "example": 1
                  },
                  "fr_work_type_id": {
                    "type": "integer",
                    "description": "work type identifier.",
                    "example": 1
                  },
                  "de_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "pt_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > CustomResources > Schema > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `custom_resources/schema/create`",
        "deprecated": false,
        "summary": "CustomResources > Schema > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "hidden"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Schema identifier",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Schema name",
                    "example": "Company Offsite"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier where this schema belongs",
                    "example": 2
                  },
                  "hidden": {
                    "type": "boolean",
                    "description": "Manages visibility of the schema"
                  },
                  "position": {
                    "type": "integer",
                    "description": "Schema position within employee profile",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Documents > Document > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `documents/document/create`",
        "deprecated": false,
        "summary": "Documents > Document > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "created_at",
                  "filename",
                  "id",
                  "public",
                  "space",
                  "updated_at"
                ],
                "properties": {
                  "author_id": {
                    "type": "integer",
                    "description": "access identifier of the author, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier, refers to /api/me endpoint.",
                    "example": 1
                  },
                  "content_type": {
                    "type": "string",
                    "description": "document content type.",
                    "example": "application/pdf"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier associated to the document.",
                    "example": 1
                  },
                  "extension": {
                    "type": "string",
                    "description": "document extension.",
                    "example": "pdf"
                  },
                  "file_size": {
                    "type": "integer",
                    "description": "document file size in bytes.",
                    "example": 1024
                  },
                  "file": {
                    "type": "string",
                    "description": "url of the document for download it.",
                    "example": "/documents/60"
                  },
                  "filename": {
                    "type": "string",
                    "description": "name of the document.",
                    "example": "document.pdf"
                  },
                  "folder_id": {
                    "type": "integer",
                    "description": "folder identifier, references to documents/folders endpoint.",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "document identifier.",
                    "example": 1
                  },
                  "is_company_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a company document.",
                    "example": true
                  },
                  "is_management_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a management document.",
                    "example": true
                  },
                  "is_pending_assignment": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is pending assignment.",
                    "example": true
                  },
                  "leave_id": {
                    "type": "integer",
                    "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                    "example": 1
                  },
                  "public": {
                    "type": "boolean",
                    "description": "flag to indicate if the document is public.",
                    "example": true
                  },
                  "signature_status": {
                    "type": "string",
                    "description": "document signature status.",
                    "enum": [
                      "pending",
                      "partially_signed",
                      "declined",
                      "completed",
                      "bounced_email",
                      "cancelled",
                      "error"
                    ],
                    "example": "pending"
                  },
                  "signees": {
                    "type": "array",
                    "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "space": {
                    "type": "string",
                    "description": "document space.",
                    "example": "company_public"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "deletion date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Documents > Document > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `documents/document/delete`",
        "deprecated": false,
        "summary": "Documents > Document > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "created_at",
                  "filename",
                  "id",
                  "public",
                  "space",
                  "updated_at"
                ],
                "properties": {
                  "author_id": {
                    "type": "integer",
                    "description": "access identifier of the author, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier, refers to /api/me endpoint.",
                    "example": 1
                  },
                  "content_type": {
                    "type": "string",
                    "description": "document content type.",
                    "example": "application/pdf"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier associated to the document.",
                    "example": 1
                  },
                  "extension": {
                    "type": "string",
                    "description": "document extension.",
                    "example": "pdf"
                  },
                  "file_size": {
                    "type": "integer",
                    "description": "document file size in bytes.",
                    "example": 1024
                  },
                  "file": {
                    "type": "string",
                    "description": "url of the document for download it.",
                    "example": "/documents/60"
                  },
                  "filename": {
                    "type": "string",
                    "description": "name of the document.",
                    "example": "document.pdf"
                  },
                  "folder_id": {
                    "type": "integer",
                    "description": "folder identifier, references to documents/folders endpoint.",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "document identifier.",
                    "example": 1
                  },
                  "is_company_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a company document.",
                    "example": true
                  },
                  "is_management_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a management document.",
                    "example": true
                  },
                  "is_pending_assignment": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is pending assignment.",
                    "example": true
                  },
                  "leave_id": {
                    "type": "integer",
                    "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                    "example": 1
                  },
                  "public": {
                    "type": "boolean",
                    "description": "flag to indicate if the document is public.",
                    "example": true
                  },
                  "signature_status": {
                    "type": "string",
                    "description": "document signature status.",
                    "enum": [
                      "pending",
                      "partially_signed",
                      "declined",
                      "completed",
                      "bounced_email",
                      "cancelled",
                      "error"
                    ],
                    "example": "pending"
                  },
                  "signees": {
                    "type": "array",
                    "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "space": {
                    "type": "string",
                    "description": "document space.",
                    "example": "company_public"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "deletion date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Documents > Document > Move to trash bins": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `documents/document/move_to_trash_bin`",
        "deprecated": false,
        "summary": "Documents > Document > Move to trash bins",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "created_at",
                  "filename",
                  "id",
                  "public",
                  "space",
                  "updated_at"
                ],
                "properties": {
                  "author_id": {
                    "type": "integer",
                    "description": "access identifier of the author, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier, refers to /api/me endpoint.",
                    "example": 1
                  },
                  "content_type": {
                    "type": "string",
                    "description": "document content type.",
                    "example": "application/pdf"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier associated to the document.",
                    "example": 1
                  },
                  "extension": {
                    "type": "string",
                    "description": "document extension.",
                    "example": "pdf"
                  },
                  "file_size": {
                    "type": "integer",
                    "description": "document file size in bytes.",
                    "example": 1024
                  },
                  "file": {
                    "type": "string",
                    "description": "url of the document for download it.",
                    "example": "/documents/60"
                  },
                  "filename": {
                    "type": "string",
                    "description": "name of the document.",
                    "example": "document.pdf"
                  },
                  "folder_id": {
                    "type": "integer",
                    "description": "folder identifier, references to documents/folders endpoint.",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "document identifier.",
                    "example": 1
                  },
                  "is_company_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a company document.",
                    "example": true
                  },
                  "is_management_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a management document.",
                    "example": true
                  },
                  "is_pending_assignment": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is pending assignment.",
                    "example": true
                  },
                  "leave_id": {
                    "type": "integer",
                    "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                    "example": 1
                  },
                  "public": {
                    "type": "boolean",
                    "description": "flag to indicate if the document is public.",
                    "example": true
                  },
                  "signature_status": {
                    "type": "string",
                    "description": "document signature status.",
                    "enum": [
                      "pending",
                      "partially_signed",
                      "declined",
                      "completed",
                      "bounced_email",
                      "cancelled",
                      "error"
                    ],
                    "example": "pending"
                  },
                  "signees": {
                    "type": "array",
                    "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "space": {
                    "type": "string",
                    "description": "document space.",
                    "example": "company_public"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "deletion date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Documents > Document > Restore from trash bins": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `documents/document/restore_from_trash_bin`",
        "deprecated": false,
        "summary": "Documents > Document > Restore from trash bins",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "created_at",
                  "filename",
                  "id",
                  "public",
                  "space",
                  "updated_at"
                ],
                "properties": {
                  "author_id": {
                    "type": "integer",
                    "description": "access identifier of the author, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier, refers to /api/me endpoint.",
                    "example": 1
                  },
                  "content_type": {
                    "type": "string",
                    "description": "document content type.",
                    "example": "application/pdf"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier associated to the document.",
                    "example": 1
                  },
                  "extension": {
                    "type": "string",
                    "description": "document extension.",
                    "example": "pdf"
                  },
                  "file_size": {
                    "type": "integer",
                    "description": "document file size in bytes.",
                    "example": 1024
                  },
                  "file": {
                    "type": "string",
                    "description": "url of the document for download it.",
                    "example": "/documents/60"
                  },
                  "filename": {
                    "type": "string",
                    "description": "name of the document.",
                    "example": "document.pdf"
                  },
                  "folder_id": {
                    "type": "integer",
                    "description": "folder identifier, references to documents/folders endpoint.",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "document identifier.",
                    "example": 1
                  },
                  "is_company_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a company document.",
                    "example": true
                  },
                  "is_management_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a management document.",
                    "example": true
                  },
                  "is_pending_assignment": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is pending assignment.",
                    "example": true
                  },
                  "leave_id": {
                    "type": "integer",
                    "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                    "example": 1
                  },
                  "public": {
                    "type": "boolean",
                    "description": "flag to indicate if the document is public.",
                    "example": true
                  },
                  "signature_status": {
                    "type": "string",
                    "description": "document signature status.",
                    "enum": [
                      "pending",
                      "partially_signed",
                      "declined",
                      "completed",
                      "bounced_email",
                      "cancelled",
                      "error"
                    ],
                    "example": "pending"
                  },
                  "signees": {
                    "type": "array",
                    "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "space": {
                    "type": "string",
                    "description": "document space.",
                    "example": "company_public"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "deletion date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Documents > Document > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `documents/document/update`",
        "deprecated": false,
        "summary": "Documents > Document > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "created_at",
                  "filename",
                  "id",
                  "public",
                  "space",
                  "updated_at"
                ],
                "properties": {
                  "author_id": {
                    "type": "integer",
                    "description": "access identifier of the author, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier, refers to /api/me endpoint.",
                    "example": 1
                  },
                  "content_type": {
                    "type": "string",
                    "description": "document content type.",
                    "example": "application/pdf"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier associated to the document.",
                    "example": 1
                  },
                  "extension": {
                    "type": "string",
                    "description": "document extension.",
                    "example": "pdf"
                  },
                  "file_size": {
                    "type": "integer",
                    "description": "document file size in bytes.",
                    "example": 1024
                  },
                  "file": {
                    "type": "string",
                    "description": "url of the document for download it.",
                    "example": "/documents/60"
                  },
                  "filename": {
                    "type": "string",
                    "description": "name of the document.",
                    "example": "document.pdf"
                  },
                  "folder_id": {
                    "type": "integer",
                    "description": "folder identifier, references to documents/folders endpoint.",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "document identifier.",
                    "example": 1
                  },
                  "is_company_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a company document.",
                    "example": true
                  },
                  "is_management_document": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is a management document.",
                    "example": true
                  },
                  "is_pending_assignment": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is pending assignment.",
                    "example": true
                  },
                  "leave_id": {
                    "type": "integer",
                    "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                    "example": 1
                  },
                  "public": {
                    "type": "boolean",
                    "description": "flag to indicate if the document is public.",
                    "example": true
                  },
                  "signature_status": {
                    "type": "string",
                    "description": "document signature status.",
                    "enum": [
                      "pending",
                      "partially_signed",
                      "declined",
                      "completed",
                      "bounced_email",
                      "cancelled",
                      "error"
                    ],
                    "example": "pending"
                  },
                  "signees": {
                    "type": "array",
                    "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "space": {
                    "type": "string",
                    "description": "document space.",
                    "example": "company_public"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "last update date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "deletion date of the document.",
                    "example": "2020-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Documents > Folder > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `documents/folder/create`",
        "deprecated": false,
        "summary": "Documents > Folder > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "active",
                  "id",
                  "name"
                ],
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "Whether the folder is active or not",
                    "example": true
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID of the folder",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "Folder ID",
                    "example": 10
                  },
                  "name": {
                    "type": "string",
                    "description": "Folder name",
                    "example": "Payslips"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Documents > Folder > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `documents/folder/update`",
        "deprecated": false,
        "summary": "Documents > Folder > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "active",
                  "id",
                  "name"
                ],
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "Whether the folder is active or not",
                    "example": true
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID of the folder",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "Folder ID",
                    "example": 10
                  },
                  "name": {
                    "type": "string",
                    "description": "Folder name",
                    "example": "Payslips"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Employees > Employee > Create with contracts": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `employees/employee/create_with_contract`",
        "deprecated": false,
        "summary": "Employees > Employee > Create with contracts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "access_id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "is_terminating"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  },
                  "access_id": {
                    "type": "integer",
                    "description": "access_id associated to the employee.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the employee.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the employee.",
                    "example": "Blanco Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the employee.",
                    "example": "Ana Blanco Perez"
                  },
                  "preferred_name": {
                    "type": "string",
                    "description": "nickname of the employee or a name that defines the employee better.",
                    "example": "Anita"
                  },
                  "birth_name": {
                    "type": "string",
                    "description": "Birthname of the employee.",
                    "example": "Anna"
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the employee (male | female).",
                    "example": "female"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "national identifier number.",
                    "example": "QKG587532Y"
                  },
                  "identifier_type": {
                    "type": "string",
                    "description": "type of identifier (ex passport).",
                    "example": "passport"
                  },
                  "email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "login_email": {
                    "type": "string",
                    "description": "email associated to the session.",
                    "example": "ana@factorial.com"
                  },
                  "birthday_on": {
                    "type": "string",
                    "description": "birthday of the employee.",
                    "example": "1990-06-06"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "address_line_1": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "secondary address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "postal code of the employee.",
                    "example": 27004
                  },
                  "city": {
                    "type": "string",
                    "description": "city of the employee.",
                    "example": "Santander"
                  },
                  "state": {
                    "type": "string",
                    "description": "state/province/region of the employee.",
                    "example": "Cantabria"
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "bank_number": {
                    "type": "string",
                    "description": "bank account number of the employee.",
                    "example": "ES6220809324751871912999"
                  },
                  "swift_bic": {
                    "type": "string",
                    "description": "code to identify banks and financial institutions globally.",
                    "example": "CAGLES2M510"
                  },
                  "bank_number_format": {
                    "type": "string",
                    "description": "bank number format.",
                    "enum": [
                      "iban",
                      "sort_code_and_account_number",
                      "routing_number_and_account_number",
                      "clabe",
                      "other",
                      "bank_name_and_account_number"
                    ],
                    "example": "iban"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "id of the company to which the employee belongs (not editable).",
                    "example": 1
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "legal entity of the employee, references to companies/legal_entities.",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the employee.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "date of last modification of the employee",
                    "example": "2024-10-06"
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee.",
                    "example": 238038194000
                  },
                  "is_terminating": {
                    "type": "boolean",
                    "description": "is the employee being terminated?"
                  },
                  "terminated_on": {
                    "type": "string",
                    "description": "termination date of the employee.",
                    "example": "2024-10-06"
                  },
                  "termination_reason": {
                    "type": "string",
                    "description": "A reason for the termination.",
                    "example": "The employee has left the company"
                  },
                  "termination_observations": {
                    "type": "string",
                    "description": "observations about the termination.",
                    "example": "Ana has been working on this project before she left"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                    "example": 1
                  },
                  "timeoff_manager_id": {
                    "type": "integer",
                    "description": "Timeoff manager id of the employee.",
                    "example": 1
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the employee.",
                    "example": 657483987
                  },
                  "company_identifier": {
                    "type": "string",
                    "description": "identity number or string used inside a company to internally identify the employee.",
                    "example": "bb9d281e"
                  },
                  "age_number": {
                    "type": "integer",
                    "description": "age of the employee.",
                    "example": 30
                  },
                  "contact_name": {
                    "type": "string",
                    "description": "name of the employee contact.",
                    "example": "Laura Delgado"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "phone number of the employee contact .",
                    "example": 647384950
                  },
                  "personal_email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "pronouns": {
                    "type": "string",
                    "description": "pronouns that an employee uses to define themselves.",
                    "example": "She/Her"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "status of the employee, true when active, false when terminated.",
                    "example": true
                  },
                  "disability_percentage_cents": {
                    "type": "integer",
                    "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                    "example": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Employees > Employee > Invites": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `employees/employee/invite`",
        "deprecated": false,
        "summary": "Employees > Employee > Invites",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "access_id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "is_terminating"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  },
                  "access_id": {
                    "type": "integer",
                    "description": "access_id associated to the employee.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the employee.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the employee.",
                    "example": "Blanco Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the employee.",
                    "example": "Ana Blanco Perez"
                  },
                  "preferred_name": {
                    "type": "string",
                    "description": "nickname of the employee or a name that defines the employee better.",
                    "example": "Anita"
                  },
                  "birth_name": {
                    "type": "string",
                    "description": "Birthname of the employee.",
                    "example": "Anna"
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the employee (male | female).",
                    "example": "female"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "national identifier number.",
                    "example": "QKG587532Y"
                  },
                  "identifier_type": {
                    "type": "string",
                    "description": "type of identifier (ex passport).",
                    "example": "passport"
                  },
                  "email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "login_email": {
                    "type": "string",
                    "description": "email associated to the session.",
                    "example": "ana@factorial.com"
                  },
                  "birthday_on": {
                    "type": "string",
                    "description": "birthday of the employee.",
                    "example": "1990-06-06"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "address_line_1": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "secondary address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "postal code of the employee.",
                    "example": 27004
                  },
                  "city": {
                    "type": "string",
                    "description": "city of the employee.",
                    "example": "Santander"
                  },
                  "state": {
                    "type": "string",
                    "description": "state/province/region of the employee.",
                    "example": "Cantabria"
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "bank_number": {
                    "type": "string",
                    "description": "bank account number of the employee.",
                    "example": "ES6220809324751871912999"
                  },
                  "swift_bic": {
                    "type": "string",
                    "description": "code to identify banks and financial institutions globally.",
                    "example": "CAGLES2M510"
                  },
                  "bank_number_format": {
                    "type": "string",
                    "description": "bank number format.",
                    "enum": [
                      "iban",
                      "sort_code_and_account_number",
                      "routing_number_and_account_number",
                      "clabe",
                      "other",
                      "bank_name_and_account_number"
                    ],
                    "example": "iban"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "id of the company to which the employee belongs (not editable).",
                    "example": 1
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "legal entity of the employee, references to companies/legal_entities.",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the employee.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "date of last modification of the employee",
                    "example": "2024-10-06"
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee.",
                    "example": 238038194000
                  },
                  "is_terminating": {
                    "type": "boolean",
                    "description": "is the employee being terminated?"
                  },
                  "terminated_on": {
                    "type": "string",
                    "description": "termination date of the employee.",
                    "example": "2024-10-06"
                  },
                  "termination_reason": {
                    "type": "string",
                    "description": "A reason for the termination.",
                    "example": "The employee has left the company"
                  },
                  "termination_observations": {
                    "type": "string",
                    "description": "observations about the termination.",
                    "example": "Ana has been working on this project before she left"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                    "example": 1
                  },
                  "timeoff_manager_id": {
                    "type": "integer",
                    "description": "Timeoff manager id of the employee.",
                    "example": 1
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the employee.",
                    "example": 657483987
                  },
                  "company_identifier": {
                    "type": "string",
                    "description": "identity number or string used inside a company to internally identify the employee.",
                    "example": "bb9d281e"
                  },
                  "age_number": {
                    "type": "integer",
                    "description": "age of the employee.",
                    "example": 30
                  },
                  "contact_name": {
                    "type": "string",
                    "description": "name of the employee contact.",
                    "example": "Laura Delgado"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "phone number of the employee contact .",
                    "example": 647384950
                  },
                  "personal_email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "pronouns": {
                    "type": "string",
                    "description": "pronouns that an employee uses to define themselves.",
                    "example": "She/Her"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "status of the employee, true when active, false when terminated.",
                    "example": true
                  },
                  "disability_percentage_cents": {
                    "type": "integer",
                    "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                    "example": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Employees > Employee > Terminates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `employees/employee/terminate`",
        "deprecated": false,
        "summary": "Employees > Employee > Terminates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "access_id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "is_terminating"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  },
                  "access_id": {
                    "type": "integer",
                    "description": "access_id associated to the employee.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the employee.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the employee.",
                    "example": "Blanco Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the employee.",
                    "example": "Ana Blanco Perez"
                  },
                  "preferred_name": {
                    "type": "string",
                    "description": "nickname of the employee or a name that defines the employee better.",
                    "example": "Anita"
                  },
                  "birth_name": {
                    "type": "string",
                    "description": "Birthname of the employee.",
                    "example": "Anna"
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the employee (male | female).",
                    "example": "female"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "national identifier number.",
                    "example": "QKG587532Y"
                  },
                  "identifier_type": {
                    "type": "string",
                    "description": "type of identifier (ex passport).",
                    "example": "passport"
                  },
                  "email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "login_email": {
                    "type": "string",
                    "description": "email associated to the session.",
                    "example": "ana@factorial.com"
                  },
                  "birthday_on": {
                    "type": "string",
                    "description": "birthday of the employee.",
                    "example": "1990-06-06"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "address_line_1": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "secondary address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "postal code of the employee.",
                    "example": 27004
                  },
                  "city": {
                    "type": "string",
                    "description": "city of the employee.",
                    "example": "Santander"
                  },
                  "state": {
                    "type": "string",
                    "description": "state/province/region of the employee.",
                    "example": "Cantabria"
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "bank_number": {
                    "type": "string",
                    "description": "bank account number of the employee.",
                    "example": "ES6220809324751871912999"
                  },
                  "swift_bic": {
                    "type": "string",
                    "description": "code to identify banks and financial institutions globally.",
                    "example": "CAGLES2M510"
                  },
                  "bank_number_format": {
                    "type": "string",
                    "description": "bank number format.",
                    "enum": [
                      "iban",
                      "sort_code_and_account_number",
                      "routing_number_and_account_number",
                      "clabe",
                      "other",
                      "bank_name_and_account_number"
                    ],
                    "example": "iban"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "id of the company to which the employee belongs (not editable).",
                    "example": 1
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "legal entity of the employee, references to companies/legal_entities.",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the employee.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "date of last modification of the employee",
                    "example": "2024-10-06"
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee.",
                    "example": 238038194000
                  },
                  "is_terminating": {
                    "type": "boolean",
                    "description": "is the employee being terminated?"
                  },
                  "terminated_on": {
                    "type": "string",
                    "description": "termination date of the employee.",
                    "example": "2024-10-06"
                  },
                  "termination_reason": {
                    "type": "string",
                    "description": "A reason for the termination.",
                    "example": "The employee has left the company"
                  },
                  "termination_observations": {
                    "type": "string",
                    "description": "observations about the termination.",
                    "example": "Ana has been working on this project before she left"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                    "example": 1
                  },
                  "timeoff_manager_id": {
                    "type": "integer",
                    "description": "Timeoff manager id of the employee.",
                    "example": 1
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the employee.",
                    "example": 657483987
                  },
                  "company_identifier": {
                    "type": "string",
                    "description": "identity number or string used inside a company to internally identify the employee.",
                    "example": "bb9d281e"
                  },
                  "age_number": {
                    "type": "integer",
                    "description": "age of the employee.",
                    "example": 30
                  },
                  "contact_name": {
                    "type": "string",
                    "description": "name of the employee contact.",
                    "example": "Laura Delgado"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "phone number of the employee contact .",
                    "example": 647384950
                  },
                  "personal_email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "pronouns": {
                    "type": "string",
                    "description": "pronouns that an employee uses to define themselves.",
                    "example": "She/Her"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "status of the employee, true when active, false when terminated.",
                    "example": true
                  },
                  "disability_percentage_cents": {
                    "type": "integer",
                    "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                    "example": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Employees > Employee > Unterminates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `employees/employee/unterminate`",
        "deprecated": false,
        "summary": "Employees > Employee > Unterminates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "access_id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "is_terminating"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  },
                  "access_id": {
                    "type": "integer",
                    "description": "access_id associated to the employee.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the employee.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the employee.",
                    "example": "Blanco Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the employee.",
                    "example": "Ana Blanco Perez"
                  },
                  "preferred_name": {
                    "type": "string",
                    "description": "nickname of the employee or a name that defines the employee better.",
                    "example": "Anita"
                  },
                  "birth_name": {
                    "type": "string",
                    "description": "Birthname of the employee.",
                    "example": "Anna"
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the employee (male | female).",
                    "example": "female"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "national identifier number.",
                    "example": "QKG587532Y"
                  },
                  "identifier_type": {
                    "type": "string",
                    "description": "type of identifier (ex passport).",
                    "example": "passport"
                  },
                  "email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "login_email": {
                    "type": "string",
                    "description": "email associated to the session.",
                    "example": "ana@factorial.com"
                  },
                  "birthday_on": {
                    "type": "string",
                    "description": "birthday of the employee.",
                    "example": "1990-06-06"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "address_line_1": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "secondary address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "postal code of the employee.",
                    "example": 27004
                  },
                  "city": {
                    "type": "string",
                    "description": "city of the employee.",
                    "example": "Santander"
                  },
                  "state": {
                    "type": "string",
                    "description": "state/province/region of the employee.",
                    "example": "Cantabria"
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "bank_number": {
                    "type": "string",
                    "description": "bank account number of the employee.",
                    "example": "ES6220809324751871912999"
                  },
                  "swift_bic": {
                    "type": "string",
                    "description": "code to identify banks and financial institutions globally.",
                    "example": "CAGLES2M510"
                  },
                  "bank_number_format": {
                    "type": "string",
                    "description": "bank number format.",
                    "enum": [
                      "iban",
                      "sort_code_and_account_number",
                      "routing_number_and_account_number",
                      "clabe",
                      "other",
                      "bank_name_and_account_number"
                    ],
                    "example": "iban"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "id of the company to which the employee belongs (not editable).",
                    "example": 1
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "legal entity of the employee, references to companies/legal_entities.",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the employee.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "date of last modification of the employee",
                    "example": "2024-10-06"
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee.",
                    "example": 238038194000
                  },
                  "is_terminating": {
                    "type": "boolean",
                    "description": "is the employee being terminated?"
                  },
                  "terminated_on": {
                    "type": "string",
                    "description": "termination date of the employee.",
                    "example": "2024-10-06"
                  },
                  "termination_reason": {
                    "type": "string",
                    "description": "A reason for the termination.",
                    "example": "The employee has left the company"
                  },
                  "termination_observations": {
                    "type": "string",
                    "description": "observations about the termination.",
                    "example": "Ana has been working on this project before she left"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                    "example": 1
                  },
                  "timeoff_manager_id": {
                    "type": "integer",
                    "description": "Timeoff manager id of the employee.",
                    "example": 1
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the employee.",
                    "example": 657483987
                  },
                  "company_identifier": {
                    "type": "string",
                    "description": "identity number or string used inside a company to internally identify the employee.",
                    "example": "bb9d281e"
                  },
                  "age_number": {
                    "type": "integer",
                    "description": "age of the employee.",
                    "example": 30
                  },
                  "contact_name": {
                    "type": "string",
                    "description": "name of the employee contact.",
                    "example": "Laura Delgado"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "phone number of the employee contact .",
                    "example": 647384950
                  },
                  "personal_email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "pronouns": {
                    "type": "string",
                    "description": "pronouns that an employee uses to define themselves.",
                    "example": "She/Her"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "status of the employee, true when active, false when terminated.",
                    "example": true
                  },
                  "disability_percentage_cents": {
                    "type": "integer",
                    "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                    "example": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Employees > Employee > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `employees/employee/update`",
        "deprecated": false,
        "summary": "Employees > Employee > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "access_id",
                  "first_name",
                  "last_name",
                  "full_name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "is_terminating"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  },
                  "access_id": {
                    "type": "integer",
                    "description": "access_id associated to the employee.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the employee.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the employee.",
                    "example": "Blanco Perez"
                  },
                  "full_name": {
                    "type": "string",
                    "description": "full name of the employee.",
                    "example": "Ana Blanco Perez"
                  },
                  "preferred_name": {
                    "type": "string",
                    "description": "nickname of the employee or a name that defines the employee better.",
                    "example": "Anita"
                  },
                  "birth_name": {
                    "type": "string",
                    "description": "Birthname of the employee.",
                    "example": "Anna"
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the employee (male | female).",
                    "example": "female"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "national identifier number.",
                    "example": "QKG587532Y"
                  },
                  "identifier_type": {
                    "type": "string",
                    "description": "type of identifier (ex passport).",
                    "example": "passport"
                  },
                  "email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "login_email": {
                    "type": "string",
                    "description": "email associated to the session.",
                    "example": "ana@factorial.com"
                  },
                  "birthday_on": {
                    "type": "string",
                    "description": "birthday of the employee.",
                    "example": "1990-06-06"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "address_line_1": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "secondary address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "postal code of the employee.",
                    "example": 27004
                  },
                  "city": {
                    "type": "string",
                    "description": "city of the employee.",
                    "example": "Santander"
                  },
                  "state": {
                    "type": "string",
                    "description": "state/province/region of the employee.",
                    "example": "Cantabria"
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "bank_number": {
                    "type": "string",
                    "description": "bank account number of the employee.",
                    "example": "ES6220809324751871912999"
                  },
                  "swift_bic": {
                    "type": "string",
                    "description": "code to identify banks and financial institutions globally.",
                    "example": "CAGLES2M510"
                  },
                  "bank_number_format": {
                    "type": "string",
                    "description": "bank number format.",
                    "enum": [
                      "iban",
                      "sort_code_and_account_number",
                      "routing_number_and_account_number",
                      "clabe",
                      "other",
                      "bank_name_and_account_number"
                    ],
                    "example": "iban"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "id of the company to which the employee belongs (not editable).",
                    "example": 1
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "legal entity of the employee, references to companies/legal_entities.",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string",
                    "description": "creation date of the employee.",
                    "example": "2024-10-06"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "date of last modification of the employee",
                    "example": "2024-10-06"
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee.",
                    "example": 238038194000
                  },
                  "is_terminating": {
                    "type": "boolean",
                    "description": "is the employee being terminated?"
                  },
                  "terminated_on": {
                    "type": "string",
                    "description": "termination date of the employee.",
                    "example": "2024-10-06"
                  },
                  "termination_reason": {
                    "type": "string",
                    "description": "A reason for the termination.",
                    "example": "The employee has left the company"
                  },
                  "termination_observations": {
                    "type": "string",
                    "description": "observations about the termination.",
                    "example": "Ana has been working on this project before she left"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                    "example": 1
                  },
                  "timeoff_manager_id": {
                    "type": "integer",
                    "description": "Timeoff manager id of the employee.",
                    "example": 1
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the employee.",
                    "example": 657483987
                  },
                  "company_identifier": {
                    "type": "string",
                    "description": "identity number or string used inside a company to internally identify the employee.",
                    "example": "bb9d281e"
                  },
                  "age_number": {
                    "type": "integer",
                    "description": "age of the employee.",
                    "example": 30
                  },
                  "contact_name": {
                    "type": "string",
                    "description": "name of the employee contact.",
                    "example": "Laura Delgado"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "phone number of the employee contact .",
                    "example": 647384950
                  },
                  "personal_email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "pronouns": {
                    "type": "string",
                    "description": "pronouns that an employee uses to define themselves.",
                    "example": "She/Her"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "status of the employee, true when active, false when terminated.",
                    "example": true
                  },
                  "disability_percentage_cents": {
                    "type": "integer",
                    "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                    "example": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Finance > CostCenter > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `finance/cost_center/create`",
        "deprecated": false,
        "summary": "Finance > CostCenter > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "active_employees_count",
                  "historical_employees_count",
                  "status"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "legal_entity_id": {
                    "type": "integer"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active_employees_count": {
                    "type": "integer"
                  },
                  "historical_employees_count": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "deactivation_date": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Finance > CostCenter > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `finance/cost_center/delete`",
        "deprecated": false,
        "summary": "Finance > CostCenter > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "active_employees_count",
                  "historical_employees_count",
                  "status"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "legal_entity_id": {
                    "type": "integer"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active_employees_count": {
                    "type": "integer"
                  },
                  "historical_employees_count": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "deactivation_date": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Finance > CostCenter > Edits": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `finance/cost_center/edit`",
        "deprecated": false,
        "summary": "Finance > CostCenter > Edits",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "active_employees_count",
                  "historical_employees_count",
                  "status"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "legal_entity_id": {
                    "type": "integer"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active_employees_count": {
                    "type": "integer"
                  },
                  "historical_employees_count": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "deactivation_date": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Locations > Location > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `locations/location/create`",
        "deprecated": false,
        "summary": "Locations > Location > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "name",
                  "main"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address_line_1": {
                    "type": "string"
                  },
                  "address_line_2": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "radius": {
                    "type": "number"
                  },
                  "siret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Locations > Location > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `locations/location/delete`",
        "deprecated": false,
        "summary": "Locations > Location > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "name",
                  "main"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address_line_1": {
                    "type": "string"
                  },
                  "address_line_2": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "radius": {
                    "type": "number"
                  },
                  "siret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Locations > Location > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `locations/location/update`",
        "deprecated": false,
        "summary": "Locations > Location > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "name",
                  "main"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address_line_1": {
                    "type": "string"
                  },
                  "address_line_2": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "radius": {
                    "type": "number"
                  },
                  "siret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Payroll > PolicyPeriod > Change statuses": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `payroll/policy_period/change_status`",
        "deprecated": false,
        "summary": "Payroll > PolicyPeriod > Change statuses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "starts_on",
                  "policy_id",
                  "company_id",
                  "ends_on",
                  "period"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Policy period id",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Policy name with start and end date",
                    "example": "Policy name example 20 aug - 13 sep"
                  },
                  "starts_on": {
                    "type": "string",
                    "description": "The start date of the policy period",
                    "example": "2020-01-01"
                  },
                  "policy_id": {
                    "type": "integer",
                    "description": "The id of the policy associated with the policy period",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "The id of the company",
                    "example": 1
                  },
                  "ends_on": {
                    "type": "string",
                    "description": "The start date of the policy period",
                    "example": "2020-01-01"
                  },
                  "period": {
                    "type": "string",
                    "description": "Period for the policy",
                    "example": "20 aug - 13 sep 2021"
                  },
                  "status": {
                    "type": "string",
                    "description": "Policy period status",
                    "example": "preparation"
                  },
                  "policy_name": {
                    "type": "string",
                    "description": "Policy name",
                    "example": "Policy name example"
                  },
                  "calculation_started_at": {
                    "type": "string",
                    "description": "The date and time the calculation started",
                    "example": "2020-01-01"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Payroll > Supplement > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `payroll/supplement/create`",
        "deprecated": false,
        "summary": "Payroll > Supplement > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "company_id",
                  "unit"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The identifier of the supplement",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "The identifier of the employee associated with the supplement",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "The identifier of the company associated with the supplement",
                    "example": 1
                  },
                  "contracts_compensation_id": {
                    "type": "integer",
                    "description": "The contract compensation identifier associated with the supplement",
                    "example": 1
                  },
                  "contracts_taxonomy_id": {
                    "type": "integer",
                    "description": "The taxonomy identifier associated with the supplement",
                    "example": 1
                  },
                  "amount_in_cents": {
                    "type": "integer",
                    "description": "The amount of the supplement in cents",
                    "example": 10000
                  },
                  "unit": {
                    "type": "string",
                    "description": "The unit of the supplement",
                    "enum": [
                      "money",
                      "units",
                      "time"
                    ],
                    "example": "hours"
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "The date on which the supplement becomes effective",
                    "example": "2024-01-01"
                  },
                  "created_at": {
                    "type": "boolean",
                    "description": "The created at date when the supplement was created",
                    "example": "2024-01-01T12:00:00Z"
                  },
                  "updated_at": {
                    "type": "boolean",
                    "description": "The last updated at date when the supplement was last updated",
                    "example": "2024-01-05T12:00:00Z"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the supplement",
                    "example": "Supplement for additional work hours"
                  },
                  "payroll_policy_period_id": {
                    "type": "integer",
                    "description": "The payroll policy period identifier associated with the supplement",
                    "example": 23456
                  },
                  "employee_observations": {
                    "type": "array",
                    "description": "Observations on the employee made by the admin or manager",
                    "example": [
                      "Worked extra shifts",
                      "Bonus for holiday work"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "raw_minutes_in_cents": {
                    "type": "integer",
                    "description": "The raw value of minutes in cents associated with the supplement",
                    "example": 5000
                  },
                  "minutes_in_cents": {
                    "type": "integer",
                    "description": "The value of minutes in cents after adjustments",
                    "example": 4800
                  },
                  "equivalent_minutes_in_cents": {
                    "type": "integer",
                    "description": "The equivalent value of minutes in cents for payroll processing",
                    "example": 4600
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency used for the supplement, typically in ISO 4217 format",
                    "example": "USD"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "The legal entity identifier associated with the supplement",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Payroll > Supplement > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `payroll/supplement/delete`",
        "deprecated": false,
        "summary": "Payroll > Supplement > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "company_id",
                  "unit"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The identifier of the supplement",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "The identifier of the employee associated with the supplement",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "The identifier of the company associated with the supplement",
                    "example": 1
                  },
                  "contracts_compensation_id": {
                    "type": "integer",
                    "description": "The contract compensation identifier associated with the supplement",
                    "example": 1
                  },
                  "contracts_taxonomy_id": {
                    "type": "integer",
                    "description": "The taxonomy identifier associated with the supplement",
                    "example": 1
                  },
                  "amount_in_cents": {
                    "type": "integer",
                    "description": "The amount of the supplement in cents",
                    "example": 10000
                  },
                  "unit": {
                    "type": "string",
                    "description": "The unit of the supplement",
                    "enum": [
                      "money",
                      "units",
                      "time"
                    ],
                    "example": "hours"
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "The date on which the supplement becomes effective",
                    "example": "2024-01-01"
                  },
                  "created_at": {
                    "type": "boolean",
                    "description": "The created at date when the supplement was created",
                    "example": "2024-01-01T12:00:00Z"
                  },
                  "updated_at": {
                    "type": "boolean",
                    "description": "The last updated at date when the supplement was last updated",
                    "example": "2024-01-05T12:00:00Z"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the supplement",
                    "example": "Supplement for additional work hours"
                  },
                  "payroll_policy_period_id": {
                    "type": "integer",
                    "description": "The payroll policy period identifier associated with the supplement",
                    "example": 23456
                  },
                  "employee_observations": {
                    "type": "array",
                    "description": "Observations on the employee made by the admin or manager",
                    "example": [
                      "Worked extra shifts",
                      "Bonus for holiday work"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "raw_minutes_in_cents": {
                    "type": "integer",
                    "description": "The raw value of minutes in cents associated with the supplement",
                    "example": 5000
                  },
                  "minutes_in_cents": {
                    "type": "integer",
                    "description": "The value of minutes in cents after adjustments",
                    "example": 4800
                  },
                  "equivalent_minutes_in_cents": {
                    "type": "integer",
                    "description": "The equivalent value of minutes in cents for payroll processing",
                    "example": 4600
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency used for the supplement, typically in ISO 4217 format",
                    "example": "USD"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "The legal entity identifier associated with the supplement",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Payroll > Supplement > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `payroll/supplement/update`",
        "deprecated": false,
        "summary": "Payroll > Supplement > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "company_id",
                  "unit"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The identifier of the supplement",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "The identifier of the employee associated with the supplement",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "The identifier of the company associated with the supplement",
                    "example": 1
                  },
                  "contracts_compensation_id": {
                    "type": "integer",
                    "description": "The contract compensation identifier associated with the supplement",
                    "example": 1
                  },
                  "contracts_taxonomy_id": {
                    "type": "integer",
                    "description": "The taxonomy identifier associated with the supplement",
                    "example": 1
                  },
                  "amount_in_cents": {
                    "type": "integer",
                    "description": "The amount of the supplement in cents",
                    "example": 10000
                  },
                  "unit": {
                    "type": "string",
                    "description": "The unit of the supplement",
                    "enum": [
                      "money",
                      "units",
                      "time"
                    ],
                    "example": "hours"
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "The date on which the supplement becomes effective",
                    "example": "2024-01-01"
                  },
                  "created_at": {
                    "type": "boolean",
                    "description": "The created at date when the supplement was created",
                    "example": "2024-01-01T12:00:00Z"
                  },
                  "updated_at": {
                    "type": "boolean",
                    "description": "The last updated at date when the supplement was last updated",
                    "example": "2024-01-05T12:00:00Z"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the supplement",
                    "example": "Supplement for additional work hours"
                  },
                  "payroll_policy_period_id": {
                    "type": "integer",
                    "description": "The payroll policy period identifier associated with the supplement",
                    "example": 23456
                  },
                  "employee_observations": {
                    "type": "array",
                    "description": "Observations on the employee made by the admin or manager",
                    "example": [
                      "Worked extra shifts",
                      "Bonus for holiday work"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "raw_minutes_in_cents": {
                    "type": "integer",
                    "description": "The raw value of minutes in cents associated with the supplement",
                    "example": 5000
                  },
                  "minutes_in_cents": {
                    "type": "integer",
                    "description": "The value of minutes in cents after adjustments",
                    "example": 4800
                  },
                  "equivalent_minutes_in_cents": {
                    "type": "integer",
                    "description": "The equivalent value of minutes in cents for payroll processing",
                    "example": 4600
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency used for the supplement, typically in ISO 4217 format",
                    "example": "USD"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "The legal entity identifier associated with the supplement",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > PayrollIntegrationsBase > Code > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `payroll_integrations_base/code/create`",
        "deprecated": false,
        "summary": "PayrollIntegrationsBase > Code > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "code",
                  "codeable_id",
                  "codeable_type",
                  "integration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Code identifier",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID where the code belongs to",
                    "example": 2
                  },
                  "code": {
                    "type": "string",
                    "description": "Code value",
                    "example": "COD-51"
                  },
                  "codeable_id": {
                    "type": "integer",
                    "description": "Related object ID. Used together with codeable_type",
                    "example": 5
                  },
                  "codeable_type": {
                    "type": "string",
                    "description": "Related object type. Used together with codeable_id",
                    "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                  },
                  "integration": {
                    "type": "string",
                    "description": "Integration name",
                    "enum": [
                      "a3innuva",
                      "a3nom",
                      "paierh",
                      "silae",
                      "silae_api",
                      "datev",
                      "datev_api",
                      "datev_lug_api",
                      "zucchetti"
                    ],
                    "example": "a3innuva"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > PayrollIntegrationsBase > Code > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `payroll_integrations_base/code/delete`",
        "deprecated": false,
        "summary": "PayrollIntegrationsBase > Code > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "code",
                  "codeable_id",
                  "codeable_type",
                  "integration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Code identifier",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID where the code belongs to",
                    "example": 2
                  },
                  "code": {
                    "type": "string",
                    "description": "Code value",
                    "example": "COD-51"
                  },
                  "codeable_id": {
                    "type": "integer",
                    "description": "Related object ID. Used together with codeable_type",
                    "example": 5
                  },
                  "codeable_type": {
                    "type": "string",
                    "description": "Related object type. Used together with codeable_id",
                    "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                  },
                  "integration": {
                    "type": "string",
                    "description": "Integration name",
                    "enum": [
                      "a3innuva",
                      "a3nom",
                      "paierh",
                      "silae",
                      "silae_api",
                      "datev",
                      "datev_api",
                      "datev_lug_api",
                      "zucchetti"
                    ],
                    "example": "a3innuva"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > PayrollIntegrationsBase > Code > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `payroll_integrations_base/code/update`",
        "deprecated": false,
        "summary": "PayrollIntegrationsBase > Code > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "code",
                  "codeable_id",
                  "codeable_type",
                  "integration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Code identifier",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID where the code belongs to",
                    "example": 2
                  },
                  "code": {
                    "type": "string",
                    "description": "Code value",
                    "example": "COD-51"
                  },
                  "codeable_id": {
                    "type": "integer",
                    "description": "Related object ID. Used together with codeable_type",
                    "example": 5
                  },
                  "codeable_type": {
                    "type": "string",
                    "description": "Related object type. Used together with codeable_id",
                    "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                  },
                  "integration": {
                    "type": "string",
                    "description": "Integration name",
                    "enum": [
                      "a3innuva",
                      "a3nom",
                      "paierh",
                      "silae",
                      "silae_api",
                      "datev",
                      "datev_api",
                      "datev_lug_api",
                      "zucchetti"
                    ],
                    "example": "a3innuva"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/create`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/delete`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Duplicates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/duplicate`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Duplicates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Remind in bulks": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/remind_in_bulk`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Remind in bulks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Reopens": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/reopen`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Reopens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Starts": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/start`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Starts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Stops": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/stop`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Stops",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Toggle archives": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/toggle_archive`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Toggle archives",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Update agreements configurations": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/update_agreements_configuration`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Update agreements configurations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Update basic infos": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/update_basic_info`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Update basic infos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Update deadlines": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/update_deadline`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Update deadlines",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Update reviewer strategies": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/update_reviewer_strategies`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Update reviewer strategies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Update schedules": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/update_schedule`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Update schedules",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Performance > ReviewProcess > Update target strategies": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `performance/review_process/update_target_strategy`",
        "deprecated": false,
        "summary": "Performance > ReviewProcess > Update target strategies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "status",
                  "start_validation_errors",
                  "archived",
                  "agreements_configuration",
                  "employee_score_configuration"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Review process name",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "status": {
                    "type": "string",
                    "description": "Review process status",
                    "enum": [
                      "draft",
                      "scheduled",
                      "active",
                      "finished"
                    ],
                    "example": "draft"
                  },
                  "target_strategy": {
                    "type": "object",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "example": "all_employees"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "start_validation_errors": {
                    "type": "array",
                    "description": "Missing or invalid information to be able to start the review process",
                    "enum": [
                      "missing_deadline",
                      "invalid_deadline",
                      "missing_title",
                      "missing_target_strategy",
                      "missing_target_strategy_members",
                      "missing_reviewer_strategy",
                      "missing_questions",
                      "missing_potential_reviewers"
                    ],
                    "example": [
                      "invalid_deadline",
                      "missing_questions"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the review process is archived or not"
                  },
                  "agreements_configuration": {
                    "type": "object",
                    "description": "Configuration of the action plans feature"
                  },
                  "employee_score_configuration": {
                    "type": "object"
                  },
                  "last_bulk_reminder": {
                    "type": "string",
                    "description": "Date when the last bulk reminder was sent",
                    "example": "2024-03-01T00:00:00Z"
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > ShiftManagement > Shift > Bulk deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `shift_management/shift/bulk_delete`",
        "deprecated": false,
        "summary": "ShiftManagement > Shift > Bulk deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "state",
                  "employee_id",
                  "start_at",
                  "end_at",
                  "timezone",
                  "local_start_at",
                  "local_end_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Shift identifier",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the shift",
                    "example": "Morning shift"
                  },
                  "state": {
                    "type": "string",
                    "example": "published, draft"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Shift location identifier",
                    "example": 3
                  },
                  "locations_work_area_id": {
                    "type": "integer",
                    "description": "Shift work area identifier",
                    "example": 5
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "example": 45
                  },
                  "start_at": {
                    "type": "string",
                    "description": "Start date of the shift",
                    "example": "2020-09-07T06:00:00.000+00:00"
                  },
                  "end_at": {
                    "type": "string",
                    "description": "End date of the shift",
                    "example": "2020-09-07T15:00:00.000+00:00"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Shift notes",
                    "example": "This is a shift note"
                  },
                  "extra_hours": {
                    "type": "boolean",
                    "description": "Flag to indicate if the shift has extra hours"
                  },
                  "default_shift_title": {
                    "type": "string",
                    "description": "Default shift title"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Shift timezone",
                    "example": "Europe/Madrid"
                  },
                  "local_start_at": {
                    "type": "string",
                    "description": "Local start date of the shift",
                    "example": "2020-09-07T07:00:00.000+00:00"
                  },
                  "local_end_at": {
                    "type": "string",
                    "description": "Local end date of the shift",
                    "example": "2020-09-07T15:00:00.000+00:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > ShiftManagement > Shift > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `shift_management/shift/create`",
        "deprecated": false,
        "summary": "ShiftManagement > Shift > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "state",
                  "employee_id",
                  "start_at",
                  "end_at",
                  "timezone",
                  "local_start_at",
                  "local_end_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Shift identifier",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the shift",
                    "example": "Morning shift"
                  },
                  "state": {
                    "type": "string",
                    "example": "published, draft"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Shift location identifier",
                    "example": 3
                  },
                  "locations_work_area_id": {
                    "type": "integer",
                    "description": "Shift work area identifier",
                    "example": 5
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "example": 45
                  },
                  "start_at": {
                    "type": "string",
                    "description": "Start date of the shift",
                    "example": "2020-09-07T06:00:00.000+00:00"
                  },
                  "end_at": {
                    "type": "string",
                    "description": "End date of the shift",
                    "example": "2020-09-07T15:00:00.000+00:00"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Shift notes",
                    "example": "This is a shift note"
                  },
                  "extra_hours": {
                    "type": "boolean",
                    "description": "Flag to indicate if the shift has extra hours"
                  },
                  "default_shift_title": {
                    "type": "string",
                    "description": "Default shift title"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Shift timezone",
                    "example": "Europe/Madrid"
                  },
                  "local_start_at": {
                    "type": "string",
                    "description": "Local start date of the shift",
                    "example": "2020-09-07T07:00:00.000+00:00"
                  },
                  "local_end_at": {
                    "type": "string",
                    "description": "Local end date of the shift",
                    "example": "2020-09-07T15:00:00.000+00:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > ShiftManagement > Shift > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `shift_management/shift/delete`",
        "deprecated": false,
        "summary": "ShiftManagement > Shift > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "state",
                  "employee_id",
                  "start_at",
                  "end_at",
                  "timezone",
                  "local_start_at",
                  "local_end_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Shift identifier",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the shift",
                    "example": "Morning shift"
                  },
                  "state": {
                    "type": "string",
                    "example": "published, draft"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Shift location identifier",
                    "example": 3
                  },
                  "locations_work_area_id": {
                    "type": "integer",
                    "description": "Shift work area identifier",
                    "example": 5
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "example": 45
                  },
                  "start_at": {
                    "type": "string",
                    "description": "Start date of the shift",
                    "example": "2020-09-07T06:00:00.000+00:00"
                  },
                  "end_at": {
                    "type": "string",
                    "description": "End date of the shift",
                    "example": "2020-09-07T15:00:00.000+00:00"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Shift notes",
                    "example": "This is a shift note"
                  },
                  "extra_hours": {
                    "type": "boolean",
                    "description": "Flag to indicate if the shift has extra hours"
                  },
                  "default_shift_title": {
                    "type": "string",
                    "description": "Default shift title"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Shift timezone",
                    "example": "Europe/Madrid"
                  },
                  "local_start_at": {
                    "type": "string",
                    "description": "Local start date of the shift",
                    "example": "2020-09-07T07:00:00.000+00:00"
                  },
                  "local_end_at": {
                    "type": "string",
                    "description": "Local end date of the shift",
                    "example": "2020-09-07T15:00:00.000+00:00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Bulk change statuses": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/bulk_change_status`",
        "deprecated": false,
        "summary": "Tasks > Task > Bulk change statuses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Bulk deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/bulk_delete`",
        "deprecated": false,
        "summary": "Tasks > Task > Bulk deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Copies": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/copy`",
        "deprecated": false,
        "summary": "Tasks > Task > Copies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/create`",
        "deprecated": false,
        "summary": "Tasks > Task > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Create comments": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/create_comment`",
        "deprecated": false,
        "summary": "Tasks > Task > Create comments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/delete`",
        "deprecated": false,
        "summary": "Tasks > Task > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Resolves": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/resolve`",
        "deprecated": false,
        "summary": "Tasks > Task > Resolves",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Tasks > Task > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `tasks/task/update`",
        "deprecated": false,
        "summary": "Tasks > Task > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "assignee_ids",
                  "created_at",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the task",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Upload payroll files"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the author of the task",
                    "example": 1
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the task",
                    "example": "Do it as soon as possible"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "Due on date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_employee_id": {
                    "type": "integer",
                    "description": "Employee id of the author of the task",
                    "example": 1
                  },
                  "completed_at": {
                    "type": "string",
                    "description": "Completed at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "completed_by_id": {
                    "type": "integer",
                    "description": "Completed by identifier",
                    "example": 1
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated at date of the task",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the task",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "done"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Teams > Membership > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `teams/membership/create`",
        "deprecated": false,
        "summary": "Teams > Membership > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "team_id",
                  "lead"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Membership ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID of the membership",
                    "example": 5
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee ID of the membership",
                    "example": 12
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "Team ID of the membership",
                    "example": 4
                  },
                  "lead": {
                    "type": "boolean",
                    "description": "Whether the employee is a lead of the team or not",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Teams > Membership > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `teams/membership/delete`",
        "deprecated": false,
        "summary": "Teams > Membership > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "team_id",
                  "lead"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Membership ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID of the membership",
                    "example": 5
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee ID of the membership",
                    "example": 12
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "Team ID of the membership",
                    "example": 4
                  },
                  "lead": {
                    "type": "boolean",
                    "description": "Whether the employee is a lead of the team or not",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Teams > Membership > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `teams/membership/update`",
        "deprecated": false,
        "summary": "Teams > Membership > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id",
                  "team_id",
                  "lead"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Membership ID",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID of the membership",
                    "example": 5
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee ID of the membership",
                    "example": 12
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "Team ID of the membership",
                    "example": 4
                  },
                  "lead": {
                    "type": "boolean",
                    "description": "Whether the employee is a lead of the team or not",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Teams > Team > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `teams/team/create`",
        "deprecated": false,
        "summary": "Teams > Team > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "lead_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "company_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Teams > Team > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `teams/team/delete`",
        "deprecated": false,
        "summary": "Teams > Team > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "lead_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "company_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Teams > Team > Projects": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `teams/team/project`",
        "deprecated": false,
        "summary": "Teams > Team > Projects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "lead_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "company_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Teams > Team > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `teams/team/update`",
        "deprecated": false,
        "summary": "Teams > Team > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "lead_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "company_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > BlockedPeriod > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/blocked_period/create`",
        "deprecated": false,
        "summary": "Timeoff > BlockedPeriod > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "name",
                  "leave_type_ids",
                  "time_periods",
                  "strategy",
                  "members"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier of the blocked period",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company id of the blocked period",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the blocked period.",
                    "example": "Onboarding period"
                  },
                  "leave_type_ids": {
                    "type": "array",
                    "description": "Leave types for which absence request has been blocked",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "time_periods": {
                    "type": "array",
                    "description": "The tenure periods associated with the allowance.",
                    "example": [
                      {
                        "name": "Product offsite",
                        "period_type": "by_contract_start_date",
                        "duration": 2,
                        "duration_unit": "months",
                        "start_on": "2024-01-01",
                        "finish_on": "2024-02-28"
                      }
                    ],
                    "items": {}
                  },
                  "strategy": {
                    "type": "string",
                    "description": "Type of access group",
                    "example": "everyone"
                  },
                  "members": {
                    "type": "array",
                    "description": "Employees whose timeoff will be affected",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "location_ids": {
                    "type": "array",
                    "description": "Array of locations workplace identifiers where the employees are located",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "Array of team identifiers which the selected employees belong to",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > BlockedPeriod > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/blocked_period/delete`",
        "deprecated": false,
        "summary": "Timeoff > BlockedPeriod > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "name",
                  "leave_type_ids",
                  "time_periods",
                  "strategy",
                  "members"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier of the blocked period",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company id of the blocked period",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the blocked period.",
                    "example": "Onboarding period"
                  },
                  "leave_type_ids": {
                    "type": "array",
                    "description": "Leave types for which absence request has been blocked",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "time_periods": {
                    "type": "array",
                    "description": "The tenure periods associated with the allowance.",
                    "example": [
                      {
                        "name": "Product offsite",
                        "period_type": "by_contract_start_date",
                        "duration": 2,
                        "duration_unit": "months",
                        "start_on": "2024-01-01",
                        "finish_on": "2024-02-28"
                      }
                    ],
                    "items": {}
                  },
                  "strategy": {
                    "type": "string",
                    "description": "Type of access group",
                    "example": "everyone"
                  },
                  "members": {
                    "type": "array",
                    "description": "Employees whose timeoff will be affected",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "location_ids": {
                    "type": "array",
                    "description": "Array of locations workplace identifiers where the employees are located",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "Array of team identifiers which the selected employees belong to",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > BlockedPeriod > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/blocked_period/update`",
        "deprecated": false,
        "summary": "Timeoff > BlockedPeriod > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "name",
                  "leave_type_ids",
                  "time_periods",
                  "strategy",
                  "members"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier of the blocked period",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company id of the blocked period",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the blocked period.",
                    "example": "Onboarding period"
                  },
                  "leave_type_ids": {
                    "type": "array",
                    "description": "Leave types for which absence request has been blocked",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "time_periods": {
                    "type": "array",
                    "description": "The tenure periods associated with the allowance.",
                    "example": [
                      {
                        "name": "Product offsite",
                        "period_type": "by_contract_start_date",
                        "duration": 2,
                        "duration_unit": "months",
                        "start_on": "2024-01-01",
                        "finish_on": "2024-02-28"
                      }
                    ],
                    "items": {}
                  },
                  "strategy": {
                    "type": "string",
                    "description": "Type of access group",
                    "example": "everyone"
                  },
                  "members": {
                    "type": "array",
                    "description": "Employees whose timeoff will be affected",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "location_ids": {
                    "type": "array",
                    "description": "Array of locations workplace identifiers where the employees are located",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "Array of team identifiers which the selected employees belong to",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > LeaveType > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/leave_type/create`",
        "deprecated": false,
        "summary": "Timeoff > LeaveType > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "identifier",
                  "color",
                  "attachment",
                  "visibility",
                  "workable",
                  "company_id",
                  "allowance_ids",
                  "details_required"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the leave type",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the leave type",
                    "example": "Annual Leave"
                  },
                  "translated_name": {
                    "type": "string",
                    "description": "Translated name of the leave type, if available",
                    "example": "Congé Annuel"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Unique identifier of the leave type",
                    "example": "annual_leave"
                  },
                  "color": {
                    "type": "string",
                    "description": "The color associated with this leave type",
                    "example": "red"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the leave type is active",
                    "example": true
                  },
                  "editable": {
                    "type": "boolean",
                    "description": "Whether the leave type is editable"
                  },
                  "approval_required": {
                    "type": "boolean",
                    "description": "Whether approval is required for this leave type",
                    "example": true
                  },
                  "accrues": {
                    "type": "boolean",
                    "description": "Whether the leave type accrues over time",
                    "example": true
                  },
                  "attachment": {
                    "type": "boolean",
                    "description": "Whether an attachment is required for this leave type",
                    "example": true
                  },
                  "allow_endless": {
                    "type": "boolean",
                    "description": "Whether endless leave is allowed"
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Whether the leave type is restricted"
                  },
                  "visibility": {
                    "type": "boolean",
                    "description": "Whether the leave type is visible to employees",
                    "example": true
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Whether the leave type is workable"
                  },
                  "payable": {
                    "type": "boolean",
                    "description": "Whether the leave type is payable",
                    "example": true
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier of the company associated with this leave type",
                    "example": 1
                  },
                  "is_attachment_mandatory": {
                    "type": "boolean",
                    "description": "Whether the attachment is mandatory"
                  },
                  "allowance_ids": {
                    "type": "array",
                    "description": "List of allowance identifiers associated with this leave type",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "half_days_units_enabled": {
                    "type": "boolean",
                    "description": "Whether half-day units are enabled for this leave type",
                    "example": true
                  },
                  "max_days_in_cents": {
                    "type": "integer",
                    "description": "Maximum days in cents that can be taken",
                    "example": 5000
                  },
                  "min_days_in_cents": {
                    "type": "integer",
                    "description": "Minimum days in cents that must be taken",
                    "example": 1000
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the leave type",
                    "example": "This leave type is for annual holidays."
                  },
                  "details_required": {
                    "type": "boolean",
                    "description": "Whether additional details are required for the leave type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > LeaveType > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/leave_type/update`",
        "deprecated": false,
        "summary": "Timeoff > LeaveType > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "identifier",
                  "color",
                  "attachment",
                  "visibility",
                  "workable",
                  "company_id",
                  "allowance_ids",
                  "details_required"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the leave type",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the leave type",
                    "example": "Annual Leave"
                  },
                  "translated_name": {
                    "type": "string",
                    "description": "Translated name of the leave type, if available",
                    "example": "Congé Annuel"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Unique identifier of the leave type",
                    "example": "annual_leave"
                  },
                  "color": {
                    "type": "string",
                    "description": "The color associated with this leave type",
                    "example": "red"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the leave type is active",
                    "example": true
                  },
                  "editable": {
                    "type": "boolean",
                    "description": "Whether the leave type is editable"
                  },
                  "approval_required": {
                    "type": "boolean",
                    "description": "Whether approval is required for this leave type",
                    "example": true
                  },
                  "accrues": {
                    "type": "boolean",
                    "description": "Whether the leave type accrues over time",
                    "example": true
                  },
                  "attachment": {
                    "type": "boolean",
                    "description": "Whether an attachment is required for this leave type",
                    "example": true
                  },
                  "allow_endless": {
                    "type": "boolean",
                    "description": "Whether endless leave is allowed"
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Whether the leave type is restricted"
                  },
                  "visibility": {
                    "type": "boolean",
                    "description": "Whether the leave type is visible to employees",
                    "example": true
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Whether the leave type is workable"
                  },
                  "payable": {
                    "type": "boolean",
                    "description": "Whether the leave type is payable",
                    "example": true
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier of the company associated with this leave type",
                    "example": 1
                  },
                  "is_attachment_mandatory": {
                    "type": "boolean",
                    "description": "Whether the attachment is mandatory"
                  },
                  "allowance_ids": {
                    "type": "array",
                    "description": "List of allowance identifiers associated with this leave type",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "half_days_units_enabled": {
                    "type": "boolean",
                    "description": "Whether half-day units are enabled for this leave type",
                    "example": true
                  },
                  "max_days_in_cents": {
                    "type": "integer",
                    "description": "Maximum days in cents that can be taken",
                    "example": 5000
                  },
                  "min_days_in_cents": {
                    "type": "integer",
                    "description": "Minimum days in cents that must be taken",
                    "example": 1000
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the leave type",
                    "example": "This leave type is for annual holidays."
                  },
                  "details_required": {
                    "type": "boolean",
                    "description": "Whether additional details are required for the leave type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Leave > Approves": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/leave/approve`",
        "deprecated": false,
        "summary": "Timeoff > Leave > Approves",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "employee_id",
                  "start_on",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the Leave",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the employee of the leave",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier of the leave",
                    "example": 1
                  },
                  "start_on": {
                    "type": "string",
                    "description": "The start date of the leave",
                    "example": "2023-09-01"
                  },
                  "finish_on": {
                    "type": "string",
                    "description": "The end date of the leave",
                    "example": "2023-09-10"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates if the leave is taken as a half-day",
                    "example": "end_of_day"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the leave",
                    "example": "Annual family vacation"
                  },
                  "reason": {
                    "type": "string",
                    "description": "The reason provided by the employee for taking the leave",
                    "example": "Medical appointment"
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "The identifier for the type of leave",
                    "example": 2
                  },
                  "leave_type_name": {
                    "type": "string",
                    "description": "The name of the leave type",
                    "example": "Vacation"
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Indicates whether the leave has been approved",
                    "example": true
                  },
                  "employee_full_name": {
                    "type": "string",
                    "description": "The full name of the employee taking the leave",
                    "example": "John Doe"
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time of the leave",
                    "example": "09:00"
                  },
                  "hours_amount_in_cents": {
                    "type": "integer",
                    "description": "The total number of hours taken for the leave, represented in cents",
                    "example": 80000
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "The updated at date of the leave",
                    "example": "2023-08-31T15:30:00Z"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The created at date of the leave",
                    "example": "2023-08-01T08:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Leave > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/leave/create`",
        "deprecated": false,
        "summary": "Timeoff > Leave > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "employee_id",
                  "start_on",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the Leave",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the employee of the leave",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier of the leave",
                    "example": 1
                  },
                  "start_on": {
                    "type": "string",
                    "description": "The start date of the leave",
                    "example": "2023-09-01"
                  },
                  "finish_on": {
                    "type": "string",
                    "description": "The end date of the leave",
                    "example": "2023-09-10"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates if the leave is taken as a half-day",
                    "example": "end_of_day"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the leave",
                    "example": "Annual family vacation"
                  },
                  "reason": {
                    "type": "string",
                    "description": "The reason provided by the employee for taking the leave",
                    "example": "Medical appointment"
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "The identifier for the type of leave",
                    "example": 2
                  },
                  "leave_type_name": {
                    "type": "string",
                    "description": "The name of the leave type",
                    "example": "Vacation"
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Indicates whether the leave has been approved",
                    "example": true
                  },
                  "employee_full_name": {
                    "type": "string",
                    "description": "The full name of the employee taking the leave",
                    "example": "John Doe"
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time of the leave",
                    "example": "09:00"
                  },
                  "hours_amount_in_cents": {
                    "type": "integer",
                    "description": "The total number of hours taken for the leave, represented in cents",
                    "example": 80000
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "The updated at date of the leave",
                    "example": "2023-08-31T15:30:00Z"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The created at date of the leave",
                    "example": "2023-08-01T08:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Leave > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/leave/delete`",
        "deprecated": false,
        "summary": "Timeoff > Leave > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "employee_id",
                  "start_on",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the Leave",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the employee of the leave",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier of the leave",
                    "example": 1
                  },
                  "start_on": {
                    "type": "string",
                    "description": "The start date of the leave",
                    "example": "2023-09-01"
                  },
                  "finish_on": {
                    "type": "string",
                    "description": "The end date of the leave",
                    "example": "2023-09-10"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates if the leave is taken as a half-day",
                    "example": "end_of_day"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the leave",
                    "example": "Annual family vacation"
                  },
                  "reason": {
                    "type": "string",
                    "description": "The reason provided by the employee for taking the leave",
                    "example": "Medical appointment"
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "The identifier for the type of leave",
                    "example": 2
                  },
                  "leave_type_name": {
                    "type": "string",
                    "description": "The name of the leave type",
                    "example": "Vacation"
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Indicates whether the leave has been approved",
                    "example": true
                  },
                  "employee_full_name": {
                    "type": "string",
                    "description": "The full name of the employee taking the leave",
                    "example": "John Doe"
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time of the leave",
                    "example": "09:00"
                  },
                  "hours_amount_in_cents": {
                    "type": "integer",
                    "description": "The total number of hours taken for the leave, represented in cents",
                    "example": 80000
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "The updated at date of the leave",
                    "example": "2023-08-31T15:30:00Z"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The created at date of the leave",
                    "example": "2023-08-01T08:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Leave > Rejects": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/leave/reject`",
        "deprecated": false,
        "summary": "Timeoff > Leave > Rejects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "employee_id",
                  "start_on",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the Leave",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the employee of the leave",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier of the leave",
                    "example": 1
                  },
                  "start_on": {
                    "type": "string",
                    "description": "The start date of the leave",
                    "example": "2023-09-01"
                  },
                  "finish_on": {
                    "type": "string",
                    "description": "The end date of the leave",
                    "example": "2023-09-10"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates if the leave is taken as a half-day",
                    "example": "end_of_day"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the leave",
                    "example": "Annual family vacation"
                  },
                  "reason": {
                    "type": "string",
                    "description": "The reason provided by the employee for taking the leave",
                    "example": "Medical appointment"
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "The identifier for the type of leave",
                    "example": 2
                  },
                  "leave_type_name": {
                    "type": "string",
                    "description": "The name of the leave type",
                    "example": "Vacation"
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Indicates whether the leave has been approved",
                    "example": true
                  },
                  "employee_full_name": {
                    "type": "string",
                    "description": "The full name of the employee taking the leave",
                    "example": "John Doe"
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time of the leave",
                    "example": "09:00"
                  },
                  "hours_amount_in_cents": {
                    "type": "integer",
                    "description": "The total number of hours taken for the leave, represented in cents",
                    "example": 80000
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "The updated at date of the leave",
                    "example": "2023-08-31T15:30:00Z"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The created at date of the leave",
                    "example": "2023-08-01T08:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Leave > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/leave/update`",
        "deprecated": false,
        "summary": "Timeoff > Leave > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "employee_id",
                  "start_on",
                  "updated_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the Leave",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the employee of the leave",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier of the leave",
                    "example": 1
                  },
                  "start_on": {
                    "type": "string",
                    "description": "The start date of the leave",
                    "example": "2023-09-01"
                  },
                  "finish_on": {
                    "type": "string",
                    "description": "The end date of the leave",
                    "example": "2023-09-10"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Indicates if the leave is taken as a half-day",
                    "example": "end_of_day"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the leave",
                    "example": "Annual family vacation"
                  },
                  "reason": {
                    "type": "string",
                    "description": "The reason provided by the employee for taking the leave",
                    "example": "Medical appointment"
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "The identifier for the type of leave",
                    "example": 2
                  },
                  "leave_type_name": {
                    "type": "string",
                    "description": "The name of the leave type",
                    "example": "Vacation"
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Indicates whether the leave has been approved",
                    "example": true
                  },
                  "employee_full_name": {
                    "type": "string",
                    "description": "The full name of the employee taking the leave",
                    "example": "John Doe"
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time of the leave",
                    "example": "09:00"
                  },
                  "hours_amount_in_cents": {
                    "type": "integer",
                    "description": "The total number of hours taken for the leave, represented in cents",
                    "example": 80000
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "The updated at date of the leave",
                    "example": "2023-08-31T15:30:00Z"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The created at date of the leave",
                    "example": "2023-08-01T08:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Policy > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/policy/create`",
        "deprecated": false,
        "summary": "Timeoff > Policy > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The policy id.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Policy name.",
                    "example": "Policy for remotes"
                  },
                  "main": {
                    "type": "boolean",
                    "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                    "example": true
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "The company id.",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "The policy description.",
                    "example": "This policy will apply only for remote employees"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Policy > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/policy/delete`",
        "deprecated": false,
        "summary": "Timeoff > Policy > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The policy id.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Policy name.",
                    "example": "Policy for remotes"
                  },
                  "main": {
                    "type": "boolean",
                    "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                    "example": true
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "The company id.",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "The policy description.",
                    "example": "This policy will apply only for remote employees"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Timeoff > Policy > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `timeoff/policy/update`",
        "deprecated": false,
        "summary": "Timeoff > Policy > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The policy id.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Policy name.",
                    "example": "Policy for remotes"
                  },
                  "main": {
                    "type": "boolean",
                    "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                    "example": true
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "The company id.",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "The policy description.",
                    "example": "This policy will apply only for remote employees"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Category > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/category/create`",
        "deprecated": false,
        "summary": "Trainings > Category > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Category > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/category/delete`",
        "deprecated": false,
        "summary": "Trainings > Category > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Training > Bulk deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/training/bulk_delete`",
        "deprecated": false,
        "summary": "Trainings > Training > Bulk deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "author_id",
                  "name",
                  "description",
                  "external",
                  "fundae_subsidized",
                  "cost",
                  "subsidized_cost",
                  "cost_decimal",
                  "subsidized_cost_decimal",
                  "year",
                  "catalog",
                  "competency_ids",
                  "total_training_cost",
                  "total_training_subsidized_cost",
                  "total_participants",
                  "training_attendance_status",
                  "access_id",
                  "session_attendance",
                  "competency_id",
                  "modality"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "author_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "external_provider": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "integer"
                  },
                  "fundae_subsidized": {
                    "type": "boolean"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "total_cost_decimal": {
                    "type": "object"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "catalog": {
                    "type": "boolean"
                  },
                  "competency_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "total_training_cost": {
                    "type": "object"
                  },
                  "total_training_subsidized_cost": {
                    "type": "object"
                  },
                  "total_participants": {
                    "type": "integer"
                  },
                  "training_attendance_status": {
                    "type": "string",
                    "enum": [
                      "notassigned",
                      "notstarted",
                      "missing",
                      "started",
                      "partiallycompleted",
                      "completed"
                    ]
                  },
                  "valid_for": {
                    "type": "integer"
                  },
                  "objectives": {
                    "type": "string",
                    "description": "Objectives of the course",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  },
                  "number_of_expired_participants": {
                    "type": "integer",
                    "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                    "example": 2
                  },
                  "access_id": {
                    "type": "integer"
                  },
                  "session_attendance": {
                    "type": "string"
                  },
                  "competency_id": {
                    "type": "integer"
                  },
                  "modality": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Training > Bulk update catalogs": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/training/bulk_update_catalog`",
        "deprecated": false,
        "summary": "Trainings > Training > Bulk update catalogs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "author_id",
                  "name",
                  "description",
                  "external",
                  "fundae_subsidized",
                  "cost",
                  "subsidized_cost",
                  "cost_decimal",
                  "subsidized_cost_decimal",
                  "year",
                  "catalog",
                  "competency_ids",
                  "total_training_cost",
                  "total_training_subsidized_cost",
                  "total_participants",
                  "training_attendance_status",
                  "access_id",
                  "session_attendance",
                  "competency_id",
                  "modality"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "author_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "external_provider": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "integer"
                  },
                  "fundae_subsidized": {
                    "type": "boolean"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "total_cost_decimal": {
                    "type": "object"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "catalog": {
                    "type": "boolean"
                  },
                  "competency_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "total_training_cost": {
                    "type": "object"
                  },
                  "total_training_subsidized_cost": {
                    "type": "object"
                  },
                  "total_participants": {
                    "type": "integer"
                  },
                  "training_attendance_status": {
                    "type": "string",
                    "enum": [
                      "notassigned",
                      "notstarted",
                      "missing",
                      "started",
                      "partiallycompleted",
                      "completed"
                    ]
                  },
                  "valid_for": {
                    "type": "integer"
                  },
                  "objectives": {
                    "type": "string",
                    "description": "Objectives of the course",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  },
                  "number_of_expired_participants": {
                    "type": "integer",
                    "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                    "example": 2
                  },
                  "access_id": {
                    "type": "integer"
                  },
                  "session_attendance": {
                    "type": "string"
                  },
                  "competency_id": {
                    "type": "integer"
                  },
                  "modality": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Training > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/training/create`",
        "deprecated": false,
        "summary": "Trainings > Training > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "author_id",
                  "name",
                  "description",
                  "external",
                  "fundae_subsidized",
                  "cost",
                  "subsidized_cost",
                  "cost_decimal",
                  "subsidized_cost_decimal",
                  "year",
                  "catalog",
                  "competency_ids",
                  "total_training_cost",
                  "total_training_subsidized_cost",
                  "total_participants",
                  "training_attendance_status",
                  "access_id",
                  "session_attendance",
                  "competency_id",
                  "modality"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "author_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "external_provider": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "integer"
                  },
                  "fundae_subsidized": {
                    "type": "boolean"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "total_cost_decimal": {
                    "type": "object"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "catalog": {
                    "type": "boolean"
                  },
                  "competency_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "total_training_cost": {
                    "type": "object"
                  },
                  "total_training_subsidized_cost": {
                    "type": "object"
                  },
                  "total_participants": {
                    "type": "integer"
                  },
                  "training_attendance_status": {
                    "type": "string",
                    "enum": [
                      "notassigned",
                      "notstarted",
                      "missing",
                      "started",
                      "partiallycompleted",
                      "completed"
                    ]
                  },
                  "valid_for": {
                    "type": "integer"
                  },
                  "objectives": {
                    "type": "string",
                    "description": "Objectives of the course",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  },
                  "number_of_expired_participants": {
                    "type": "integer",
                    "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                    "example": 2
                  },
                  "access_id": {
                    "type": "integer"
                  },
                  "session_attendance": {
                    "type": "string"
                  },
                  "competency_id": {
                    "type": "integer"
                  },
                  "modality": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Training > Deletes": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/training/delete`",
        "deprecated": false,
        "summary": "Trainings > Training > Deletes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "author_id",
                  "name",
                  "description",
                  "external",
                  "fundae_subsidized",
                  "cost",
                  "subsidized_cost",
                  "cost_decimal",
                  "subsidized_cost_decimal",
                  "year",
                  "catalog",
                  "competency_ids",
                  "total_training_cost",
                  "total_training_subsidized_cost",
                  "total_participants",
                  "training_attendance_status",
                  "access_id",
                  "session_attendance",
                  "competency_id",
                  "modality"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "author_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "external_provider": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "integer"
                  },
                  "fundae_subsidized": {
                    "type": "boolean"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "total_cost_decimal": {
                    "type": "object"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "catalog": {
                    "type": "boolean"
                  },
                  "competency_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "total_training_cost": {
                    "type": "object"
                  },
                  "total_training_subsidized_cost": {
                    "type": "object"
                  },
                  "total_participants": {
                    "type": "integer"
                  },
                  "training_attendance_status": {
                    "type": "string",
                    "enum": [
                      "notassigned",
                      "notstarted",
                      "missing",
                      "started",
                      "partiallycompleted",
                      "completed"
                    ]
                  },
                  "valid_for": {
                    "type": "integer"
                  },
                  "objectives": {
                    "type": "string",
                    "description": "Objectives of the course",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  },
                  "number_of_expired_participants": {
                    "type": "integer",
                    "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                    "example": 2
                  },
                  "access_id": {
                    "type": "integer"
                  },
                  "session_attendance": {
                    "type": "string"
                  },
                  "competency_id": {
                    "type": "integer"
                  },
                  "modality": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Training > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/training/update`",
        "deprecated": false,
        "summary": "Trainings > Training > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "author_id",
                  "name",
                  "description",
                  "external",
                  "fundae_subsidized",
                  "cost",
                  "subsidized_cost",
                  "cost_decimal",
                  "subsidized_cost_decimal",
                  "year",
                  "catalog",
                  "competency_ids",
                  "total_training_cost",
                  "total_training_subsidized_cost",
                  "total_participants",
                  "training_attendance_status",
                  "access_id",
                  "session_attendance",
                  "competency_id",
                  "modality"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "author_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "external_provider": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "integer"
                  },
                  "fundae_subsidized": {
                    "type": "boolean"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "total_cost_decimal": {
                    "type": "object"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "catalog": {
                    "type": "boolean"
                  },
                  "competency_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "total_training_cost": {
                    "type": "object"
                  },
                  "total_training_subsidized_cost": {
                    "type": "object"
                  },
                  "total_participants": {
                    "type": "integer"
                  },
                  "training_attendance_status": {
                    "type": "string",
                    "enum": [
                      "notassigned",
                      "notstarted",
                      "missing",
                      "started",
                      "partiallycompleted",
                      "completed"
                    ]
                  },
                  "valid_for": {
                    "type": "integer"
                  },
                  "objectives": {
                    "type": "string",
                    "description": "Objectives of the course",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  },
                  "number_of_expired_participants": {
                    "type": "integer",
                    "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                    "example": 2
                  },
                  "access_id": {
                    "type": "integer"
                  },
                  "session_attendance": {
                    "type": "string"
                  },
                  "competency_id": {
                    "type": "integer"
                  },
                  "modality": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > Trainings > Training > Update statuses": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `trainings/training/update_status`",
        "deprecated": false,
        "summary": "Trainings > Training > Update statuses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id",
                  "author_id",
                  "name",
                  "description",
                  "external",
                  "fundae_subsidized",
                  "cost",
                  "subsidized_cost",
                  "cost_decimal",
                  "subsidized_cost_decimal",
                  "year",
                  "catalog",
                  "competency_ids",
                  "total_training_cost",
                  "total_training_subsidized_cost",
                  "total_participants",
                  "training_attendance_status",
                  "access_id",
                  "session_attendance",
                  "competency_id",
                  "modality"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "author_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "external_provider": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "integer"
                  },
                  "fundae_subsidized": {
                    "type": "boolean"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "total_cost_decimal": {
                    "type": "object"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "catalog": {
                    "type": "boolean"
                  },
                  "competency_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "total_training_cost": {
                    "type": "object"
                  },
                  "total_training_subsidized_cost": {
                    "type": "object"
                  },
                  "total_participants": {
                    "type": "integer"
                  },
                  "training_attendance_status": {
                    "type": "string",
                    "enum": [
                      "notassigned",
                      "notstarted",
                      "missing",
                      "started",
                      "partiallycompleted",
                      "completed"
                    ]
                  },
                  "valid_for": {
                    "type": "integer"
                  },
                  "objectives": {
                    "type": "string",
                    "description": "Objectives of the course",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  },
                  "number_of_expired_participants": {
                    "type": "integer",
                    "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                    "example": 2
                  },
                  "access_id": {
                    "type": "integer"
                  },
                  "session_attendance": {
                    "type": "string"
                  },
                  "competency_id": {
                    "type": "integer"
                  },
                  "modality": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > WorkSchedule > Schedule > Creates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `work_schedule/schedule/create`",
        "deprecated": false,
        "summary": "WorkSchedule > Schedule > Creates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "employee_ids",
                  "periods"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "archived_at": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "periods": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > WorkSchedule > Schedule > Toggle archives": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `work_schedule/schedule/toggle_archive`",
        "deprecated": false,
        "summary": "WorkSchedule > Schedule > Toggle archives",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "employee_ids",
                  "periods"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "archived_at": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "periods": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "Webhooks > WorkSchedule > Schedule > Updates": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Subscription_type: `work_schedule/schedule/update`",
        "deprecated": false,
        "summary": "WorkSchedule > Schedule > Updates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "requestBody": {
          "description": "Callback payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "company_id",
                  "created_at",
                  "updated_at",
                  "employee_ids",
                  "periods"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "archived_at": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "periods": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "proxy-enabled": false
  },
  "servers": [
    {
      "url": "https://api.factorialhr.com",
      "description": "Production server"
    },
    {
      "url": "https://api.demo.factorial.dev",
      "description": "Demo server"
    }
  ],
  "security": [
    {
      "oauth2": []
    }
  ],
  "tags": [
    {
      "name": "ApiPublic > Credential",
      "description": "Allows API clients to know access data used in both API Key or Oauth tokens"
    },
    {
      "name": "ApiPublic > WebhookSubscription",
      "description": "Allows external applications to receive real-time notifications from Factorial by registering a `target_url` for specific `subscription_type` events. Upon event occurrence, the service sends an HTTP request to the `target_url`, often including a `challenge` token for verification, enabling the subscriber to process and respond to event data efficiently"
    },
    {
      "name": "Ats > Answer",
      "description": "An answer to custom question for an application in the ATS"
    },
    {
      "name": "Ats > Application",
      "description": "An application for a job in the ATS"
    },
    {
      "name": "Ats > ApplicationPhase",
      "description": "Phases defined for an specific job opening. Are related to a Hiring Stage, but can be different for different job openings"
    },
    {
      "name": "Ats > Candidate",
      "description": "A Candidate in the ATS"
    },
    {
      "name": "Ats > CandidateSource",
      "description": "Source to be used for candidate and application"
    },
    {
      "name": "Ats > EvaluationForm",
      "description": "A set of questions to evaluate an application for a job"
    },
    {
      "name": "Ats > Feedback",
      "description": "Application feedback"
    },
    {
      "name": "Ats > HiringStage",
      "description": "Logical grouping for phases used for all job openings"
    },
    {
      "name": "Ats > JobPosting",
      "description": "Job Postings"
    },
    {
      "name": "Ats > Message",
      "description": ""
    },
    {
      "name": "Ats > RejectionReason",
      "description": "Company Rejection Reasons"
    },
    {
      "name": "Attendance > BreakConfiguration",
      "description": "Break configurations attendance"
    },
    {
      "name": "Attendance > EstimatedTime",
      "description": "Estimated time is used in attendance to know how many time is planned for employee/date to work. From this resource we get the original planned time, how this time has been affected by bank holidays and leaves and the planned shifts and breaks in case there are."
    },
    {
      "name": "Attendance > OpenShift",
      "description": "Gets current open shift"
    },
    {
      "name": "Attendance > OvertimeRequest",
      "description": "Overtime requests"
    },
    {
      "name": "Attendance > Shift",
      "description": "Shift operations"
    },
    {
      "name": "Attendance > WorkedTime",
      "description": ""
    },
    {
      "name": "BookkeepersManagement > Incidence",
      "description": "Incidences"
    },
    {
      "name": "Companies > LegalEntity",
      "description": "A repository to retrieve legal entities"
    },
    {
      "name": "Contracts > Compensation",
      "description": ""
    },
    {
      "name": "Contracts > ContractVersion",
      "description": ""
    },
    {
      "name": "Contracts > ReferenceContract",
      "description": ""
    },
    {
      "name": "Contracts > Taxonomy",
      "description": ""
    },
    {
      "name": "CustomFields > Field",
      "description": "Set up custom fields that will appear in the employee dashboard. You will be able to track more information from your employees."
    },
    {
      "name": "CustomFields > Option",
      "description": "Options for single or multiple choice custom fields"
    },
    {
      "name": "CustomFields > ResourceField",
      "description": "Handle schema custom fields"
    },
    {
      "name": "CustomFields > Value",
      "description": ""
    },
    {
      "name": "CustomResources > Schema",
      "description": "Handles custom tables"
    },
    {
      "name": "CustomResources > Value",
      "description": "Handles values for schemas (custom tables)"
    },
    {
      "name": "Documents > Document",
      "description": "Documents"
    },
    {
      "name": "Documents > Folder",
      "description": "Document Folders"
    },
    {
      "name": "Employees > Employee",
      "description": "Employee"
    },
    {
      "name": "EmployeeUpdates > Absence",
      "description": "Employee update absences"
    },
    {
      "name": "EmployeeUpdates > ContractChange",
      "description": "Employee update in contract changes"
    },
    {
      "name": "EmployeeUpdates > NewHire",
      "description": "Employee update for hirings"
    },
    {
      "name": "EmployeeUpdates > PersonalChange",
      "description": "Employee update summaries"
    },
    {
      "name": "EmployeeUpdates > Summary",
      "description": "Employee update summaries"
    },
    {
      "name": "EmployeeUpdates > Termination",
      "description": "Employee update terminations"
    },
    {
      "name": "Expenses > Expensable",
      "description": "Represents an expensable resource, which can be a regular expense or a mileage expense."
    },
    {
      "name": "Expenses > Expense",
      "description": "Represents an expense"
    },
    {
      "name": "Expenses > Mileage",
      "description": "Represents a mileage"
    },
    {
      "name": "Finance > Account",
      "description": ""
    },
    {
      "name": "Finance > CostCenter",
      "description": "Cost centers"
    },
    {
      "name": "Finance > CostCenterMembership",
      "description": "Cost center memberships"
    },
    {
      "name": "Holidays > CompanyHoliday",
      "description": "Company holidays"
    },
    {
      "name": "Locations > Location",
      "description": "Manage Workplaces in Factorial"
    },
    {
      "name": "Locations > WorkArea",
      "description": "Location work areas"
    },
    {
      "name": "Marketplace > InstallationSetting",
      "description": "Represents the settings of an integration installation"
    },
    {
      "name": "Marketplace > Setting",
      "description": "Represents the settings of an integration"
    },
    {
      "name": "Payroll > FamilySituation",
      "description": "Family situation"
    },
    {
      "name": "Payroll > PolicyPeriod",
      "description": "Payroll policy periods"
    },
    {
      "name": "Payroll > Supplement",
      "description": "Payroll Supplements"
    },
    {
      "name": "PayrollEmployees > Identifier",
      "description": "Payroll employee identifier codes for specific countries (Portugal, Italy and Germany)"
    },
    {
      "name": "PayrollIntegrationsBase > Code",
      "description": "Codes represent an unique identifier to relate Factorial objects with different payroll softwares"
    },
    {
      "name": "Performance > Agreement",
      "description": "Performance Agreements"
    },
    {
      "name": "Performance > ReviewEvaluation",
      "description": "Performance Review Evaluations"
    },
    {
      "name": "Performance > ReviewEvaluationAnswer",
      "description": "Performance Review Evaluation Answers"
    },
    {
      "name": "Performance > ReviewOwner",
      "description": "Performance Review Owner"
    },
    {
      "name": "Performance > ReviewProcess",
      "description": "Performance Review Process"
    },
    {
      "name": "Performance > ReviewProcessEstimatedTarget",
      "description": "Performance Review Target from resolving target strategy"
    },
    {
      "name": "Performance > ReviewProcessTarget",
      "description": "Performance Review Process Targets"
    },
    {
      "name": "Performance > ReviewQuestionnaireByStrategy",
      "description": "Performance Review Questionnaire by reviewer strategies"
    },
    {
      "name": "Performance > ReviewVisibilitySetting",
      "description": "Performance Review Visibility Settings"
    },
    {
      "name": "Performance > TargetManager",
      "description": "Performance Target Managers"
    },
    {
      "name": "Posts > Comment",
      "description": ""
    },
    {
      "name": "Posts > Group",
      "description": ""
    },
    {
      "name": "Posts > Post",
      "description": ""
    },
    {
      "name": "ProjectManagement > ExpenseRecord",
      "description": "Project Management Expense Records"
    },
    {
      "name": "ProjectManagement > ExportableExpense",
      "description": "Project Management Exportable Expenses"
    },
    {
      "name": "ProjectManagement > ExportableProject",
      "description": "Project Management Exportable Projects"
    },
    {
      "name": "ProjectManagement > FlexibleTimeRecord",
      "description": "Project Management Flexible Time Records"
    },
    {
      "name": "ProjectManagement > FlexibleTimeRecordComment",
      "description": "Project Management Flexible Time Record Comments"
    },
    {
      "name": "ProjectManagement > Project",
      "description": "Project Management Projects"
    },
    {
      "name": "ProjectManagement > ProjectTask",
      "description": ""
    },
    {
      "name": "ProjectManagement > ProjectWorker",
      "description": "Project Management Project Workers"
    },
    {
      "name": "ProjectManagement > Subproject",
      "description": "Project Management Subprojects"
    },
    {
      "name": "ProjectManagement > TimeRecord",
      "description": "Project Management Time Records"
    },
    {
      "name": "ShiftManagement > Shift",
      "description": "Shift management"
    },
    {
      "name": "Tasks > Task",
      "description": "Factorial task element"
    },
    {
      "name": "Tasks > TaskFile",
      "description": ""
    },
    {
      "name": "Teams > Membership",
      "description": "Teams memberships"
    },
    {
      "name": "Teams > Team",
      "description": "Teams"
    },
    {
      "name": "Timeoff > Allowance",
      "description": "An Allowance represents how a Time off counter accrues and deducts days."
    },
    {
      "name": "Timeoff > AllowanceIncidence",
      "description": ""
    },
    {
      "name": "Timeoff > AllowanceStat",
      "description": ""
    },
    {
      "name": "Timeoff > BlockedPeriod",
      "description": "Time off blocked period"
    },
    {
      "name": "Timeoff > Leave",
      "description": ""
    },
    {
      "name": "Timeoff > LeaveType",
      "description": ""
    },
    {
      "name": "Timeoff > Policy",
      "description": "Time off policies"
    },
    {
      "name": "Timeoff > PolicyTimeline",
      "description": "Policy Timeline represents the different Time off policies an employee has during his/her time at a company"
    },
    {
      "name": "TimePlanning > PlanningVersion",
      "description": "Represents what time planning tool is used for a given employee on a given date. Available options are shift management, work schedules and contract hours."
    },
    {
      "name": "TimeSettings > BreakConfiguration",
      "description": "Break Configurations to define the breaks settings"
    },
    {
      "name": "Trainings > Category",
      "description": "Training categories"
    },
    {
      "name": "Trainings > Session",
      "description": "Training sessions"
    },
    {
      "name": "Trainings > SessionAccessMembership",
      "description": "Session memberships"
    },
    {
      "name": "Trainings > SessionAttendance",
      "description": "Session attendances"
    },
    {
      "name": "Trainings > Training",
      "description": "Trainings"
    },
    {
      "name": "Trainings > TrainingMembership",
      "description": "Training memberships"
    },
    {
      "name": "WorkSchedule > DayConfiguration",
      "description": "Represents the hours to work on a given day inside a given overlap period for a schedule."
    },
    {
      "name": "WorkSchedule > OverlapPeriod",
      "description": "Represents a specific time frame where a schedule applies. It has a day and month for for beginning and end, but not a year: it is assumed it repeats every year at the same dates."
    },
    {
      "name": "WorkSchedule > Schedule",
      "description": "Represents a specific work schedule. Contains multiple overlap periods."
    }
  ],
  "paths": {
    "/api/2024-10-01/resources/api_public/credentials": {
      "get": {
        "tags": [
          "ApiPublic > Credential"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Credentials",
        "summary": "Reads all Credentials",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "company_id",
                      "id",
                      "employee_id"
                    ],
                    "properties": {
                      "company_id": {
                        "type": "integer",
                        "description": "company id for all kind of accesses",
                        "example": 1
                      },
                      "id": {
                        "type": "integer",
                        "description": "id of the credential prefixed by the type of credential",
                        "example": "access-1"
                      },
                      "email": {
                        "type": "string",
                        "description": "Only for Access Oauth token",
                        "example": "test@factorial.co"
                      },
                      "login_email": {
                        "type": "string",
                        "description": "Only for Access Oauth token",
                        "example": "test@factorial.co"
                      },
                      "full_name": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "Only for Access Oauth token",
                        "example": "Hellen"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Only for Access Oauth token",
                        "example": "Smith"
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Id for hte employee related. Only for Access Oauth token",
                        "example": 1
                      },
                      "role": {
                        "type": "string",
                        "description": "Employee role in the Company. Only for Access Oauth token",
                        "example": "Smith"
                      },
                      "gdpr_tos": {
                        "type": "boolean",
                        "description": "Only for Company Oauth or API key",
                        "example": "General Data Protection Regulation Terms of Service acceptance"
                      },
                      "legal_name": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Company legal name"
                      },
                      "locale": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Company locale"
                      },
                      "logo": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Thumbnail companylogo url"
                      },
                      "name": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Company name"
                      },
                      "onboarded_on": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Factorial onboarding date"
                      },
                      "subscription_plan": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Company subscription plan"
                      },
                      "tin": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Company tax identification number"
                      },
                      "to_be_deleted": {
                        "type": "string",
                        "description": "Only for Company Oauth or API key",
                        "example": "Company deletion date"
                      },
                      "tos": {
                        "type": "boolean",
                        "description": "Only for Company Oauth or API key",
                        "example": "Terms of Service acceptance"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/api_public/webhook_subscriptions": {
      "get": {
        "tags": [
          "ApiPublic > WebhookSubscription"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Webhook subscriptions",
        "summary": "Reads all Webhook subscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Identifier of the webhook subscription",
              "example": 1
            },
            "description": "Identifier of the webhook subscription",
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Company identifier of the webhook subscription",
              "example": 1
            },
            "description": "Company identifier of the webhook subscription",
            "example": 1
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Type of the webhook subscription",
              "example": "ats/job_posting/create"
            },
            "description": "Type of the webhook subscription",
            "example": "ats/job_posting/create"
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "List only enabled webhook subscriptions",
              "example": true
            },
            "description": "List only enabled webhook subscriptions",
            "example": true,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "target_url",
                      "type",
                      "enabled",
                      "api_version"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the webhook subscription",
                        "example": 1
                      },
                      "target_url": {
                        "type": "string",
                        "description": "URL where the webhook payload will be sent",
                        "example": "https://webhook.site/"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the webhook subscription",
                        "example": "ats/job_posting/create"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier of the webhook subscription",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the webhook subscription",
                        "example": "Webhook subscription of a job posting created"
                      },
                      "challenge": {
                        "type": "string",
                        "description": "String to verify the subscription",
                        "example": "2bca4e6d-9aaf-4f11-9e5d"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Boolean to enable/disable the subscription",
                        "example": true
                      },
                      "api_version": {
                        "type": "string",
                        "description": "API version of the webhook subscription that determines the schema of the payload",
                        "example": "2024-10-01"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApiPublic > WebhookSubscription"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Webhook subscription",
        "summary": "Creates a Webhook subscription",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "target_url",
                    "type",
                    "enabled",
                    "api_version"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the webhook subscription",
                      "example": 1
                    },
                    "target_url": {
                      "type": "string",
                      "description": "URL where the webhook payload will be sent",
                      "example": "https://webhook.site/"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the webhook subscription",
                      "example": "ats/job_posting/create"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the webhook subscription",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the webhook subscription",
                      "example": "Webhook subscription of a job posting created"
                    },
                    "challenge": {
                      "type": "string",
                      "description": "String to verify the subscription",
                      "example": "2bca4e6d-9aaf-4f11-9e5d"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Boolean to enable/disable the subscription",
                      "example": true
                    },
                    "api_version": {
                      "type": "string",
                      "description": "API version of the webhook subscription that determines the schema of the payload",
                      "example": "2024-10-01"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "subscription_type",
                  "target_url",
                  "company_id"
                ],
                "properties": {
                  "subscription_type": {
                    "type": "string",
                    "description": "Type of the webhook subscription",
                    "example": "ats/job_posting/create"
                  },
                  "target_url": {
                    "type": "string",
                    "description": "URL where the webhook payload will be sent",
                    "example": "https://webhook.site/"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the webhook subscription",
                    "example": "Webhook subscription of a job posting created"
                  },
                  "challenge": {
                    "type": "string",
                    "description": "String to verify the subscription",
                    "example": "2bca4e6d-9aaf-4f11-9e5d"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the webhook subscription",
                    "example": 1
                  },
                  "api_version": {
                    "type": "string",
                    "description": "API version of the webhook subscription that determines the schema of the payload",
                    "enum": [
                      "2024-10-01"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/api_public/webhook_subscriptions/{id}": {
      "get": {
        "tags": [
          "ApiPublic > WebhookSubscription"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Webhook subscription",
        "summary": "Reads a single Webhook subscription",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "target_url",
                    "type",
                    "enabled",
                    "api_version"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the webhook subscription",
                      "example": 1
                    },
                    "target_url": {
                      "type": "string",
                      "description": "URL where the webhook payload will be sent",
                      "example": "https://webhook.site/"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the webhook subscription",
                      "example": "ats/job_posting/create"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the webhook subscription",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the webhook subscription",
                      "example": "Webhook subscription of a job posting created"
                    },
                    "challenge": {
                      "type": "string",
                      "description": "String to verify the subscription",
                      "example": "2bca4e6d-9aaf-4f11-9e5d"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Boolean to enable/disable the subscription",
                      "example": true
                    },
                    "api_version": {
                      "type": "string",
                      "description": "API version of the webhook subscription that determines the schema of the payload",
                      "example": "2024-10-01"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiPublic > WebhookSubscription"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Webhook subscription",
        "summary": "Updates a Webhook subscription",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "target_url",
                    "type",
                    "enabled",
                    "api_version"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the webhook subscription",
                      "example": 1
                    },
                    "target_url": {
                      "type": "string",
                      "description": "URL where the webhook payload will be sent",
                      "example": "https://webhook.site/"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the webhook subscription",
                      "example": "ats/job_posting/create"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the webhook subscription",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the webhook subscription",
                      "example": "Webhook subscription of a job posting created"
                    },
                    "challenge": {
                      "type": "string",
                      "description": "String to verify the subscription",
                      "example": "2bca4e6d-9aaf-4f11-9e5d"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Boolean to enable/disable the subscription",
                      "example": true
                    },
                    "api_version": {
                      "type": "string",
                      "description": "API version of the webhook subscription that determines the schema of the payload",
                      "example": "2024-10-01"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the webhook subscription",
                    "example": 1
                  },
                  "target_url": {
                    "type": "string",
                    "description": "URL where the webhook payload will be sent",
                    "example": "https://webhook.site/"
                  },
                  "subscription_type": {
                    "type": "string",
                    "description": "Type of the webhook subscription",
                    "example": "ats/job_posting/create"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the webhook subscription",
                    "example": "Webhook subscription of a job posting created"
                  },
                  "challenge": {
                    "type": "string",
                    "description": "String to verify the subscription",
                    "example": "2bca4e6d-9aaf-4f11-9e5d"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Boolean to enable/disable the subscription",
                    "example": true
                  },
                  "api_version": {
                    "type": "string",
                    "description": "API version of the webhook subscription that determines the schema of the payload",
                    "enum": [
                      "2024-10-01"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiPublic > WebhookSubscription"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Webhook subscription",
        "summary": "Deletes a Webhook subscription",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "target_url",
                    "type",
                    "enabled",
                    "api_version"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the webhook subscription",
                      "example": 1
                    },
                    "target_url": {
                      "type": "string",
                      "description": "URL where the webhook payload will be sent",
                      "example": "https://webhook.site/"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the webhook subscription",
                      "example": "ats/job_posting/create"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the webhook subscription",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the webhook subscription",
                      "example": "Webhook subscription of a job posting created"
                    },
                    "challenge": {
                      "type": "string",
                      "description": "String to verify the subscription",
                      "example": "2bca4e6d-9aaf-4f11-9e5d"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Boolean to enable/disable the subscription",
                      "example": true
                    },
                    "api_version": {
                      "type": "string",
                      "description": "API version of the webhook subscription that determines the schema of the payload",
                      "example": "2024-10-01"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/answers": {
      "get": {
        "tags": [
          "Ats > Answer"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Answers",
        "summary": "Reads all Answers",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Identifier of the answers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Identifier of the answers",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "ats_application_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Identifier of the apllications",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Identifier of the apllications",
            "example": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "ats_application_id",
                      "original_question_label",
                      "original_question_type",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the answer",
                        "example": 1
                      },
                      "ats_question_id": {
                        "type": "integer",
                        "description": "Identifier of the question",
                        "example": 1
                      },
                      "ats_application_id": {
                        "type": "integer",
                        "description": "Identifier of the application",
                        "example": 1
                      },
                      "original_question_label": {
                        "type": "string",
                        "description": "Question label of the answer",
                        "example": "How was your application ranked?"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value of the answer",
                        "example": "One of the best I have ever seen"
                      },
                      "original_question_type": {
                        "type": "string",
                        "description": "Original type of the question",
                        "enum": [
                          "text",
                          "long_text",
                          "single_choice",
                          "multiple_choice",
                          "file"
                        ],
                        "example": "single_choice"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Created date of the answer",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "Last updated date of the answer",
                        "example": "2021-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/answers/{id}": {
      "get": {
        "tags": [
          "Ats > Answer"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Answer",
        "summary": "Reads a single Answer",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "ats_application_id",
                    "original_question_label",
                    "original_question_type",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the answer",
                      "example": 1
                    },
                    "ats_question_id": {
                      "type": "integer",
                      "description": "Identifier of the question",
                      "example": 1
                    },
                    "ats_application_id": {
                      "type": "integer",
                      "description": "Identifier of the application",
                      "example": 1
                    },
                    "original_question_label": {
                      "type": "string",
                      "description": "Question label of the answer",
                      "example": "How was your application ranked?"
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of the answer",
                      "example": "One of the best I have ever seen"
                    },
                    "original_question_type": {
                      "type": "string",
                      "description": "Original type of the question",
                      "enum": [
                        "text",
                        "long_text",
                        "single_choice",
                        "multiple_choice",
                        "file"
                      ],
                      "example": "single_choice"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Created date of the answer",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Last updated date of the answer",
                      "example": "2021-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/applications": {
      "get": {
        "tags": [
          "Ats > Application"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Applications",
        "summary": "Reads all Applications",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Application ids to retrieve",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Application ids to retrieve",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "ats_job_posting_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Application job posting id to retrieve",
              "example": 1
            },
            "description": "Application job posting id to retrieve",
            "example": 1
          },
          {
            "name": "qualified",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve applications by their qualified status",
              "example": true
            },
            "description": "Retrieve applications by their qualified status",
            "example": true
          },
          {
            "name": "ats_application_phase_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Application phase id",
              "example": 1
            },
            "description": "Application phase id",
            "example": 1
          },
          {
            "name": "ats_candidate_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Application candidates ids",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Application candidates ids",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "ats_rejection_reason_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Application rejection reason ids",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Application rejection reason ids",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Application search",
              "example": "application"
            },
            "description": "Application search",
            "example": "application"
          },
          {
            "name": "ats_tags_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Application tag ids",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Application tag ids",
            "example": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "ats_job_posting_id",
                      "ats_candidate_id",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Id of the application",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company id of the application",
                        "example": 1
                      },
                      "ats_job_posting_id": {
                        "type": "integer",
                        "description": "Job posting id of the application",
                        "example": 1
                      },
                      "ats_candidate_id": {
                        "type": "integer",
                        "description": "Candidate id of the application",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Employee id of the application",
                        "example": 1
                      },
                      "phone": {
                        "type": "string",
                        "description": "Candidate phone of the application",
                        "example": "123321"
                      },
                      "qualified": {
                        "type": "boolean",
                        "description": "Qualified of the application",
                        "example": true
                      },
                      "ats_application_phase_id": {
                        "type": "integer",
                        "description": "Application phase id",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Application created at date",
                        "example": "2024-08-19T14:30:00Z"
                      },
                      "cover_letter": {
                        "type": "string",
                        "description": "Application cover letter",
                        "example": "cover_letter"
                      },
                      "ats_conversation_id": {
                        "type": "integer",
                        "description": "Application conversation id",
                        "example": 1
                      },
                      "medium": {
                        "type": "string",
                        "description": "Application medium",
                        "example": "medium"
                      },
                      "rating_average": {
                        "type": "integer",
                        "description": "Application average rating",
                        "example": 1
                      },
                      "ats_rejection_reason_id": {
                        "type": "integer",
                        "description": "Application rejection reason id",
                        "example": 1
                      },
                      "source_id": {
                        "type": "integer",
                        "description": "Application source id",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ats > Application"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates an Application",
        "summary": "Creates an Application",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_job_posting_id",
                    "ats_candidate_id",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the application",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company id of the application",
                      "example": 1
                    },
                    "ats_job_posting_id": {
                      "type": "integer",
                      "description": "Job posting id of the application",
                      "example": 1
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "Candidate id of the application",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the application",
                      "example": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Candidate phone of the application",
                      "example": "123321"
                    },
                    "qualified": {
                      "type": "boolean",
                      "description": "Qualified of the application",
                      "example": true
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "Application phase id",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Application created at date",
                      "example": "2024-08-19T14:30:00Z"
                    },
                    "cover_letter": {
                      "type": "string",
                      "description": "Application cover letter",
                      "example": "cover_letter"
                    },
                    "ats_conversation_id": {
                      "type": "integer",
                      "description": "Application conversation id",
                      "example": 1
                    },
                    "medium": {
                      "type": "string",
                      "description": "Application medium",
                      "example": "medium"
                    },
                    "rating_average": {
                      "type": "integer",
                      "description": "Application average rating",
                      "example": 1
                    },
                    "ats_rejection_reason_id": {
                      "type": "integer",
                      "description": "Application rejection reason id",
                      "example": 1
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "Application source id",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ats_job_posting_id"
                ],
                "properties": {
                  "author_id": {
                    "type": "integer",
                    "description": "Application author id",
                    "example": 1
                  },
                  "author_type": {
                    "type": "string",
                    "description": "Application author type",
                    "enum": [
                      "company",
                      "access",
                      "user"
                    ],
                    "example": "Company"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Application candidate phone",
                    "example": "34612345678"
                  },
                  "ats_candidate_id": {
                    "type": "integer",
                    "description": "Application candidate id",
                    "example": 1
                  },
                  "ats_job_posting_id": {
                    "type": "integer",
                    "description": "Application job posting id",
                    "example": 1
                  },
                  "ats_application_phase_id": {
                    "type": "integer",
                    "description": "Application phase id",
                    "example": 1
                  },
                  "cover_letter": {
                    "type": "string",
                    "description": "Application cover letter",
                    "example": "cover letter"
                  },
                  "source": {
                    "type": "string",
                    "description": "Application source",
                    "example": "source"
                  },
                  "medium": {
                    "type": "string",
                    "description": "Application medium",
                    "example": "medium"
                  },
                  "answers": {
                    "type": "array",
                    "description": "answers",
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/applications/{id}": {
      "get": {
        "tags": [
          "Ats > Application"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Application",
        "summary": "Reads a single Application",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_job_posting_id",
                    "ats_candidate_id",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the application",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company id of the application",
                      "example": 1
                    },
                    "ats_job_posting_id": {
                      "type": "integer",
                      "description": "Job posting id of the application",
                      "example": 1
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "Candidate id of the application",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the application",
                      "example": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Candidate phone of the application",
                      "example": "123321"
                    },
                    "qualified": {
                      "type": "boolean",
                      "description": "Qualified of the application",
                      "example": true
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "Application phase id",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Application created at date",
                      "example": "2024-08-19T14:30:00Z"
                    },
                    "cover_letter": {
                      "type": "string",
                      "description": "Application cover letter",
                      "example": "cover_letter"
                    },
                    "ats_conversation_id": {
                      "type": "integer",
                      "description": "Application conversation id",
                      "example": 1
                    },
                    "medium": {
                      "type": "string",
                      "description": "Application medium",
                      "example": "medium"
                    },
                    "rating_average": {
                      "type": "integer",
                      "description": "Application average rating",
                      "example": 1
                    },
                    "ats_rejection_reason_id": {
                      "type": "integer",
                      "description": "Application rejection reason id",
                      "example": 1
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "Application source id",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ats > Application"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates an Application",
        "summary": "Updates an Application",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_job_posting_id",
                    "ats_candidate_id",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the application",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company id of the application",
                      "example": 1
                    },
                    "ats_job_posting_id": {
                      "type": "integer",
                      "description": "Job posting id of the application",
                      "example": 1
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "Candidate id of the application",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the application",
                      "example": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Candidate phone of the application",
                      "example": "123321"
                    },
                    "qualified": {
                      "type": "boolean",
                      "description": "Qualified of the application",
                      "example": true
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "Application phase id",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Application created at date",
                      "example": "2024-08-19T14:30:00Z"
                    },
                    "cover_letter": {
                      "type": "string",
                      "description": "Application cover letter",
                      "example": "cover_letter"
                    },
                    "ats_conversation_id": {
                      "type": "integer",
                      "description": "Application conversation id",
                      "example": 1
                    },
                    "medium": {
                      "type": "string",
                      "description": "Application medium",
                      "example": "medium"
                    },
                    "rating_average": {
                      "type": "integer",
                      "description": "Application average rating",
                      "example": 1
                    },
                    "ats_rejection_reason_id": {
                      "type": "integer",
                      "description": "Application rejection reason id",
                      "example": 1
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "Application source id",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "author_id": {
                    "type": "integer",
                    "description": "Application author id",
                    "example": 1
                  },
                  "author_type": {
                    "type": "string",
                    "description": "Application author type",
                    "enum": [
                      "company",
                      "access",
                      "user"
                    ],
                    "example": "Company"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Application id",
                    "example": 1
                  },
                  "qualified": {
                    "type": "boolean",
                    "description": "Application is qualified",
                    "example": true
                  },
                  "ats_application_phase_id": {
                    "type": "integer",
                    "description": "Application phase id",
                    "example": 1
                  },
                  "disqualified_reason": {
                    "type": "string",
                    "description": "Application disqualified reason",
                    "example": "Unfit for the role"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Application candidate phone",
                    "example": "123321"
                  },
                  "ats_rejection_reason_id": {
                    "type": "integer",
                    "description": "Application rejection reason id",
                    "example": 1
                  },
                  "source": {
                    "type": "string",
                    "description": "Application source",
                    "example": "source"
                  },
                  "source_id": {
                    "type": "integer",
                    "description": "Application source id",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ats > Application"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes an Application",
        "summary": "Deletes an Application",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_job_posting_id",
                    "ats_candidate_id",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the application",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company id of the application",
                      "example": 1
                    },
                    "ats_job_posting_id": {
                      "type": "integer",
                      "description": "Job posting id of the application",
                      "example": 1
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "Candidate id of the application",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the application",
                      "example": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Candidate phone of the application",
                      "example": "123321"
                    },
                    "qualified": {
                      "type": "boolean",
                      "description": "Qualified of the application",
                      "example": true
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "Application phase id",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Application created at date",
                      "example": "2024-08-19T14:30:00Z"
                    },
                    "cover_letter": {
                      "type": "string",
                      "description": "Application cover letter",
                      "example": "cover_letter"
                    },
                    "ats_conversation_id": {
                      "type": "integer",
                      "description": "Application conversation id",
                      "example": 1
                    },
                    "medium": {
                      "type": "string",
                      "description": "Application medium",
                      "example": "medium"
                    },
                    "rating_average": {
                      "type": "integer",
                      "description": "Application average rating",
                      "example": 1
                    },
                    "ats_rejection_reason_id": {
                      "type": "integer",
                      "description": "Application rejection reason id",
                      "example": 1
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "Application source id",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/application_phases": {
      "get": {
        "tags": [
          "Ats > ApplicationPhase"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Application phases",
        "summary": "Reads all Application phases",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Application phases identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Application phases identifiers",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "ats_job_posting_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Job posting of application phases identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Job posting of application phases identifiers",
            "example": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "ats_job_posting_id",
                      "name",
                      "position",
                      "editable",
                      "phase_type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the application Phase",
                        "example": 1
                      },
                      "ats_job_posting_id": {
                        "type": "integer",
                        "description": "Job posting of the application phase",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the application phase",
                        "example": "In review"
                      },
                      "position": {
                        "type": "integer",
                        "description": "Position of the application phase",
                        "example": 1
                      },
                      "editable": {
                        "type": "boolean",
                        "description": "If the application phase is editable",
                        "example": true
                      },
                      "phase_type": {
                        "type": "string",
                        "description": "Application phase type",
                        "enum": [
                          "initial",
                          "normal",
                          "hired",
                          "screening",
                          "interview",
                          "assessment",
                          "offer"
                        ],
                        "example": "Screening"
                      },
                      "applications_count": {
                        "type": "integer",
                        "description": "Active application count",
                        "example": 1
                      },
                      "active_applications_count": {
                        "type": "integer"
                      },
                      "ats_hiring_stage_id": {
                        "type": "integer",
                        "description": "Hiring stage identifier",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/application_phases/{id}": {
      "get": {
        "tags": [
          "Ats > ApplicationPhase"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Application phase",
        "summary": "Reads a single Application phase",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "ats_job_posting_id",
                    "name",
                    "position",
                    "editable",
                    "phase_type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the application Phase",
                      "example": 1
                    },
                    "ats_job_posting_id": {
                      "type": "integer",
                      "description": "Job posting of the application phase",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the application phase",
                      "example": "In review"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Position of the application phase",
                      "example": 1
                    },
                    "editable": {
                      "type": "boolean",
                      "description": "If the application phase is editable",
                      "example": true
                    },
                    "phase_type": {
                      "type": "string",
                      "description": "Application phase type",
                      "enum": [
                        "initial",
                        "normal",
                        "hired",
                        "screening",
                        "interview",
                        "assessment",
                        "offer"
                      ],
                      "example": "Screening"
                    },
                    "applications_count": {
                      "type": "integer",
                      "description": "Active application count",
                      "example": 1
                    },
                    "active_applications_count": {
                      "type": "integer"
                    },
                    "ats_hiring_stage_id": {
                      "type": "integer",
                      "description": "Hiring stage identifier",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/candidates": {
      "get": {
        "tags": [
          "Ats > Candidate"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Fetches candidates data from Factorial. When using administrator-level API Credentials, all candidates associated with a company will be returned. When using non-admin level API credentials, only candidates that applied to a job for which the user is a hiring manager will be returned.",
        "summary": "Reads all Candidates",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of candidate identifiers.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of candidate identifiers.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "emails[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of candidate emails.",
              "example": [
                "ana@factorial.com",
                "juan@factorial.com"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "list of candidate emails.",
            "example": [
              "ana@factorial.com",
              "juan@factorial.com"
            ]
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of team identifiers, refers to teams/teams endpoint.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of team identifiers, refers to teams/teams endpoint.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "location_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of location identifiers, refers to locations/locations endpoint.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of location identifiers, refers to locations/locations endpoint.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "source[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "source of the candidate.",
              "example": "email",
              "items": {
                "type": "string"
              }
            },
            "description": "source of the candidate.",
            "example": "email"
          },
          {
            "name": "remote",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "is the candidate remote?",
              "example": true
            },
            "description": "is the candidate remote?",
            "example": true
          },
          {
            "name": "job_posting_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of job posting identifiers, refers to ats/job_postings endpoint.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of job posting identifiers, refers to ats/job_postings endpoint.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "minimum_average_rating",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "minimum average rating of the candidate.",
              "example": 4
            },
            "description": "minimum average rating of the candidate.",
            "example": 4
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "is the candidate active?",
              "example": true
            },
            "description": "is the candidate active?",
            "example": true
          },
          {
            "name": "talent_pool",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "is the candidate part of talent pool?",
              "example": true
            },
            "description": "is the candidate part of talent pool?",
            "example": true
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "is the candidate archived?",
              "example": true
            },
            "description": "is the candidate archived?",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "first_name",
                      "last_name",
                      "full_name",
                      "talent_pool",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier of the candidate.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "company identifier.",
                        "example": 1
                      },
                      "first_name": {
                        "type": "string",
                        "description": "name of the candidate.",
                        "example": "Ana"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last name of the candidate.",
                        "example": "Fernandez Perez"
                      },
                      "full_name": {
                        "type": "string",
                        "description": "full name of the candidate.",
                        "example": "Ana Fernandez Perez"
                      },
                      "email": {
                        "type": "string",
                        "description": "email of the candidate.",
                        "example": "ana@factorial.com"
                      },
                      "talent_pool": {
                        "type": "boolean",
                        "description": "is the candidate part of talent pool?",
                        "example": true
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone number of the candidate.",
                        "example": 645786980
                      },
                      "created_at": {
                        "type": "string",
                        "description": "creation date of the candidate.",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "last update of the candidate.",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "consent_given_at": {
                        "type": "string",
                        "description": "date when the consent was given.",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "inactive_since": {
                        "type": "string",
                        "description": "date when the candidate became inactive.",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "ats_job_posting_ids": {
                        "type": "array",
                        "description": "list of job posting identifiers.",
                        "example": [
                          1,
                          2,
                          3
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "personal_url": {
                        "type": "string",
                        "description": "personal web resource from the candidate.",
                        "example": "https://anaperez.factorial.com"
                      },
                      "consent_expiration_date": {
                        "type": "string",
                        "description": "date when the consent expires.",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "consent_to_talent_pool": {
                        "type": "boolean",
                        "description": "consent to talent pool.",
                        "example": true
                      },
                      "medium": {
                        "type": "string",
                        "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                        "example": "email"
                      },
                      "source_id": {
                        "type": "integer",
                        "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                        "example": 1
                      },
                      "gender": {
                        "type": "string",
                        "description": "gender of the candidate.",
                        "enum": [
                          "female",
                          "male",
                          "unanswered",
                          "other"
                        ],
                        "example": "female"
                      },
                      "score": {
                        "type": "number",
                        "description": "score of the candidate.",
                        "example": 7
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ats > Candidate"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates candidates related to a particular company in an ATS",
        "summary": "Creates a Candidate",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "talent_pool",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the candidate.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the candidate.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the candidate.",
                      "example": "Fernandez Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the candidate.",
                      "example": "Ana Fernandez Perez"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of the candidate.",
                      "example": "ana@factorial.com"
                    },
                    "talent_pool": {
                      "type": "boolean",
                      "description": "is the candidate part of talent pool?",
                      "example": true
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the candidate.",
                      "example": 645786980
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_given_at": {
                      "type": "string",
                      "description": "date when the consent was given.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "inactive_since": {
                      "type": "string",
                      "description": "date when the candidate became inactive.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "ats_job_posting_ids": {
                      "type": "array",
                      "description": "list of job posting identifiers.",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "personal_url": {
                      "type": "string",
                      "description": "personal web resource from the candidate.",
                      "example": "https://anaperez.factorial.com"
                    },
                    "consent_expiration_date": {
                      "type": "string",
                      "description": "date when the consent expires.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_to_talent_pool": {
                      "type": "boolean",
                      "description": "consent to talent pool.",
                      "example": true
                    },
                    "medium": {
                      "type": "string",
                      "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                      "example": "email"
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                      "example": 1
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the candidate.",
                      "enum": [
                        "female",
                        "male",
                        "unanswered",
                        "other"
                      ],
                      "example": "female"
                    },
                    "score": {
                      "type": "number",
                      "description": "score of the candidate.",
                      "example": 7
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "first_name",
                  "last_name",
                  "company_id"
                ],
                "properties": {
                  "first_name": {
                    "type": "string",
                    "description": "first name of the candidate.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the candidate.",
                    "example": "Fernandez Perez"
                  },
                  "email": {
                    "type": "string",
                    "description": "email of the candidate.",
                    "example": "ana@factorial.com"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier, refers to /core/me endpoint.",
                    "example": 1
                  },
                  "talent_pool": {
                    "type": "boolean",
                    "description": "is the candidate part of talent pool?",
                    "example": true
                  },
                  "consent_given_at": {
                    "type": "string",
                    "description": "date when the consent was given.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "source": {
                    "type": "string",
                    "description": "source of the candidate.",
                    "example": "referred"
                  },
                  "medium": {
                    "type": "string",
                    "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                    "example": "email"
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the candidate.",
                    "example": 645786980
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "personal web resource from the candidate.",
                    "example": "https://anaperez.factorial.com"
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the candidate.",
                    "example": "female"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/candidates/{id}": {
      "get": {
        "tags": [
          "Ats > Candidate"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Fetches candidates data from Factorial. When using administrator-level API Credentials, all candidates associated with a company will be returned. When using non-admin level API credentials, only candidates that applied to a job for which the user is a hiring manager will be returned.",
        "summary": "Reads a single Candidate",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "talent_pool",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the candidate.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the candidate.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the candidate.",
                      "example": "Fernandez Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the candidate.",
                      "example": "Ana Fernandez Perez"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of the candidate.",
                      "example": "ana@factorial.com"
                    },
                    "talent_pool": {
                      "type": "boolean",
                      "description": "is the candidate part of talent pool?",
                      "example": true
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the candidate.",
                      "example": 645786980
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_given_at": {
                      "type": "string",
                      "description": "date when the consent was given.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "inactive_since": {
                      "type": "string",
                      "description": "date when the candidate became inactive.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "ats_job_posting_ids": {
                      "type": "array",
                      "description": "list of job posting identifiers.",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "personal_url": {
                      "type": "string",
                      "description": "personal web resource from the candidate.",
                      "example": "https://anaperez.factorial.com"
                    },
                    "consent_expiration_date": {
                      "type": "string",
                      "description": "date when the consent expires.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_to_talent_pool": {
                      "type": "boolean",
                      "description": "consent to talent pool.",
                      "example": true
                    },
                    "medium": {
                      "type": "string",
                      "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                      "example": "email"
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                      "example": 1
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the candidate.",
                      "enum": [
                        "female",
                        "male",
                        "unanswered",
                        "other"
                      ],
                      "example": "female"
                    },
                    "score": {
                      "type": "number",
                      "description": "score of the candidate.",
                      "example": 7
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ats > Candidate"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates ATS Candidates data",
        "summary": "Updates a Candidate",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "talent_pool",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the candidate.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the candidate.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the candidate.",
                      "example": "Fernandez Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the candidate.",
                      "example": "Ana Fernandez Perez"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of the candidate.",
                      "example": "ana@factorial.com"
                    },
                    "talent_pool": {
                      "type": "boolean",
                      "description": "is the candidate part of talent pool?",
                      "example": true
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the candidate.",
                      "example": 645786980
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_given_at": {
                      "type": "string",
                      "description": "date when the consent was given.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "inactive_since": {
                      "type": "string",
                      "description": "date when the candidate became inactive.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "ats_job_posting_ids": {
                      "type": "array",
                      "description": "list of job posting identifiers.",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "personal_url": {
                      "type": "string",
                      "description": "personal web resource from the candidate.",
                      "example": "https://anaperez.factorial.com"
                    },
                    "consent_expiration_date": {
                      "type": "string",
                      "description": "date when the consent expires.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_to_talent_pool": {
                      "type": "boolean",
                      "description": "consent to talent pool.",
                      "example": true
                    },
                    "medium": {
                      "type": "string",
                      "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                      "example": "email"
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                      "example": 1
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the candidate.",
                      "enum": [
                        "female",
                        "male",
                        "unanswered",
                        "other"
                      ],
                      "example": "female"
                    },
                    "score": {
                      "type": "number",
                      "description": "score of the candidate.",
                      "example": 7
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the candidate.",
                    "example": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "email of the candidate.",
                    "example": "ana@factorial.com"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "first name of the candidate.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the candidate.",
                    "example": "Fernandez Perez"
                  },
                  "talent_pool": {
                    "type": "boolean",
                    "description": "is the candidate part of talent pool?",
                    "example": true
                  },
                  "consent_given_at": {
                    "type": "string",
                    "description": "date when the consent was given.",
                    "example": "2021-01-01T00:00:00Z"
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the candidate.",
                    "example": 645786980
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "personal web resource from the candidate.",
                    "example": "https://anaperez.factorial.com"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ats > Candidate"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a candidate from the ATS",
        "summary": "Deletes a Candidate",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "talent_pool",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the candidate.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the candidate.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the candidate.",
                      "example": "Fernandez Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the candidate.",
                      "example": "Ana Fernandez Perez"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of the candidate.",
                      "example": "ana@factorial.com"
                    },
                    "talent_pool": {
                      "type": "boolean",
                      "description": "is the candidate part of talent pool?",
                      "example": true
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the candidate.",
                      "example": 645786980
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update of the candidate.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_given_at": {
                      "type": "string",
                      "description": "date when the consent was given.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "inactive_since": {
                      "type": "string",
                      "description": "date when the candidate became inactive.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "ats_job_posting_ids": {
                      "type": "array",
                      "description": "list of job posting identifiers.",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "personal_url": {
                      "type": "string",
                      "description": "personal web resource from the candidate.",
                      "example": "https://anaperez.factorial.com"
                    },
                    "consent_expiration_date": {
                      "type": "string",
                      "description": "date when the consent expires.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "consent_to_talent_pool": {
                      "type": "boolean",
                      "description": "consent to talent pool.",
                      "example": true
                    },
                    "medium": {
                      "type": "string",
                      "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
                      "example": "email"
                    },
                    "source_id": {
                      "type": "integer",
                      "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
                      "example": 1
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the candidate.",
                      "enum": [
                        "female",
                        "male",
                        "unanswered",
                        "other"
                      ],
                      "example": "female"
                    },
                    "score": {
                      "type": "number",
                      "description": "score of the candidate.",
                      "example": 7
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/candidate_sources": {
      "get": {
        "tags": [
          "Ats > CandidateSource"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Candidate sources",
        "summary": "Reads all Candidate sources",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "a list of source identifiers.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "a list of source identifiers.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "category",
                      "name",
                      "label"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier of the source.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "identifier of the company.",
                        "example": 1
                      },
                      "category": {
                        "type": "string",
                        "description": "category of the source.",
                        "enum": [
                          "job_board",
                          "agency_or_external_recruiter",
                          "event",
                          "social_media",
                          "referral",
                          "internal",
                          "manually_added",
                          "organic"
                        ],
                        "example": "social_media"
                      },
                      "name": {
                        "type": "string",
                        "description": "name of the source.",
                        "example": "manually_added"
                      },
                      "label": {
                        "type": "string",
                        "description": "Translated label of the source if it is a default one, or name otherwise",
                        "example": "Manually added"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/candidate_sources/{id}": {
      "get": {
        "tags": [
          "Ats > CandidateSource"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Candidate source",
        "summary": "Reads a single Candidate source",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "category",
                    "name",
                    "label"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the source.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "identifier of the company.",
                      "example": 1
                    },
                    "category": {
                      "type": "string",
                      "description": "category of the source.",
                      "enum": [
                        "job_board",
                        "agency_or_external_recruiter",
                        "event",
                        "social_media",
                        "referral",
                        "internal",
                        "manually_added",
                        "organic"
                      ],
                      "example": "social_media"
                    },
                    "name": {
                      "type": "string",
                      "description": "name of the source.",
                      "example": "manually_added"
                    },
                    "label": {
                      "type": "string",
                      "description": "Translated label of the source if it is a default one, or name otherwise",
                      "example": "Manually added"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/evaluation_forms": {
      "get": {
        "tags": [
          "Ats > EvaluationForm"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Evaluation forms",
        "summary": "Reads all Evaluation forms",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "List of IDs of the evaluation forms to be fetched.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "List of IDs of the evaluation forms to be fetched.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "ats_job_posting_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "List of IDs of the job postings to filter the evaluation forms by.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "List of IDs of the job postings to filter the evaluation forms by.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "If true, only the evaluation forms that are templates will be fetched.",
              "example": true
            },
            "description": "If true, only the evaluation forms that are templates will be fetched.",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "name",
                      "questions",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Id of the evaluation form.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Id of the company that the evaluation form belongs to.",
                        "example": 1
                      },
                      "ats_job_posting_id": {
                        "type": "integer",
                        "description": "Id of the job posting that the evaluation form is associated with.",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the evaluation form.",
                        "example": "Technical Evaluation"
                      },
                      "based_on_id": {
                        "type": "integer",
                        "description": "Id of the evaluation form that this evaluation form is related.",
                        "example": 1
                      },
                      "questions": {
                        "type": "array",
                        "description": "List of questions in the evaluation form.",
                        "example": [
                          {
                            "id": 1,
                            "text": "What is your experience with Ruby on Rails?",
                            "description": "experience in years"
                          }
                        ],
                        "items": {}
                      },
                      "created_at": {
                        "type": "string",
                        "description": "date and time when the evaluation form was created.",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "date and time when the evaluation form was last updated.",
                        "example": "2021-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/evaluation_forms/{id}": {
      "get": {
        "tags": [
          "Ats > EvaluationForm"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Evaluation form",
        "summary": "Reads a single Evaluation form",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "questions",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the evaluation form.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Id of the company that the evaluation form belongs to.",
                      "example": 1
                    },
                    "ats_job_posting_id": {
                      "type": "integer",
                      "description": "Id of the job posting that the evaluation form is associated with.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the evaluation form.",
                      "example": "Technical Evaluation"
                    },
                    "based_on_id": {
                      "type": "integer",
                      "description": "Id of the evaluation form that this evaluation form is related.",
                      "example": 1
                    },
                    "questions": {
                      "type": "array",
                      "description": "List of questions in the evaluation form.",
                      "example": [
                        {
                          "id": 1,
                          "text": "What is your experience with Ruby on Rails?",
                          "description": "experience in years"
                        }
                      ],
                      "items": {}
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date and time when the evaluation form was created.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date and time when the evaluation form was last updated.",
                      "example": "2021-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/evaluation_forms/save_as_template": {
      "post": {
        "tags": [
          "Ats > EvaluationForm"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Save an evaluation form as a template.",
        "summary": "Save as templates an Evaluation form",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "questions",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the evaluation form.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Id of the company that the evaluation form belongs to.",
                      "example": 1
                    },
                    "ats_job_posting_id": {
                      "type": "integer",
                      "description": "Id of the job posting that the evaluation form is associated with.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the evaluation form.",
                      "example": "Technical Evaluation"
                    },
                    "based_on_id": {
                      "type": "integer",
                      "description": "Id of the evaluation form that this evaluation form is related.",
                      "example": 1
                    },
                    "questions": {
                      "type": "array",
                      "description": "List of questions in the evaluation form.",
                      "example": [
                        {
                          "id": 1,
                          "text": "What is your experience with Ruby on Rails?",
                          "description": "experience in years"
                        }
                      ],
                      "items": {}
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date and time when the evaluation form was created.",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date and time when the evaluation form was last updated.",
                      "example": "2021-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the evaluation form to be saved as a template.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/feedbacks": {
      "get": {
        "tags": [
          "Ats > Feedback"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint retrieves all feedbacks associated with a candidate's applications.",
        "summary": "Reads all Feedbacks",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "retrieve only the feedbacks that match the IDs passed in the request.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "retrieve only the feedbacks that match the IDs passed in the request.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "ats_application_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter feedbacks based on multiple application IDs.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter feedbacks based on multiple application IDs.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "ats_candidate_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "fetch feedbacks related to a specific candidate.",
              "example": [
                1,
                2,
                3
              ]
            },
            "description": "fetch feedbacks related to a specific candidate.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "created_at",
                      "ats_candidate_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "the ID of the feedback entry.",
                        "example": 1
                      },
                      "rating": {
                        "type": "integer",
                        "description": "the overall rating from 1 to 5 for the candidate's application.",
                        "example": 4
                      },
                      "description": {
                        "type": "string",
                        "description": "the description of the feedback provided.",
                        "example": "The candidate has a great attitude and is a good fit for the team."
                      },
                      "ats_application_id": {
                        "type": "integer",
                        "description": "the ID of the application related to the feedback.",
                        "example": 1
                      },
                      "ats_application_phase_id": {
                        "type": "integer",
                        "description": "the ID of the phase within the application related to the feedback.",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "description": "the date and time when the feedback entry was created.",
                        "example": "2022-01-01T00:00:00Z"
                      },
                      "ats_candidate_id": {
                        "type": "integer",
                        "description": "the ID of the candidate to whom the feedback is associated.",
                        "example": 1
                      },
                      "ats_evaluation_forms_id": {
                        "type": "integer",
                        "description": "the ID of the evaluation form to which the feedback belongs if the evaluation forms feature is active.",
                        "example": 1
                      },
                      "evaluation_form_answers": {
                        "type": "array",
                        "description": "the answers from the evaluation form, if this feedback is related to an evaluation form.",
                        "example": [
                          {
                            "id": 1,
                            "score": 3,
                            "note": "Good communication skills."
                          }
                        ],
                        "items": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ats > Feedback"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint allows to create new feedback entries for candidates.",
        "summary": "Creates a Feedback",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "created_at",
                    "ats_candidate_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "the ID of the feedback entry.",
                      "example": 1
                    },
                    "rating": {
                      "type": "integer",
                      "description": "the overall rating from 1 to 5 for the candidate's application.",
                      "example": 4
                    },
                    "description": {
                      "type": "string",
                      "description": "the description of the feedback provided.",
                      "example": "The candidate has a great attitude and is a good fit for the team."
                    },
                    "ats_application_id": {
                      "type": "integer",
                      "description": "the ID of the application related to the feedback.",
                      "example": 1
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "the ID of the phase within the application related to the feedback.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date and time when the feedback entry was created.",
                      "example": "2022-01-01T00:00:00Z"
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "the ID of the candidate to whom the feedback is associated.",
                      "example": 1
                    },
                    "ats_evaluation_forms_id": {
                      "type": "integer",
                      "description": "the ID of the evaluation form to which the feedback belongs if the evaluation forms feature is active.",
                      "example": 1
                    },
                    "evaluation_form_answers": {
                      "type": "array",
                      "description": "the answers from the evaluation form, if this feedback is related to an evaluation form.",
                      "example": [
                        {
                          "id": 1,
                          "score": 3,
                          "note": "Good communication skills."
                        }
                      ],
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ats_candidate_id"
                ],
                "properties": {
                  "ats_candidate_id": {
                    "type": "integer",
                    "description": "the ID of the candidate to whom the new feedback will be associated.",
                    "example": 1
                  },
                  "rating": {
                    "type": "integer",
                    "description": "the overall rating from 1 to 5 to be given to the candidate's application.",
                    "example": 4
                  },
                  "ats_application_id": {
                    "type": "integer",
                    "description": "the ID of the application related to the feedback.",
                    "example": 1
                  },
                  "ats_application_phase_id": {
                    "type": "integer",
                    "description": "the ID of the phase within the application related to the feedback.",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "a string describing the feedback provided.",
                    "example": "The candidate has a great attitude and is a good fit for the team."
                  },
                  "mention_ids": {
                    "type": "array",
                    "description": "the IDs of the accesses for sending notifications if they have it enabled. They must have permissions to see the assosiated application.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "ats_evaluation_forms_id": {
                    "type": "integer",
                    "description": "IDs of the form to which the feedback belongs if the evaluation forms feature is active.",
                    "example": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/feedbacks/{id}": {
      "get": {
        "tags": [
          "Ats > Feedback"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint retrieves all feedbacks associated with a candidate's applications.",
        "summary": "Reads a single Feedback",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "created_at",
                    "ats_candidate_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "the ID of the feedback entry.",
                      "example": 1
                    },
                    "rating": {
                      "type": "integer",
                      "description": "the overall rating from 1 to 5 for the candidate's application.",
                      "example": 4
                    },
                    "description": {
                      "type": "string",
                      "description": "the description of the feedback provided.",
                      "example": "The candidate has a great attitude and is a good fit for the team."
                    },
                    "ats_application_id": {
                      "type": "integer",
                      "description": "the ID of the application related to the feedback.",
                      "example": 1
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "the ID of the phase within the application related to the feedback.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date and time when the feedback entry was created.",
                      "example": "2022-01-01T00:00:00Z"
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "the ID of the candidate to whom the feedback is associated.",
                      "example": 1
                    },
                    "ats_evaluation_forms_id": {
                      "type": "integer",
                      "description": "the ID of the evaluation form to which the feedback belongs if the evaluation forms feature is active.",
                      "example": 1
                    },
                    "evaluation_form_answers": {
                      "type": "array",
                      "description": "the answers from the evaluation form, if this feedback is related to an evaluation form.",
                      "example": [
                        {
                          "id": 1,
                          "score": 3,
                          "note": "Good communication skills."
                        }
                      ],
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ats > Feedback"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint allows to update existing feedback entries associated with candidates' applications.",
        "summary": "Updates a Feedback",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "created_at",
                    "ats_candidate_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "the ID of the feedback entry.",
                      "example": 1
                    },
                    "rating": {
                      "type": "integer",
                      "description": "the overall rating from 1 to 5 for the candidate's application.",
                      "example": 4
                    },
                    "description": {
                      "type": "string",
                      "description": "the description of the feedback provided.",
                      "example": "The candidate has a great attitude and is a good fit for the team."
                    },
                    "ats_application_id": {
                      "type": "integer",
                      "description": "the ID of the application related to the feedback.",
                      "example": 1
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "the ID of the phase within the application related to the feedback.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date and time when the feedback entry was created.",
                      "example": "2022-01-01T00:00:00Z"
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "the ID of the candidate to whom the feedback is associated.",
                      "example": 1
                    },
                    "ats_evaluation_forms_id": {
                      "type": "integer",
                      "description": "the ID of the evaluation form to which the feedback belongs if the evaluation forms feature is active.",
                      "example": 1
                    },
                    "evaluation_form_answers": {
                      "type": "array",
                      "description": "the answers from the evaluation form, if this feedback is related to an evaluation form.",
                      "example": [
                        {
                          "id": 1,
                          "score": 3,
                          "note": "Good communication skills."
                        }
                      ],
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "the ID of the feedback entry to be updated.",
                    "example": 1
                  },
                  "rating": {
                    "type": "integer",
                    "description": "the overall rating from 1 to 5 for the candidate's application.",
                    "example": 5
                  },
                  "description": {
                    "type": "string",
                    "description": "the description of the feedback provided.",
                    "example": "The candidate has a great attitude and is a good fit for the team."
                  },
                  "ats_application_phase_id": {
                    "type": "integer",
                    "description": "the ID of the phase within the application related to the feedback.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ats > Feedback"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint allows to delete a specific feedback entry associated with a candidate's application.",
        "summary": "Deletes a Feedback",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "created_at",
                    "ats_candidate_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "the ID of the feedback entry.",
                      "example": 1
                    },
                    "rating": {
                      "type": "integer",
                      "description": "the overall rating from 1 to 5 for the candidate's application.",
                      "example": 4
                    },
                    "description": {
                      "type": "string",
                      "description": "the description of the feedback provided.",
                      "example": "The candidate has a great attitude and is a good fit for the team."
                    },
                    "ats_application_id": {
                      "type": "integer",
                      "description": "the ID of the application related to the feedback.",
                      "example": 1
                    },
                    "ats_application_phase_id": {
                      "type": "integer",
                      "description": "the ID of the phase within the application related to the feedback.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date and time when the feedback entry was created.",
                      "example": "2022-01-01T00:00:00Z"
                    },
                    "ats_candidate_id": {
                      "type": "integer",
                      "description": "the ID of the candidate to whom the feedback is associated.",
                      "example": 1
                    },
                    "ats_evaluation_forms_id": {
                      "type": "integer",
                      "description": "the ID of the evaluation form to which the feedback belongs if the evaluation forms feature is active.",
                      "example": 1
                    },
                    "evaluation_form_answers": {
                      "type": "array",
                      "description": "the answers from the evaluation form, if this feedback is related to an evaluation form.",
                      "example": [
                        {
                          "id": 1,
                          "score": 3,
                          "note": "Good communication skills."
                        }
                      ],
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/hiring_stages": {
      "get": {
        "tags": [
          "Ats > HiringStage"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Hiring stages",
        "summary": "Reads all Hiring stages",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Identifiers of the hiring stages",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Identifiers of the hiring stages",
            "example": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id",
                      "position"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the hiring stage",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the hiring stage",
                        "enum": [
                          "new",
                          "screening",
                          "interview",
                          "assessment",
                          "offer",
                          "hired"
                        ],
                        "example": "Hired"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier of the hiring stage",
                        "example": 1
                      },
                      "position": {
                        "type": "integer",
                        "description": "Position of the hiring stage",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/hiring_stages/{id}": {
      "get": {
        "tags": [
          "Ats > HiringStage"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Hiring stage",
        "summary": "Reads a single Hiring stage",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "position"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the hiring stage",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the hiring stage",
                      "enum": [
                        "new",
                        "screening",
                        "interview",
                        "assessment",
                        "offer",
                        "hired"
                      ],
                      "example": "Hired"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the hiring stage",
                      "example": 1
                    },
                    "position": {
                      "type": "integer",
                      "description": "Position of the hiring stage",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/job_postings": {
      "get": {
        "tags": [
          "Ats > JobPosting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Job postings",
        "summary": "Reads all Job postings",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "published",
                "unlisted",
                "archived",
                "cancelled"
              ]
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "legal_entity_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "ats_company_id",
                      "title",
                      "remote",
                      "status",
                      "cv_requirement",
                      "cover_letter_requirement",
                      "phone_requirement",
                      "photo_requirement",
                      "salary_period",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the job posting",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "ats_company_id": {
                        "type": "integer",
                        "description": "Identifier of the ATS company associated with the job posting",
                        "example": "1"
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the job posting",
                        "example": "My job title"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the job posting",
                        "example": "My job description"
                      },
                      "contract_type": {
                        "type": "string"
                      },
                      "workplace_type": {
                        "type": "string"
                      },
                      "remote": {
                        "type": "boolean",
                        "description": "Indicates if the job posting is remote",
                        "example": "true"
                      },
                      "status": {
                        "type": "string",
                        "description": "The current status of the job posting (e.g., draft, published, archived)",
                        "enum": [
                          "draft",
                          "published",
                          "unlisted",
                          "archived",
                          "cancelled"
                        ],
                        "example": "draft"
                      },
                      "schedule_type": {
                        "type": "string",
                        "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                        "example": "full_time"
                      },
                      "team_id": {
                        "type": "integer",
                        "description": "Identifier of the team associated with the job posting",
                        "example": "1"
                      },
                      "location_id": {
                        "type": "integer",
                        "description": "Identifier of the location associated with the job posting",
                        "example": "1"
                      },
                      "legal_entity_id": {
                        "type": "integer",
                        "description": "Identifier of the legal entity associated with the job posting",
                        "example": "1"
                      },
                      "salary_format": {
                        "type": "string",
                        "description": "The format of the salary (e.g., range, fixed_amount)",
                        "example": "range"
                      },
                      "salary_from_amount_in_cents": {
                        "type": "integer",
                        "description": "The minimum salary amount in cents",
                        "example": "3000000"
                      },
                      "salary_to_amount_in_cents": {
                        "type": "integer",
                        "description": "The maximum salary amount in cents",
                        "example": "5000000"
                      },
                      "hide_salary": {
                        "type": "boolean",
                        "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                        "example": "true"
                      },
                      "cv_requirement": {
                        "type": "string",
                        "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                        "example": "mandatory"
                      },
                      "cover_letter_requirement": {
                        "type": "string",
                        "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                        "example": "optional"
                      },
                      "phone_requirement": {
                        "type": "string",
                        "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                        "example": "do_not_ask"
                      },
                      "photo_requirement": {
                        "type": "string",
                        "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                        "example": "do_not_ask"
                      },
                      "preview_token": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "description": "If published, the public URL of the job posting. Otherwise will be null",
                        "example": "https://my-factorial-domain/job_posting/job-title-slug"
                      },
                      "salary_period": {
                        "type": "string",
                        "enum": [
                          "annual",
                          "monthly",
                          "daily"
                        ]
                      },
                      "published_at": {
                        "type": "string",
                        "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                        "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Date in ISO 8601 format when the job posting was created",
                        "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ats > JobPosting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create a new job posting.",
        "summary": "Creates a Job posting",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_company_id",
                    "title",
                    "remote",
                    "status",
                    "cv_requirement",
                    "cover_letter_requirement",
                    "phone_requirement",
                    "photo_requirement",
                    "salary_period",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the job posting",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "ats_company_id": {
                      "type": "integer",
                      "description": "Identifier of the ATS company associated with the job posting",
                      "example": "1"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the job posting",
                      "example": "My job title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the job posting",
                      "example": "My job description"
                    },
                    "contract_type": {
                      "type": "string"
                    },
                    "workplace_type": {
                      "type": "string"
                    },
                    "remote": {
                      "type": "boolean",
                      "description": "Indicates if the job posting is remote",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the job posting (e.g., draft, published, archived)",
                      "enum": [
                        "draft",
                        "published",
                        "unlisted",
                        "archived",
                        "cancelled"
                      ],
                      "example": "draft"
                    },
                    "schedule_type": {
                      "type": "string",
                      "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                      "example": "full_time"
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Identifier of the team associated with the job posting",
                      "example": "1"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Identifier of the location associated with the job posting",
                      "example": "1"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "Identifier of the legal entity associated with the job posting",
                      "example": "1"
                    },
                    "salary_format": {
                      "type": "string",
                      "description": "The format of the salary (e.g., range, fixed_amount)",
                      "example": "range"
                    },
                    "salary_from_amount_in_cents": {
                      "type": "integer",
                      "description": "The minimum salary amount in cents",
                      "example": "3000000"
                    },
                    "salary_to_amount_in_cents": {
                      "type": "integer",
                      "description": "The maximum salary amount in cents",
                      "example": "5000000"
                    },
                    "hide_salary": {
                      "type": "boolean",
                      "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                      "example": "true"
                    },
                    "cv_requirement": {
                      "type": "string",
                      "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                      "example": "mandatory"
                    },
                    "cover_letter_requirement": {
                      "type": "string",
                      "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                      "example": "optional"
                    },
                    "phone_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "photo_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "preview_token": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "description": "If published, the public URL of the job posting. Otherwise will be null",
                      "example": "https://my-factorial-domain/job_posting/job-title-slug"
                    },
                    "salary_period": {
                      "type": "string",
                      "enum": [
                        "annual",
                        "monthly",
                        "daily"
                      ]
                    },
                    "published_at": {
                      "type": "string",
                      "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                      "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date in ISO 8601 format when the job posting was created",
                      "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "status",
                  "cv_requirement",
                  "cover_letter_requirement",
                  "phone_requirement",
                  "photo_requirement"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "contract_type": {
                    "type": "string"
                  },
                  "workplace_type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "published",
                      "unlisted",
                      "archived",
                      "cancelled"
                    ]
                  },
                  "schedule_type": {
                    "type": "string"
                  },
                  "team_id": {
                    "type": "integer"
                  },
                  "location_id": {
                    "type": "integer"
                  },
                  "salary_format": {
                    "type": "string"
                  },
                  "salary_from_amount_in_cents": {
                    "type": "integer"
                  },
                  "salary_to_amount_in_cents": {
                    "type": "integer"
                  },
                  "cv_requirement": {
                    "type": "string"
                  },
                  "cover_letter_requirement": {
                    "type": "string"
                  },
                  "phone_requirement": {
                    "type": "string"
                  },
                  "photo_requirement": {
                    "type": "string"
                  },
                  "salary_period": {
                    "type": "string",
                    "enum": [
                      "annual",
                      "monthly",
                      "daily"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/job_postings/{id}": {
      "get": {
        "tags": [
          "Ats > JobPosting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Job posting",
        "summary": "Reads a single Job posting",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_company_id",
                    "title",
                    "remote",
                    "status",
                    "cv_requirement",
                    "cover_letter_requirement",
                    "phone_requirement",
                    "photo_requirement",
                    "salary_period",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the job posting",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "ats_company_id": {
                      "type": "integer",
                      "description": "Identifier of the ATS company associated with the job posting",
                      "example": "1"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the job posting",
                      "example": "My job title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the job posting",
                      "example": "My job description"
                    },
                    "contract_type": {
                      "type": "string"
                    },
                    "workplace_type": {
                      "type": "string"
                    },
                    "remote": {
                      "type": "boolean",
                      "description": "Indicates if the job posting is remote",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the job posting (e.g., draft, published, archived)",
                      "enum": [
                        "draft",
                        "published",
                        "unlisted",
                        "archived",
                        "cancelled"
                      ],
                      "example": "draft"
                    },
                    "schedule_type": {
                      "type": "string",
                      "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                      "example": "full_time"
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Identifier of the team associated with the job posting",
                      "example": "1"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Identifier of the location associated with the job posting",
                      "example": "1"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "Identifier of the legal entity associated with the job posting",
                      "example": "1"
                    },
                    "salary_format": {
                      "type": "string",
                      "description": "The format of the salary (e.g., range, fixed_amount)",
                      "example": "range"
                    },
                    "salary_from_amount_in_cents": {
                      "type": "integer",
                      "description": "The minimum salary amount in cents",
                      "example": "3000000"
                    },
                    "salary_to_amount_in_cents": {
                      "type": "integer",
                      "description": "The maximum salary amount in cents",
                      "example": "5000000"
                    },
                    "hide_salary": {
                      "type": "boolean",
                      "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                      "example": "true"
                    },
                    "cv_requirement": {
                      "type": "string",
                      "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                      "example": "mandatory"
                    },
                    "cover_letter_requirement": {
                      "type": "string",
                      "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                      "example": "optional"
                    },
                    "phone_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "photo_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "preview_token": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "description": "If published, the public URL of the job posting. Otherwise will be null",
                      "example": "https://my-factorial-domain/job_posting/job-title-slug"
                    },
                    "salary_period": {
                      "type": "string",
                      "enum": [
                        "annual",
                        "monthly",
                        "daily"
                      ]
                    },
                    "published_at": {
                      "type": "string",
                      "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                      "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date in ISO 8601 format when the job posting was created",
                      "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ats > JobPosting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update a job posting.",
        "summary": "Updates a Job posting",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_company_id",
                    "title",
                    "remote",
                    "status",
                    "cv_requirement",
                    "cover_letter_requirement",
                    "phone_requirement",
                    "photo_requirement",
                    "salary_period",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the job posting",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "ats_company_id": {
                      "type": "integer",
                      "description": "Identifier of the ATS company associated with the job posting",
                      "example": "1"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the job posting",
                      "example": "My job title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the job posting",
                      "example": "My job description"
                    },
                    "contract_type": {
                      "type": "string"
                    },
                    "workplace_type": {
                      "type": "string"
                    },
                    "remote": {
                      "type": "boolean",
                      "description": "Indicates if the job posting is remote",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the job posting (e.g., draft, published, archived)",
                      "enum": [
                        "draft",
                        "published",
                        "unlisted",
                        "archived",
                        "cancelled"
                      ],
                      "example": "draft"
                    },
                    "schedule_type": {
                      "type": "string",
                      "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                      "example": "full_time"
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Identifier of the team associated with the job posting",
                      "example": "1"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Identifier of the location associated with the job posting",
                      "example": "1"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "Identifier of the legal entity associated with the job posting",
                      "example": "1"
                    },
                    "salary_format": {
                      "type": "string",
                      "description": "The format of the salary (e.g., range, fixed_amount)",
                      "example": "range"
                    },
                    "salary_from_amount_in_cents": {
                      "type": "integer",
                      "description": "The minimum salary amount in cents",
                      "example": "3000000"
                    },
                    "salary_to_amount_in_cents": {
                      "type": "integer",
                      "description": "The maximum salary amount in cents",
                      "example": "5000000"
                    },
                    "hide_salary": {
                      "type": "boolean",
                      "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                      "example": "true"
                    },
                    "cv_requirement": {
                      "type": "string",
                      "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                      "example": "mandatory"
                    },
                    "cover_letter_requirement": {
                      "type": "string",
                      "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                      "example": "optional"
                    },
                    "phone_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "photo_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "preview_token": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "description": "If published, the public URL of the job posting. Otherwise will be null",
                      "example": "https://my-factorial-domain/job_posting/job-title-slug"
                    },
                    "salary_period": {
                      "type": "string",
                      "enum": [
                        "annual",
                        "monthly",
                        "daily"
                      ]
                    },
                    "published_at": {
                      "type": "string",
                      "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                      "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date in ISO 8601 format when the job posting was created",
                      "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "contract_type": {
                    "type": "string"
                  },
                  "workplace_type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "published",
                      "unlisted",
                      "archived",
                      "cancelled"
                    ]
                  },
                  "schedule_type": {
                    "type": "string"
                  },
                  "team_id": {
                    "type": "integer"
                  },
                  "location_id": {
                    "type": "integer"
                  },
                  "salary_format": {
                    "type": "string"
                  },
                  "salary_from_amount_in_cents": {
                    "type": "integer"
                  },
                  "salary_to_amount_in_cents": {
                    "type": "integer"
                  },
                  "cv_requirement": {
                    "type": "string"
                  },
                  "cover_letter_requirement": {
                    "type": "string"
                  },
                  "phone_requirement": {
                    "type": "string"
                  },
                  "photo_requirement": {
                    "type": "string"
                  },
                  "salary_period": {
                    "type": "string",
                    "enum": [
                      "annual",
                      "monthly",
                      "daily"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ats > JobPosting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Delete a job posting.",
        "summary": "Deletes a Job posting",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_company_id",
                    "title",
                    "remote",
                    "status",
                    "cv_requirement",
                    "cover_letter_requirement",
                    "phone_requirement",
                    "photo_requirement",
                    "salary_period",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the job posting",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "ats_company_id": {
                      "type": "integer",
                      "description": "Identifier of the ATS company associated with the job posting",
                      "example": "1"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the job posting",
                      "example": "My job title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the job posting",
                      "example": "My job description"
                    },
                    "contract_type": {
                      "type": "string"
                    },
                    "workplace_type": {
                      "type": "string"
                    },
                    "remote": {
                      "type": "boolean",
                      "description": "Indicates if the job posting is remote",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the job posting (e.g., draft, published, archived)",
                      "enum": [
                        "draft",
                        "published",
                        "unlisted",
                        "archived",
                        "cancelled"
                      ],
                      "example": "draft"
                    },
                    "schedule_type": {
                      "type": "string",
                      "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                      "example": "full_time"
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Identifier of the team associated with the job posting",
                      "example": "1"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Identifier of the location associated with the job posting",
                      "example": "1"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "Identifier of the legal entity associated with the job posting",
                      "example": "1"
                    },
                    "salary_format": {
                      "type": "string",
                      "description": "The format of the salary (e.g., range, fixed_amount)",
                      "example": "range"
                    },
                    "salary_from_amount_in_cents": {
                      "type": "integer",
                      "description": "The minimum salary amount in cents",
                      "example": "3000000"
                    },
                    "salary_to_amount_in_cents": {
                      "type": "integer",
                      "description": "The maximum salary amount in cents",
                      "example": "5000000"
                    },
                    "hide_salary": {
                      "type": "boolean",
                      "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                      "example": "true"
                    },
                    "cv_requirement": {
                      "type": "string",
                      "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                      "example": "mandatory"
                    },
                    "cover_letter_requirement": {
                      "type": "string",
                      "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                      "example": "optional"
                    },
                    "phone_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "photo_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "preview_token": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "description": "If published, the public URL of the job posting. Otherwise will be null",
                      "example": "https://my-factorial-domain/job_posting/job-title-slug"
                    },
                    "salary_period": {
                      "type": "string",
                      "enum": [
                        "annual",
                        "monthly",
                        "daily"
                      ]
                    },
                    "published_at": {
                      "type": "string",
                      "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                      "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date in ISO 8601 format when the job posting was created",
                      "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/job_postings/duplicate": {
      "post": {
        "tags": [
          "Ats > JobPosting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Duplicate an existing job posting.",
        "summary": "Duplicates a Job posting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "ats_company_id",
                    "title",
                    "remote",
                    "status",
                    "cv_requirement",
                    "cover_letter_requirement",
                    "phone_requirement",
                    "photo_requirement",
                    "salary_period",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the job posting",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "ats_company_id": {
                      "type": "integer",
                      "description": "Identifier of the ATS company associated with the job posting",
                      "example": "1"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the job posting",
                      "example": "My job title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the job posting",
                      "example": "My job description"
                    },
                    "contract_type": {
                      "type": "string"
                    },
                    "workplace_type": {
                      "type": "string"
                    },
                    "remote": {
                      "type": "boolean",
                      "description": "Indicates if the job posting is remote",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the job posting (e.g., draft, published, archived)",
                      "enum": [
                        "draft",
                        "published",
                        "unlisted",
                        "archived",
                        "cancelled"
                      ],
                      "example": "draft"
                    },
                    "schedule_type": {
                      "type": "string",
                      "description": "The schedule type of the job posting (e.g., full_time, part_time)",
                      "example": "full_time"
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Identifier of the team associated with the job posting",
                      "example": "1"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Identifier of the location associated with the job posting",
                      "example": "1"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "Identifier of the legal entity associated with the job posting",
                      "example": "1"
                    },
                    "salary_format": {
                      "type": "string",
                      "description": "The format of the salary (e.g., range, fixed_amount)",
                      "example": "range"
                    },
                    "salary_from_amount_in_cents": {
                      "type": "integer",
                      "description": "The minimum salary amount in cents",
                      "example": "3000000"
                    },
                    "salary_to_amount_in_cents": {
                      "type": "integer",
                      "description": "The maximum salary amount in cents",
                      "example": "5000000"
                    },
                    "hide_salary": {
                      "type": "boolean",
                      "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
                      "example": "true"
                    },
                    "cv_requirement": {
                      "type": "string",
                      "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
                      "example": "mandatory"
                    },
                    "cover_letter_requirement": {
                      "type": "string",
                      "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
                      "example": "optional"
                    },
                    "phone_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "photo_requirement": {
                      "type": "string",
                      "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
                      "example": "do_not_ask"
                    },
                    "preview_token": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "description": "If published, the public URL of the job posting. Otherwise will be null",
                      "example": "https://my-factorial-domain/job_posting/job-title-slug"
                    },
                    "salary_period": {
                      "type": "string",
                      "enum": [
                        "annual",
                        "monthly",
                        "daily"
                      ]
                    },
                    "published_at": {
                      "type": "string",
                      "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
                      "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date in ISO 8601 format when the job posting was created",
                      "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The Job ID of the job posting that you want to duplicate."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/messages": {
      "get": {
        "tags": [
          "Ats > Message"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Messages",
        "summary": "Reads all Messages",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "ats_conversation_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ats_conversation_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "last_per_conversation",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "content",
                      "ats_conversation_id",
                      "sent_by_id",
                      "sent_by_type",
                      "created_at",
                      "attachments",
                      "topic"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "content": {
                        "type": "string"
                      },
                      "ats_conversation_id": {
                        "type": "integer"
                      },
                      "sent_by_id": {
                        "type": "integer"
                      },
                      "sent_by_type": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "attachments": {
                        "type": "array",
                        "items": {}
                      },
                      "topic": {
                        "type": "string"
                      },
                      "delayed_until": {
                        "type": "string"
                      },
                      "sent_at": {
                        "type": "string"
                      },
                      "delivered_at": {
                        "type": "string"
                      },
                      "opened_at": {
                        "type": "string"
                      },
                      "last_error_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ats > Message"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Message",
        "summary": "Creates a Message",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "content",
                    "ats_conversation_id",
                    "sent_by_id",
                    "sent_by_type",
                    "created_at",
                    "attachments",
                    "topic"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "content": {
                      "type": "string"
                    },
                    "ats_conversation_id": {
                      "type": "integer"
                    },
                    "sent_by_id": {
                      "type": "integer"
                    },
                    "sent_by_type": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {}
                    },
                    "topic": {
                      "type": "string"
                    },
                    "delayed_until": {
                      "type": "string"
                    },
                    "sent_at": {
                      "type": "string"
                    },
                    "delivered_at": {
                      "type": "string"
                    },
                    "opened_at": {
                      "type": "string"
                    },
                    "last_error_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content",
                  "sent_by_id",
                  "sent_by_type",
                  "ats_application_id",
                  "attachments",
                  "topic",
                  "send_as_corporate_email"
                ],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "sent_by_id": {
                    "type": "integer"
                  },
                  "sent_by_type": {
                    "type": "string",
                    "enum": [
                      "candidate",
                      "user"
                    ]
                  },
                  "ats_application_id": {
                    "type": "integer"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "topic": {
                    "type": "string"
                  },
                  "send_as_corporate_email": {
                    "type": "boolean"
                  },
                  "delayed_until": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/messages/{id}": {
      "get": {
        "tags": [
          "Ats > Message"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Message",
        "summary": "Reads a single Message",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "content",
                    "ats_conversation_id",
                    "sent_by_id",
                    "sent_by_type",
                    "created_at",
                    "attachments",
                    "topic"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "content": {
                      "type": "string"
                    },
                    "ats_conversation_id": {
                      "type": "integer"
                    },
                    "sent_by_id": {
                      "type": "integer"
                    },
                    "sent_by_type": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {}
                    },
                    "topic": {
                      "type": "string"
                    },
                    "delayed_until": {
                      "type": "string"
                    },
                    "sent_at": {
                      "type": "string"
                    },
                    "delivered_at": {
                      "type": "string"
                    },
                    "opened_at": {
                      "type": "string"
                    },
                    "last_error_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/rejection_reasons": {
      "get": {
        "tags": [
          "Ats > RejectionReason"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Rejection reasons",
        "summary": "Reads all Rejection reasons",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Rejection reasons identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Rejection reasons identifiers",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "ats_application_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Rejected application identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Rejected application identifiers",
            "example": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "decision_maker",
                      "reason",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Rejection reason identifier",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier of the rejection reason",
                        "example": 1
                      },
                      "decision_maker": {
                        "type": "string",
                        "description": "Decision maker of the rejection reason",
                        "enum": [
                          "company",
                          "candidate"
                        ],
                        "example": "candidate"
                      },
                      "reason": {
                        "type": "string",
                        "description": "Reason of the rejection",
                        "example": "Unfit for the role"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Rejection reason created date",
                        "example": "2024-08-22T14:30:00-07:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "Rejection reason updated date",
                        "example": "2024-08-22T14:30:00-07:00"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/ats/rejection_reasons/{id}": {
      "get": {
        "tags": [
          "Ats > RejectionReason"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Rejection reason",
        "summary": "Reads a single Rejection reason",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "decision_maker",
                    "reason",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Rejection reason identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the rejection reason",
                      "example": 1
                    },
                    "decision_maker": {
                      "type": "string",
                      "description": "Decision maker of the rejection reason",
                      "enum": [
                        "company",
                        "candidate"
                      ],
                      "example": "candidate"
                    },
                    "reason": {
                      "type": "string",
                      "description": "Reason of the rejection",
                      "example": "Unfit for the role"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Rejection reason created date",
                      "example": "2024-08-22T14:30:00-07:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Rejection reason updated date",
                      "example": "2024-08-22T14:30:00-07:00"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/break_configurations": {
      "get": {
        "tags": [
          "Attendance > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Break configurations",
        "summary": "Reads all Break configurations",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The break configuration ids to retrieve",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The break configuration ids to retrieve",
            "example": [
              1
            ]
          },
          {
            "name": "time_settings_break_configuration_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Ids of the time settings break configuration",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Ids of the time settings break configuration",
            "example": [
              1
            ]
          },
          {
            "name": "attendance_employees_setting_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Id of the attendance employee setting",
              "example": 1
            },
            "description": "Id of the attendance employee setting",
            "example": 1
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Status of the break configuration if enabled or not"
            },
            "description": "Status of the break configuration if enabled or not"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "attendance_employees_setting_id",
                      "time_settings_break_configuration_id",
                      "enabled"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "attendance_employees_setting_id": {
                        "type": "integer",
                        "description": "Id of the attendance employee setting"
                      },
                      "time_settings_break_configuration_id": {
                        "type": "integer",
                        "description": "Id of the time settings break configuration"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Status of the break configuration if enabled or not"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the break configuration"
                      },
                      "paid": {
                        "type": "boolean",
                        "description": "Check the break configuration is paid or not"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attendance > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Break configuration",
        "summary": "Creates a Break configuration",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "attendance_employees_setting_id",
                    "time_settings_break_configuration_id",
                    "enabled"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "attendance_employees_setting_id": {
                      "type": "integer",
                      "description": "Id of the attendance employee setting"
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Id of the time settings break configuration"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Status of the break configuration if enabled or not"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the break configuration"
                    },
                    "paid": {
                      "type": "boolean",
                      "description": "Check the break configuration is paid or not"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "time_settings_break_configuration_id",
                  "attendance_employees_setting_id",
                  "enabled"
                ],
                "properties": {
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Id of the time settings break configuration",
                    "example": 1
                  },
                  "attendance_employees_setting_id": {
                    "type": "integer",
                    "description": "Id of the attendance employee setting",
                    "example": 1
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Status of the break configuration if enabled or not"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/break_configurations/{id}": {
      "get": {
        "tags": [
          "Attendance > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Break configuration",
        "summary": "Reads a single Break configuration",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "attendance_employees_setting_id",
                    "time_settings_break_configuration_id",
                    "enabled"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "attendance_employees_setting_id": {
                      "type": "integer",
                      "description": "Id of the attendance employee setting"
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Id of the time settings break configuration"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Status of the break configuration if enabled or not"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the break configuration"
                    },
                    "paid": {
                      "type": "boolean",
                      "description": "Check the break configuration is paid or not"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attendance > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Break configuration",
        "summary": "Updates a Break configuration",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "attendance_employees_setting_id",
                    "time_settings_break_configuration_id",
                    "enabled"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "attendance_employees_setting_id": {
                      "type": "integer",
                      "description": "Id of the attendance employee setting"
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Id of the time settings break configuration"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Status of the break configuration if enabled or not"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the break configuration"
                    },
                    "paid": {
                      "type": "boolean",
                      "description": "Check the break configuration is paid or not"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the break configuration",
                    "example": 1
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Status of the break configuration if enabled or not"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/estimated_times": {
      "get": {
        "tags": [
          "Attendance > EstimatedTime"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Get information about estimated data for a given date range and a bunch of employees.",
        "summary": "Reads all Estimated times",
        "parameters": [
          {
            "name": "start_on",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "end_on",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "date",
                      "company_id",
                      "employee_id",
                      "expected_minutes",
                      "regular_minutes",
                      "overtime_minutes",
                      "breaks",
                      "time_unit",
                      "estimated_half_days",
                      "shifts",
                      "source",
                      "minutes"
                    ],
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "expected_minutes": {
                        "type": "number",
                        "description": "Amount of minutes the employee has to work without taking into consideration time off leaves and bank holidays."
                      },
                      "regular_minutes": {
                        "type": "number",
                        "description": "Amount of regular minutes the employee has to work."
                      },
                      "overtime_minutes": {
                        "type": "number",
                        "description": "Amount of overtime minutes the employee has to work (only available with Shift Management)."
                      },
                      "breaks": {
                        "type": "array",
                        "items": {}
                      },
                      "time_unit": {
                        "type": "string",
                        "enum": [
                          "minute",
                          "half_day",
                          "none"
                        ]
                      },
                      "estimated_half_days": {
                        "type": "integer"
                      },
                      "shifts": {
                        "type": "array",
                        "items": {}
                      },
                      "source": {
                        "type": "string",
                        "description": "Source of the estimated time. Could be employee's contract, work schedule or shift management.",
                        "enum": [
                          "shift_management",
                          "work_schedule",
                          "contract_hours",
                          "none"
                        ]
                      },
                      "minutes": {
                        "type": "number",
                        "description": "Amount of minutes the employee has to work."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/estimated_times/{id}": {
      "get": {
        "tags": [
          "Attendance > EstimatedTime"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Get information about estimated data for a given date range and a bunch of employees.",
        "summary": "Reads a single Estimated time",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "date",
                    "company_id",
                    "employee_id",
                    "expected_minutes",
                    "regular_minutes",
                    "overtime_minutes",
                    "breaks",
                    "time_unit",
                    "estimated_half_days",
                    "shifts",
                    "source",
                    "minutes"
                  ],
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "expected_minutes": {
                      "type": "number",
                      "description": "Amount of minutes the employee has to work without taking into consideration time off leaves and bank holidays."
                    },
                    "regular_minutes": {
                      "type": "number",
                      "description": "Amount of regular minutes the employee has to work."
                    },
                    "overtime_minutes": {
                      "type": "number",
                      "description": "Amount of overtime minutes the employee has to work (only available with Shift Management)."
                    },
                    "breaks": {
                      "type": "array",
                      "items": {}
                    },
                    "time_unit": {
                      "type": "string",
                      "enum": [
                        "minute",
                        "half_day",
                        "none"
                      ]
                    },
                    "estimated_half_days": {
                      "type": "integer"
                    },
                    "shifts": {
                      "type": "array",
                      "items": {}
                    },
                    "source": {
                      "type": "string",
                      "description": "Source of the estimated time. Could be employee's contract, work schedule or shift management.",
                      "enum": [
                        "shift_management",
                        "work_schedule",
                        "contract_hours",
                        "none"
                      ]
                    },
                    "minutes": {
                      "type": "number",
                      "description": "Amount of minutes the employee has to work."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/open_shifts": {
      "get": {
        "tags": [
          "Attendance > OpenShift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint retrieves the current open shifts for the specified employee_ids.",
        "summary": "Reads all Open shifts",
        "parameters": [
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Employee ids to filter the open shifts by.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Employee ids to filter the open shifts by.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "date",
                      "clock_in",
                      "status",
                      "workable",
                      "automatic_clock_in"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Open Shift identifier.",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Employee identifier from the open shift.",
                        "example": 1
                      },
                      "date": {
                        "type": "string",
                        "description": "Date of the open shift.",
                        "example": "2024-06-06"
                      },
                      "clock_in": {
                        "type": "string",
                        "description": "Clock in time from the shift. Ignore the date part.",
                        "example": "2000-01-01T02:35:25.000Z"
                      },
                      "clock_out": {
                        "type": "string",
                        "description": "For open shifts, this field is null."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the shift",
                        "enum": [
                          "opened",
                          "closed",
                          "created"
                        ],
                        "example": "opened"
                      },
                      "workable": {
                        "type": "boolean",
                        "description": "Indicates if the shift is a break or a workable shift.",
                        "example": true
                      },
                      "automatic_clock_in": {
                        "type": "boolean",
                        "description": "Indicates if the shift is automatic or not"
                      },
                      "location_type": {
                        "type": "string",
                        "description": "String representing the location type of the shift. Examples work_from_home, office, etc.",
                        "example": "work_from_home"
                      },
                      "workplace_id": {
                        "type": "integer",
                        "description": "Identifier for the workplace assinged to the shift.",
                        "example": 1
                      },
                      "time_settings_break_configuration_id": {
                        "type": "integer",
                        "description": "If the shift is a break, this field will have the break configuration id.",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/overtime_requests": {
      "get": {
        "tags": [
          "Attendance > OvertimeRequest"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Overtime requests",
        "summary": "Reads all Overtime requests",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "start_on",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_on",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "approved",
                "rejected",
                "none"
              ]
            }
          },
          {
            "name": "include_approval_flow",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "author_id",
                      "status",
                      "date",
                      "hours_amount_in_cents",
                      "approver",
                      "is_editable"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "approver_id": {
                        "type": "integer"
                      },
                      "author_id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected",
                          "none"
                        ]
                      },
                      "description": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "hours_amount_in_cents": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "approver": {
                        "type": "boolean"
                      },
                      "approver_full_name": {
                        "type": "string"
                      },
                      "is_editable": {
                        "type": "boolean",
                        "description": "Defines if the overtime request can be edited"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attendance > OvertimeRequest"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates an Overtime request",
        "summary": "Creates an Overtime request",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "author_id",
                    "status",
                    "date",
                    "hours_amount_in_cents",
                    "approver",
                    "is_editable"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "approver_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "none"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "boolean"
                    },
                    "approver_full_name": {
                      "type": "string"
                    },
                    "is_editable": {
                      "type": "boolean",
                      "description": "Defines if the overtime request can be edited"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "employee_id",
                  "author_id"
                ],
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "hours_amount": {
                    "type": "number"
                  },
                  "employee_id": {
                    "type": "integer"
                  },
                  "author_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/overtime_requests/{id}": {
      "get": {
        "tags": [
          "Attendance > OvertimeRequest"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Overtime request",
        "summary": "Reads a single Overtime request",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "author_id",
                    "status",
                    "date",
                    "hours_amount_in_cents",
                    "approver",
                    "is_editable"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "approver_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "none"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "boolean"
                    },
                    "approver_full_name": {
                      "type": "string"
                    },
                    "is_editable": {
                      "type": "boolean",
                      "description": "Defines if the overtime request can be edited"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attendance > OvertimeRequest"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates an Overtime request",
        "summary": "Updates an Overtime request",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "author_id",
                    "status",
                    "date",
                    "hours_amount_in_cents",
                    "approver",
                    "is_editable"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "approver_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "none"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "boolean"
                    },
                    "approver_full_name": {
                      "type": "string"
                    },
                    "is_editable": {
                      "type": "boolean",
                      "description": "Defines if the overtime request can be edited"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "date": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "hours_amount": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attendance > OvertimeRequest"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes an Overtime request",
        "summary": "Deletes an Overtime request",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "author_id",
                    "status",
                    "date",
                    "hours_amount_in_cents",
                    "approver",
                    "is_editable"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "approver_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "none"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "boolean"
                    },
                    "approver_full_name": {
                      "type": "string"
                    },
                    "is_editable": {
                      "type": "boolean",
                      "description": "Defines if the overtime request can be edited"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/overtime_requests/approve": {
      "post": {
        "tags": [
          "Attendance > OvertimeRequest"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Approves an Overtime request",
        "summary": "Approves an Overtime request",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "author_id",
                    "status",
                    "date",
                    "hours_amount_in_cents",
                    "approver",
                    "is_editable"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "approver_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "none"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "boolean"
                    },
                    "approver_full_name": {
                      "type": "string"
                    },
                    "is_editable": {
                      "type": "boolean",
                      "description": "Defines if the overtime request can be edited"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "approver_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/overtime_requests/reject": {
      "post": {
        "tags": [
          "Attendance > OvertimeRequest"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Rejects an Overtime request",
        "summary": "Rejects an Overtime request",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "author_id",
                    "status",
                    "date",
                    "hours_amount_in_cents",
                    "approver",
                    "is_editable"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "approver_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "rejected",
                        "none"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "approver": {
                      "type": "boolean"
                    },
                    "approver_full_name": {
                      "type": "string"
                    },
                    "is_editable": {
                      "type": "boolean",
                      "description": "Defines if the overtime request can be edited"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "reason"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "approver_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts": {
      "get": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Shifts",
        "summary": "Reads all Shifts",
        "parameters": [
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by employee ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by employee ids.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "start_on",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter by shift that starts after or including this date.",
              "example": "2022-01-01"
            },
            "description": "filter by shift that starts after or including this date.",
            "example": "2022-01-01"
          },
          {
            "name": "end_on",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter by shift that ends before or including this date.",
              "example": "2022-01-01"
            },
            "description": "filter by shift that ends before or including this date.",
            "example": "2022-01-01"
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by ids.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "half_day",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Flag to filter half day shifts",
              "example": true
            },
            "description": "Flag to filter half day shifts",
            "example": true,
            "required": true
          },
          {
            "name": "workable",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Flag to filter shifts in workable days",
              "example": true
            },
            "description": "Flag to filter shifts in workable days",
            "example": true
          },
          {
            "name": "latest_shift",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Flag to filter only the latest shift for each employee",
              "example": true
            },
            "description": "Flag to filter only the latest shift for each employee",
            "example": true
          },
          {
            "name": "sort_created_at_asc",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Flag to sort by created_at asc",
              "example": true
            },
            "description": "Flag to sort by created_at asc",
            "example": true,
            "required": true
          },
          {
            "name": "breaks_with_time_configuration",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Flag to include breaks with time configuration",
              "example": true
            },
            "description": "Flag to include breaks with time configuration",
            "example": true
          },
          {
            "name": "last_working_shift",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Filter by last working shift",
              "example": true
            },
            "description": "Filter by last working shift",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "date",
                      "reference_date",
                      "created_at",
                      "company_id",
                      "minutes"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the shift",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Identifier for the employee assigned to the shift",
                        "example": 1
                      },
                      "date": {
                        "type": "string",
                        "description": "Date of the shift",
                        "example": "2023-10-01"
                      },
                      "reference_date": {
                        "type": "string",
                        "description": "Reference date for the shift",
                        "example": "2023-09-30"
                      },
                      "clock_in": {
                        "type": "string",
                        "description": "Time when the employee clocked in",
                        "example": "08:30"
                      },
                      "clock_out": {
                        "type": "string",
                        "description": "Time when the employee clocked out",
                        "example": "12:30"
                      },
                      "in_source": {
                        "type": "string",
                        "description": "Source of the clock-in time",
                        "example": "automatic"
                      },
                      "out_source": {
                        "type": "string",
                        "description": "Source of the clock-out time",
                        "example": "automatic"
                      },
                      "observations": {
                        "type": "string",
                        "description": "Additional observations about the shift",
                        "example": "Employee arrived late due to traffic"
                      },
                      "location_type": {
                        "type": "string",
                        "description": "Type of location for the shift",
                        "enum": [
                          "office",
                          "business_trip",
                          "work_from_home"
                        ],
                        "example": "office"
                      },
                      "half_day": {
                        "type": "string",
                        "description": "Indicates which worked part of the day",
                        "enum": [
                          "beginning_of_day",
                          "end_of_day"
                        ],
                        "example": "beginning_of_day"
                      },
                      "in_location_latitude": {
                        "type": "number",
                        "description": "Latitude of the clock-in location",
                        "example": 37.7749
                      },
                      "in_location_longitude": {
                        "type": "number",
                        "description": "Longitude of the clock-in location",
                        "example": -122.4194
                      },
                      "in_location_accuracy": {
                        "type": "number",
                        "description": "Accuracy of the clock-in location",
                        "example": 5
                      },
                      "out_location_latitude": {
                        "type": "number",
                        "description": "Latitude of the clock-out location",
                        "example": 37.7749
                      },
                      "out_location_longitude": {
                        "type": "number",
                        "description": "Longitude of the clock-out location",
                        "example": -122.4194
                      },
                      "out_location_accuracy": {
                        "type": "number",
                        "description": "Accuracy of the clock-out location",
                        "example": 5.7
                      },
                      "workable": {
                        "type": "boolean",
                        "description": "Indicates if the shift is workable",
                        "example": true
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Timestamp when the shift record was created",
                        "example": "2023-10-01T08:00:00Z"
                      },
                      "workplace_id": {
                        "type": "integer",
                        "description": "Identifier for the location",
                        "example": 1
                      },
                      "time_settings_break_configuration_id": {
                        "type": "integer",
                        "description": "Identifier for the break configuration",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Identifier for the company",
                        "example": 1
                      },
                      "minutes": {
                        "type": "integer",
                        "description": "Number in minutes of the shift",
                        "example": 152
                      },
                      "clock_in_with_seconds": {
                        "type": "string",
                        "description": "Clock in time with seconds",
                        "example": "08:30:15"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Shift",
        "summary": "Creates a Shift",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Id of the employee related",
                    "example": 1
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2022-01-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "Reference date of the shift",
                    "example": "2022-01-01"
                  },
                  "day": {
                    "type": "integer",
                    "description": "number of days of the shift",
                    "example": 1
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time of the clock in",
                    "example": "2024-01-01T12:12:01-02:00"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time of the clock out",
                    "example": "2024-01-01T12:12:01-02:00"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Comments added to the shift",
                    "example": "This is an observation"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "Boolean that indicates if the shift is a half day",
                    "example": true
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Boolean that indicates if the shift is workable",
                    "example": true
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of the location",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the shift creation",
                    "enum": [
                      "desktop",
                      "mobile",
                      "face_recognition",
                      "qr_code",
                      "mobile_geolocation",
                      "shared_device",
                      "api",
                      "system"
                    ],
                    "example": "desktop"
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Id of the break configuration",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts/{id}": {
      "get": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Shift",
        "summary": "Reads a single Shift",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Shift",
        "summary": "Updates a Shift",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the shift",
                    "example": 1
                  },
                  "clock_in": {
                    "type": "string",
                    "description": "Time of the clock in",
                    "example": "2024-01-01T12:12:01-02:00"
                  },
                  "clock_out": {
                    "type": "string",
                    "description": "Time of the clock out",
                    "example": "2024-01-01T12:12:01-02:00"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the shift",
                    "example": "2024-01-01"
                  },
                  "reference_date": {
                    "type": "string",
                    "description": "reference date of the shift",
                    "example": "2024-01-01"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Comments added to the shift",
                    "example": "This is an observation"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of the location",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Id of the location related",
                    "example": 1
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Id of the break configuration",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Shift",
        "summary": "Deletes a Shift",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts/autofill": {
      "post": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Autofills a Shift",
        "summary": "Autofills a Shift",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "date",
                      "reference_date",
                      "created_at",
                      "company_id",
                      "minutes"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the shift",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Identifier for the employee assigned to the shift",
                        "example": 1
                      },
                      "date": {
                        "type": "string",
                        "description": "Date of the shift",
                        "example": "2023-10-01"
                      },
                      "reference_date": {
                        "type": "string",
                        "description": "Reference date for the shift",
                        "example": "2023-09-30"
                      },
                      "clock_in": {
                        "type": "string",
                        "description": "Time when the employee clocked in",
                        "example": "08:30"
                      },
                      "clock_out": {
                        "type": "string",
                        "description": "Time when the employee clocked out",
                        "example": "12:30"
                      },
                      "in_source": {
                        "type": "string",
                        "description": "Source of the clock-in time",
                        "example": "automatic"
                      },
                      "out_source": {
                        "type": "string",
                        "description": "Source of the clock-out time",
                        "example": "automatic"
                      },
                      "observations": {
                        "type": "string",
                        "description": "Additional observations about the shift",
                        "example": "Employee arrived late due to traffic"
                      },
                      "location_type": {
                        "type": "string",
                        "description": "Type of location for the shift",
                        "enum": [
                          "office",
                          "business_trip",
                          "work_from_home"
                        ],
                        "example": "office"
                      },
                      "half_day": {
                        "type": "string",
                        "description": "Indicates which worked part of the day",
                        "enum": [
                          "beginning_of_day",
                          "end_of_day"
                        ],
                        "example": "beginning_of_day"
                      },
                      "in_location_latitude": {
                        "type": "number",
                        "description": "Latitude of the clock-in location",
                        "example": 37.7749
                      },
                      "in_location_longitude": {
                        "type": "number",
                        "description": "Longitude of the clock-in location",
                        "example": -122.4194
                      },
                      "in_location_accuracy": {
                        "type": "number",
                        "description": "Accuracy of the clock-in location",
                        "example": 5
                      },
                      "out_location_latitude": {
                        "type": "number",
                        "description": "Latitude of the clock-out location",
                        "example": 37.7749
                      },
                      "out_location_longitude": {
                        "type": "number",
                        "description": "Longitude of the clock-out location",
                        "example": -122.4194
                      },
                      "out_location_accuracy": {
                        "type": "number",
                        "description": "Accuracy of the clock-out location",
                        "example": 5.7
                      },
                      "workable": {
                        "type": "boolean",
                        "description": "Indicates if the shift is workable",
                        "example": true
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Timestamp when the shift record was created",
                        "example": "2023-10-01T08:00:00Z"
                      },
                      "workplace_id": {
                        "type": "integer",
                        "description": "Identifier for the location",
                        "example": 1
                      },
                      "time_settings_break_configuration_id": {
                        "type": "integer",
                        "description": "Identifier for the break configuration",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Identifier for the company",
                        "example": 1
                      },
                      "minutes": {
                        "type": "integer",
                        "description": "Number in minutes of the shift",
                        "example": 152
                      },
                      "clock_in_with_seconds": {
                        "type": "string",
                        "description": "Clock in time with seconds",
                        "example": "08:30:15"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_ids",
                  "start_on",
                  "end_on"
                ],
                "properties": {
                  "employee_ids": {
                    "type": "array",
                    "description": "Ids of the employees to be autofilled",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "start_on": {
                    "type": "string",
                    "description": "Date to start autofilling",
                    "example": "2022-01-01"
                  },
                  "end_on": {
                    "type": "string",
                    "description": "Date to end autofilling",
                    "example": "2022-01-01"
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the shift creation",
                    "example": "desktop"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts/break_end": {
      "post": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Given that attendance breaks are enabled, this endpoint ends a break in an open shift.",
        "summary": "Break ends a Shift",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id of the break",
                    "example": 1
                  },
                  "now": {
                    "type": "string",
                    "description": "Current time of the break",
                    "example": "2022-06-23T11:00:00.000+00:00"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Observations of the break",
                    "example": "break observation"
                  },
                  "project_worker_id": {
                    "type": "integer"
                  },
                  "subproject_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts/break_start": {
      "post": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Given that attendance breaks are enabled, this endpoint starts a break in an open shift.",
        "summary": "Break starts a Shift",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id of the break",
                    "example": 1
                  },
                  "now": {
                    "type": "string",
                    "description": "Current time of the break",
                    "example": "2022-06-23T11:00:00.000+00:00"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Observations of the break",
                    "example": "break observation"
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Time settings configuration id of the break",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts/clock_in": {
      "post": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Use this endpoint to clock in a shift",
        "summary": "Clocks in a shift",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "example": 1
                  },
                  "now": {
                    "type": "string",
                    "description": "Clock in time",
                    "example": "2024-06-23T11:00:00.000+00:00"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "Latitude from where user clocked in",
                    "example": 52.377956
                  },
                  "longitude": {
                    "type": "number",
                    "description": "Longitude from where user clocked in",
                    "example": 4.89707
                  },
                  "accuracy": {
                    "type": "number",
                    "description": "Location identifier",
                    "example": 5
                  },
                  "observations": {
                    "type": "string",
                    "description": "Notes on the shift record",
                    "example": "I clocked in 10 minutes before"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Place where user has clocked in",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "workplace_id": {
                    "type": "integer",
                    "description": "Location identifier",
                    "example": 5
                  },
                  "time_settings_break_configuration_id": {
                    "type": "integer",
                    "description": "Break configuration identifier",
                    "example": 2
                  },
                  "project_worker_id": {
                    "type": "integer",
                    "description": "Project worker identifier",
                    "example": 3
                  },
                  "subproject_id": {
                    "type": "integer",
                    "description": "Subproject identifier",
                    "example": 4
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts/clock_out": {
      "post": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Use this endpoint to clock out a shift",
        "summary": "Clocks out a shift",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "example": 1
                  },
                  "now": {
                    "type": "string",
                    "description": "Clock out time",
                    "example": "2024-06-23T11:00:00.000+00:00"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "Latitude from where user clocked in",
                    "example": 52.377956
                  },
                  "longitude": {
                    "type": "number",
                    "description": "Longitude from where user clocked in",
                    "example": 4.89707
                  },
                  "accuracy": {
                    "type": "number",
                    "description": "Location accuracy",
                    "example": 5
                  },
                  "observations": {
                    "type": "string",
                    "description": "Notes on the shift record",
                    "example": "I clocked in 10 minutes before"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/shifts/toggle_clock": {
      "post": {
        "tags": [
          "Attendance > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Use this endpoint to toggle shift (it will clock in or out)",
        "summary": "Clock in/out a shift",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "date",
                    "reference_date",
                    "created_at",
                    "company_id",
                    "minutes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the shift",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Identifier for the employee assigned to the shift",
                      "example": 1
                    },
                    "date": {
                      "type": "string",
                      "description": "Date of the shift",
                      "example": "2023-10-01"
                    },
                    "reference_date": {
                      "type": "string",
                      "description": "Reference date for the shift",
                      "example": "2023-09-30"
                    },
                    "clock_in": {
                      "type": "string",
                      "description": "Time when the employee clocked in",
                      "example": "08:30"
                    },
                    "clock_out": {
                      "type": "string",
                      "description": "Time when the employee clocked out",
                      "example": "12:30"
                    },
                    "in_source": {
                      "type": "string",
                      "description": "Source of the clock-in time",
                      "example": "automatic"
                    },
                    "out_source": {
                      "type": "string",
                      "description": "Source of the clock-out time",
                      "example": "automatic"
                    },
                    "observations": {
                      "type": "string",
                      "description": "Additional observations about the shift",
                      "example": "Employee arrived late due to traffic"
                    },
                    "location_type": {
                      "type": "string",
                      "description": "Type of location for the shift",
                      "enum": [
                        "office",
                        "business_trip",
                        "work_from_home"
                      ],
                      "example": "office"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates which worked part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ],
                      "example": "beginning_of_day"
                    },
                    "in_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-in location",
                      "example": 37.7749
                    },
                    "in_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-in location",
                      "example": -122.4194
                    },
                    "in_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-in location",
                      "example": 5
                    },
                    "out_location_latitude": {
                      "type": "number",
                      "description": "Latitude of the clock-out location",
                      "example": 37.7749
                    },
                    "out_location_longitude": {
                      "type": "number",
                      "description": "Longitude of the clock-out location",
                      "example": -122.4194
                    },
                    "out_location_accuracy": {
                      "type": "number",
                      "description": "Accuracy of the clock-out location",
                      "example": 5.7
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Indicates if the shift is workable",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the shift record was created",
                      "example": "2023-10-01T08:00:00Z"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "Identifier for the location",
                      "example": 1
                    },
                    "time_settings_break_configuration_id": {
                      "type": "integer",
                      "description": "Identifier for the break configuration",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier for the company",
                      "example": 1
                    },
                    "minutes": {
                      "type": "integer",
                      "description": "Number in minutes of the shift",
                      "example": 152
                    },
                    "clock_in_with_seconds": {
                      "type": "string",
                      "description": "Clock in time with seconds",
                      "example": "08:30:15"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_id",
                  "clock_time"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "example": 1
                  },
                  "clock_time": {
                    "type": "string",
                    "description": "Clock in or out Timestamp",
                    "example": "2024-06-23T11:00:00.000+00:00"
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Place where user has clocked in",
                    "enum": [
                      "office",
                      "business_trip",
                      "work_from_home"
                    ],
                    "example": "office"
                  },
                  "observations": {
                    "type": "string",
                    "description": "Notes on the shift record",
                    "example": "I clocked in 10 minutes before"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/attendance/worked_times": {
      "get": {
        "tags": [
          "Attendance > WorkedTime"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Worked times",
        "summary": "Reads all Worked times",
        "parameters": [
          {
            "name": "start_on",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "end_on",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true
          },
          {
            "name": "include_time_range_category",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "include_non_attendable_employees",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "employee_id",
                      "date",
                      "company_id",
                      "tracked_minutes",
                      "effective_minutes",
                      "pending_minutes",
                      "minutes",
                      "time_unit",
                      "worked_time_blocks",
                      "day_type",
                      "id"
                    ],
                    "properties": {
                      "employee_id": {
                        "type": "integer"
                      },
                      "date": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "tracked_minutes": {
                        "type": "integer"
                      },
                      "effective_minutes": {
                        "type": "integer"
                      },
                      "pending_minutes": {
                        "type": "integer"
                      },
                      "minutes": {
                        "type": "integer"
                      },
                      "time_unit": {
                        "type": "string",
                        "enum": [
                          "minute",
                          "half_day",
                          "none"
                        ]
                      },
                      "worked_time_blocks": {
                        "type": "array",
                        "items": {}
                      },
                      "day_type": {
                        "type": "string",
                        "enum": [
                          "saturday",
                          "sunday",
                          "bank_holiday",
                          "workday"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "ID to specify the worked times it include the employee_id and the date but you can't fetch the certain worked time by this date",
                        "example": "1_2024-07-01"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/bookkeepers_management/incidences": {
      "get": {
        "tags": [
          "BookkeepersManagement > Incidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Incidences",
        "summary": "Reads all Incidences",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "A list of incidence identifiers.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "A list of incidence identifiers.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "legal_entities_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "A list of legal entities identifiers.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "A list of legal entities identifiers.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "status[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "A list of statuses.",
              "example": [
                "in-preparation",
                "to-do",
                "doing",
                "done",
                "discarded"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "A list of statuses.",
            "example": [
              "in-preparation",
              "to-do",
              "doing",
              "done",
              "discarded"
            ]
          },
          {
            "name": "starts_on",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Get the incidence (aka employee update) that start safter this date (included).",
              "example": "2020-01-01"
            },
            "description": "Get the incidence (aka employee update) that start safter this date (included).",
            "example": "2020-01-01"
          },
          {
            "name": "ends_on",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Get the incidence (aka employee update) that ends before this date (included).",
              "example": "2020-01-01"
            },
            "description": "Get the incidence (aka employee update) that ends before this date (included).",
            "example": "2020-01-01"
          },
          {
            "name": "type[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "A list of types. It can be any of the following address, bank, cost_center, contract, gender, hiring, id, irpf, legal_entity, manual_incidence, name, nationality, parental, phone_number, sick, tax_id, termination, workplace",
              "example": [
                "hiring",
                "workplace"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "A list of types. It can be any of the following address, bank, cost_center, contract, gender, hiring, id, irpf, legal_entity, manual_incidence, name, nationality, parental, phone_number, sick, tax_id, termination, workplace",
            "example": [
              "hiring",
              "workplace"
            ]
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Filter the result by the name of the employee.",
              "example": "Hellen"
            },
            "description": "Filter the result by the name of the employee.",
            "example": "Hellen"
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "contains_message",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Boolean that filters incidences that does or does not contains messages.",
              "example": true
            },
            "description": "Boolean that filters incidences that does or does not contains messages.",
            "example": true
          },
          {
            "name": "message_from",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Filter by message sender.",
              "example": "bookkeeper"
            },
            "description": "Filter by message sender.",
            "example": "bookkeeper"
          },
          {
            "name": "custom_leave_name[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "legal_entity_id",
                      "name",
                      "target_id",
                      "target_type",
                      "status",
                      "company_id",
                      "created_at",
                      "is_reopened"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier of the incidence (aka employee update).",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "identifier of employee related.",
                        "example": 1
                      },
                      "legal_entity_id": {
                        "type": "integer",
                        "description": "identifier of legal entity related.",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "name of the incidence (aka employee update). It also represent the incidence type. For example a new hire incidence will be",
                        "example": "hiring"
                      },
                      "custom_name": {
                        "type": "string"
                      },
                      "target_id": {
                        "type": "integer",
                        "description": "The incidence (aka employee update) is also related to a another resource, for example for a leave target, the target identifier will be the leave id.",
                        "example": 1
                      },
                      "target_type": {
                        "type": "string",
                        "description": "The incidence (aka employee update) is also related to a another resource, for example a leave. This is the target type. The other types are Employee, Contracts::ContractVersion, BookkeepersManagement::ManualIncidence, Finance::CostCenterMembership.",
                        "example": "Timeoff::Leave"
                      },
                      "starts_on": {
                        "type": "string",
                        "description": "The date the incidence (aka employee update) starts.",
                        "example": "2020-01-01"
                      },
                      "ends_on": {
                        "type": "string",
                        "description": "The date the incidence (aka employee update) end.",
                        "example": "2020-01-01"
                      },
                      "read_at": {
                        "type": "string",
                        "description": "The date the incidence (aka employee update) was read.",
                        "example": "2020-01-01"
                      },
                      "status": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "identifier of company related.",
                        "example": 1
                      },
                      "message_from": {
                        "type": "string",
                        "description": "Indicate the message sender on the incidence (aka employee update). It can be any of 'bookkeeper', 'admin'",
                        "example": "admin"
                      },
                      "has_message": {
                        "type": "boolean",
                        "description": "Boolean that indicates if the incidence (aka employee update) has unread messages.",
                        "example": true
                      },
                      "created_at": {
                        "type": "string",
                        "description": "Date in which incidence (aka employee update) was created.",
                        "example": true
                      },
                      "is_reopened": {
                        "type": "boolean",
                        "description": "Boolean that indicates if the incidence (aka employee update) has been reopened.",
                        "example": true
                      },
                      "legal_entity_name": {
                        "type": "string"
                      },
                      "employee_first_name": {
                        "type": "string"
                      },
                      "employee_last_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/bookkeepers_management/incidences/{id}": {
      "get": {
        "tags": [
          "BookkeepersManagement > Incidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Incidence",
        "summary": "Reads a single Incidence",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "legal_entity_id",
                    "name",
                    "target_id",
                    "target_type",
                    "status",
                    "company_id",
                    "created_at",
                    "is_reopened"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the incidence (aka employee update).",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "identifier of employee related.",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "identifier of legal entity related.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "name of the incidence (aka employee update). It also represent the incidence type. For example a new hire incidence will be",
                      "example": "hiring"
                    },
                    "custom_name": {
                      "type": "string"
                    },
                    "target_id": {
                      "type": "integer",
                      "description": "The incidence (aka employee update) is also related to a another resource, for example for a leave target, the target identifier will be the leave id.",
                      "example": 1
                    },
                    "target_type": {
                      "type": "string",
                      "description": "The incidence (aka employee update) is also related to a another resource, for example a leave. This is the target type. The other types are Employee, Contracts::ContractVersion, BookkeepersManagement::ManualIncidence, Finance::CostCenterMembership.",
                      "example": "Timeoff::Leave"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "The date the incidence (aka employee update) starts.",
                      "example": "2020-01-01"
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "The date the incidence (aka employee update) end.",
                      "example": "2020-01-01"
                    },
                    "read_at": {
                      "type": "string",
                      "description": "The date the incidence (aka employee update) was read.",
                      "example": "2020-01-01"
                    },
                    "status": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "identifier of company related.",
                      "example": 1
                    },
                    "message_from": {
                      "type": "string",
                      "description": "Indicate the message sender on the incidence (aka employee update). It can be any of 'bookkeeper', 'admin'",
                      "example": "admin"
                    },
                    "has_message": {
                      "type": "boolean",
                      "description": "Boolean that indicates if the incidence (aka employee update) has unread messages.",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date in which incidence (aka employee update) was created.",
                      "example": true
                    },
                    "is_reopened": {
                      "type": "boolean",
                      "description": "Boolean that indicates if the incidence (aka employee update) has been reopened.",
                      "example": true
                    },
                    "legal_entity_name": {
                      "type": "string"
                    },
                    "employee_first_name": {
                      "type": "string"
                    },
                    "employee_last_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BookkeepersManagement > Incidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates an Incidence",
        "summary": "Updates an Incidence",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "legal_entity_id",
                    "name",
                    "target_id",
                    "target_type",
                    "status",
                    "company_id",
                    "created_at",
                    "is_reopened"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the incidence (aka employee update).",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "identifier of employee related.",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "identifier of legal entity related.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "name of the incidence (aka employee update). It also represent the incidence type. For example a new hire incidence will be",
                      "example": "hiring"
                    },
                    "custom_name": {
                      "type": "string"
                    },
                    "target_id": {
                      "type": "integer",
                      "description": "The incidence (aka employee update) is also related to a another resource, for example for a leave target, the target identifier will be the leave id.",
                      "example": 1
                    },
                    "target_type": {
                      "type": "string",
                      "description": "The incidence (aka employee update) is also related to a another resource, for example a leave. This is the target type. The other types are Employee, Contracts::ContractVersion, BookkeepersManagement::ManualIncidence, Finance::CostCenterMembership.",
                      "example": "Timeoff::Leave"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "The date the incidence (aka employee update) starts.",
                      "example": "2020-01-01"
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "The date the incidence (aka employee update) end.",
                      "example": "2020-01-01"
                    },
                    "read_at": {
                      "type": "string",
                      "description": "The date the incidence (aka employee update) was read.",
                      "example": "2020-01-01"
                    },
                    "status": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "identifier of company related.",
                      "example": 1
                    },
                    "message_from": {
                      "type": "string",
                      "description": "Indicate the message sender on the incidence (aka employee update). It can be any of 'bookkeeper', 'admin'",
                      "example": "admin"
                    },
                    "has_message": {
                      "type": "boolean",
                      "description": "Boolean that indicates if the incidence (aka employee update) has unread messages.",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date in which incidence (aka employee update) was created.",
                      "example": true
                    },
                    "is_reopened": {
                      "type": "boolean",
                      "description": "Boolean that indicates if the incidence (aka employee update) has been reopened.",
                      "example": true
                    },
                    "legal_entity_name": {
                      "type": "string"
                    },
                    "employee_first_name": {
                      "type": "string"
                    },
                    "employee_last_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "incidence (aka employee update) identifier to update.",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "description": "status of the incidence (aka employee update). It can be any of 'in-preparation', 'to-do', 'doing', 'done', 'discarded'",
                    "example": "to-do"
                  },
                  "has_message": {
                    "type": "boolean",
                    "description": "Boolean that indicates is the incidence (aka employee update) has message",
                    "example": true
                  },
                  "message_from": {
                    "type": "string"
                  },
                  "read_at": {
                    "type": "string",
                    "description": "Date in which the  incidence (aka employee update) was read",
                    "example": "2020-01-01"
                  },
                  "mark_as_read": {
                    "type": "boolean",
                    "description": "Boolean that indicate if the incidence is read",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/companies/legal_entities": {
      "get": {
        "tags": [
          "Companies > LegalEntity"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Legal entities",
        "summary": "Reads all Legal entities",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "employees_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "companies_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "country_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "country",
                      "legal_name",
                      "currency"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "country": {
                        "type": "string"
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "tin": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "address_line_1": {
                        "type": "string"
                      },
                      "address_line_2": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/companies/legal_entities/{id}": {
      "get": {
        "tags": [
          "Companies > LegalEntity"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Legal entity",
        "summary": "Reads a single Legal entity",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "country",
                    "legal_name",
                    "currency"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "country": {
                      "type": "string"
                    },
                    "legal_name": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "tin": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "address_line_1": {
                      "type": "string"
                    },
                    "address_line_2": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/contracts/compensations": {
      "get": {
        "tags": [
          "Contracts > Compensation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Compensations",
        "summary": "Reads all Compensations",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "contract_version_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "contract_version_id",
                      "contracts_taxonomy_id",
                      "unit"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Compensation ID",
                        "example": 1
                      },
                      "contract_version_id": {
                        "type": "integer",
                        "description": "Contract version ID",
                        "example": 1
                      },
                      "contracts_taxonomy_id": {
                        "type": "integer",
                        "description": "Contracts taxonomy ID",
                        "example": 1
                      },
                      "description": {
                        "type": "string",
                        "description": "Compensation description",
                        "example": "Compensation for Meal"
                      },
                      "compensation_type": {
                        "type": "string",
                        "description": "Required field. You can only use the following options: fixed, undefined, up_to, per_worked_day, per_worked_hour",
                        "example": "fixed"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "Required field unless your compensation type is undefined",
                        "example": 1000
                      },
                      "unit": {
                        "type": "string",
                        "description": "Unit of the compensation",
                        "example": "Money"
                      },
                      "sync_with_supplements": {
                        "type": "boolean",
                        "description": "Sync with supplements"
                      },
                      "payroll_policy_id": {
                        "type": "integer",
                        "description": "Payroll policy ID",
                        "example": 1
                      },
                      "recurrence_count": {
                        "type": "integer",
                        "description": "Recurrence count",
                        "example": 1
                      },
                      "starts_on": {
                        "type": "string",
                        "description": "When the compensation starts_on",
                        "example": "2022-01-01"
                      },
                      "recurrence": {
                        "type": "string",
                        "description": "Compensation recurrence",
                        "example": "monthly"
                      },
                      "first_payment_on": {
                        "type": "string",
                        "description": "When the first payment is done",
                        "example": "2022-01-01"
                      },
                      "calculation": {
                        "type": "string",
                        "description": "Compensation calculation",
                        "example": "current period"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "time_condition": {
                        "type": "string",
                        "enum": [
                          "full_day",
                          "half_day",
                          "custom"
                        ]
                      },
                      "minimum_amount_of_hours": {
                        "type": "integer"
                      },
                      "minimum_amount_of_hours_in_cents": {
                        "type": "integer",
                        "description": "Compensation expected minimum amount of hours in cents",
                        "example": 1000
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contracts > Compensation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Compensation",
        "summary": "Creates a Compensation",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "contract_version_id",
                    "contracts_taxonomy_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Compensation ID",
                      "example": 1
                    },
                    "contract_version_id": {
                      "type": "integer",
                      "description": "Contract version ID",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "Contracts taxonomy ID",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Compensation description",
                      "example": "Compensation for Meal"
                    },
                    "compensation_type": {
                      "type": "string",
                      "description": "Required field. You can only use the following options: fixed, undefined, up_to, per_worked_day, per_worked_hour",
                      "example": "fixed"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "Required field unless your compensation type is undefined",
                      "example": 1000
                    },
                    "unit": {
                      "type": "string",
                      "description": "Unit of the compensation",
                      "example": "Money"
                    },
                    "sync_with_supplements": {
                      "type": "boolean",
                      "description": "Sync with supplements"
                    },
                    "payroll_policy_id": {
                      "type": "integer",
                      "description": "Payroll policy ID",
                      "example": 1
                    },
                    "recurrence_count": {
                      "type": "integer",
                      "description": "Recurrence count",
                      "example": 1
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "When the compensation starts_on",
                      "example": "2022-01-01"
                    },
                    "recurrence": {
                      "type": "string",
                      "description": "Compensation recurrence",
                      "example": "monthly"
                    },
                    "first_payment_on": {
                      "type": "string",
                      "description": "When the first payment is done",
                      "example": "2022-01-01"
                    },
                    "calculation": {
                      "type": "string",
                      "description": "Compensation calculation",
                      "example": "current period"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "time_condition": {
                      "type": "string",
                      "enum": [
                        "full_day",
                        "half_day",
                        "custom"
                      ]
                    },
                    "minimum_amount_of_hours": {
                      "type": "integer"
                    },
                    "minimum_amount_of_hours_in_cents": {
                      "type": "integer",
                      "description": "Compensation expected minimum amount of hours in cents",
                      "example": 1000
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "contract_version_id",
                  "contracts_taxonomy_id"
                ],
                "properties": {
                  "contract_version_id": {
                    "type": "integer"
                  },
                  "contracts_taxonomy_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "compensation_type": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "integer"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "sync_with_supplements": {
                    "type": "boolean"
                  },
                  "payroll_policy_id": {
                    "type": "integer"
                  },
                  "recurrence_count": {
                    "type": "integer"
                  },
                  "starts_on": {
                    "type": "string"
                  },
                  "recurrence": {
                    "type": "string"
                  },
                  "first_payment_on": {
                    "type": "string"
                  },
                  "calculation": {
                    "type": "string"
                  },
                  "time_condition": {
                    "type": "string",
                    "enum": [
                      "full_day",
                      "half_day",
                      "custom"
                    ]
                  },
                  "minimum_amount_of_hours": {
                    "type": "integer"
                  },
                  "minimum_amount_of_hours_in_cents": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/contracts/compensations/{id}": {
      "get": {
        "tags": [
          "Contracts > Compensation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Compensation",
        "summary": "Reads a single Compensation",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "contract_version_id",
                    "contracts_taxonomy_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Compensation ID",
                      "example": 1
                    },
                    "contract_version_id": {
                      "type": "integer",
                      "description": "Contract version ID",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "Contracts taxonomy ID",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Compensation description",
                      "example": "Compensation for Meal"
                    },
                    "compensation_type": {
                      "type": "string",
                      "description": "Required field. You can only use the following options: fixed, undefined, up_to, per_worked_day, per_worked_hour",
                      "example": "fixed"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "Required field unless your compensation type is undefined",
                      "example": 1000
                    },
                    "unit": {
                      "type": "string",
                      "description": "Unit of the compensation",
                      "example": "Money"
                    },
                    "sync_with_supplements": {
                      "type": "boolean",
                      "description": "Sync with supplements"
                    },
                    "payroll_policy_id": {
                      "type": "integer",
                      "description": "Payroll policy ID",
                      "example": 1
                    },
                    "recurrence_count": {
                      "type": "integer",
                      "description": "Recurrence count",
                      "example": 1
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "When the compensation starts_on",
                      "example": "2022-01-01"
                    },
                    "recurrence": {
                      "type": "string",
                      "description": "Compensation recurrence",
                      "example": "monthly"
                    },
                    "first_payment_on": {
                      "type": "string",
                      "description": "When the first payment is done",
                      "example": "2022-01-01"
                    },
                    "calculation": {
                      "type": "string",
                      "description": "Compensation calculation",
                      "example": "current period"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "time_condition": {
                      "type": "string",
                      "enum": [
                        "full_day",
                        "half_day",
                        "custom"
                      ]
                    },
                    "minimum_amount_of_hours": {
                      "type": "integer"
                    },
                    "minimum_amount_of_hours_in_cents": {
                      "type": "integer",
                      "description": "Compensation expected minimum amount of hours in cents",
                      "example": 1000
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contracts > Compensation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Compensation",
        "summary": "Updates a Compensation",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "contract_version_id",
                    "contracts_taxonomy_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Compensation ID",
                      "example": 1
                    },
                    "contract_version_id": {
                      "type": "integer",
                      "description": "Contract version ID",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "Contracts taxonomy ID",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Compensation description",
                      "example": "Compensation for Meal"
                    },
                    "compensation_type": {
                      "type": "string",
                      "description": "Required field. You can only use the following options: fixed, undefined, up_to, per_worked_day, per_worked_hour",
                      "example": "fixed"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "Required field unless your compensation type is undefined",
                      "example": 1000
                    },
                    "unit": {
                      "type": "string",
                      "description": "Unit of the compensation",
                      "example": "Money"
                    },
                    "sync_with_supplements": {
                      "type": "boolean",
                      "description": "Sync with supplements"
                    },
                    "payroll_policy_id": {
                      "type": "integer",
                      "description": "Payroll policy ID",
                      "example": 1
                    },
                    "recurrence_count": {
                      "type": "integer",
                      "description": "Recurrence count",
                      "example": 1
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "When the compensation starts_on",
                      "example": "2022-01-01"
                    },
                    "recurrence": {
                      "type": "string",
                      "description": "Compensation recurrence",
                      "example": "monthly"
                    },
                    "first_payment_on": {
                      "type": "string",
                      "description": "When the first payment is done",
                      "example": "2022-01-01"
                    },
                    "calculation": {
                      "type": "string",
                      "description": "Compensation calculation",
                      "example": "current period"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "time_condition": {
                      "type": "string",
                      "enum": [
                        "full_day",
                        "half_day",
                        "custom"
                      ]
                    },
                    "minimum_amount_of_hours": {
                      "type": "integer"
                    },
                    "minimum_amount_of_hours_in_cents": {
                      "type": "integer",
                      "description": "Compensation expected minimum amount of hours in cents",
                      "example": 1000
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "contracts_taxonomy_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "contracts_taxonomy_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "compensation_type": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "integer"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "sync_with_supplements": {
                    "type": "boolean"
                  },
                  "payroll_policy_id": {
                    "type": "integer"
                  },
                  "recurrence_count": {
                    "type": "integer"
                  },
                  "starts_on": {
                    "type": "string"
                  },
                  "recurrence": {
                    "type": "string"
                  },
                  "first_payment_on": {
                    "type": "string"
                  },
                  "calculation": {
                    "type": "string"
                  },
                  "time_condition": {
                    "type": "string",
                    "enum": [
                      "full_day",
                      "half_day",
                      "custom"
                    ]
                  },
                  "minimum_amount_of_hours": {
                    "type": "integer"
                  },
                  "minimum_amount_of_hours_in_cents": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contracts > Compensation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Compensation",
        "summary": "Deletes a Compensation",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "contract_version_id",
                    "contracts_taxonomy_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Compensation ID",
                      "example": 1
                    },
                    "contract_version_id": {
                      "type": "integer",
                      "description": "Contract version ID",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "Contracts taxonomy ID",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Compensation description",
                      "example": "Compensation for Meal"
                    },
                    "compensation_type": {
                      "type": "string",
                      "description": "Required field. You can only use the following options: fixed, undefined, up_to, per_worked_day, per_worked_hour",
                      "example": "fixed"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "Required field unless your compensation type is undefined",
                      "example": 1000
                    },
                    "unit": {
                      "type": "string",
                      "description": "Unit of the compensation",
                      "example": "Money"
                    },
                    "sync_with_supplements": {
                      "type": "boolean",
                      "description": "Sync with supplements"
                    },
                    "payroll_policy_id": {
                      "type": "integer",
                      "description": "Payroll policy ID",
                      "example": 1
                    },
                    "recurrence_count": {
                      "type": "integer",
                      "description": "Recurrence count",
                      "example": 1
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "When the compensation starts_on",
                      "example": "2022-01-01"
                    },
                    "recurrence": {
                      "type": "string",
                      "description": "Compensation recurrence",
                      "example": "monthly"
                    },
                    "first_payment_on": {
                      "type": "string",
                      "description": "When the first payment is done",
                      "example": "2022-01-01"
                    },
                    "calculation": {
                      "type": "string",
                      "description": "Compensation calculation",
                      "example": "current period"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "time_condition": {
                      "type": "string",
                      "enum": [
                        "full_day",
                        "half_day",
                        "custom"
                      ]
                    },
                    "minimum_amount_of_hours": {
                      "type": "integer"
                    },
                    "minimum_amount_of_hours_in_cents": {
                      "type": "integer",
                      "description": "Compensation expected minimum amount of hours in cents",
                      "example": 1000
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/contracts/contract_versions": {
      "get": {
        "tags": [
          "Contracts > ContractVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Contract versions",
        "summary": "Reads all Contract versions",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of contract version identifiers.",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of contract version identifiers.",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of employee identifiers, refers to /employees/employees endpoint.",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of employee identifiers, refers to /employees/employees endpoint.",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filters contracts by effective_on field.",
              "example": "2024-10-06"
            },
            "description": "filters contracts by effective_on field.",
            "example": "2024-10-06"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "company_id",
                      "employee_id",
                      "effective_on",
                      "has_payroll",
                      "created_at",
                      "updated_at",
                      "fr_forfait_jours"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier for the contract version.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "identifier for company.",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "employee identifier, refers to /employees/employees endpoint.",
                        "example": 1
                      },
                      "effective_on": {
                        "type": "string",
                        "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                        "example": "2024-10-06"
                      },
                      "country": {
                        "type": "string",
                        "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "job_title": {
                        "type": "string",
                        "description": "job title of the employee.",
                        "example": "Designer"
                      },
                      "job_catalog_level": {
                        "type": "string",
                        "description": "the level of the employee in the job catalog.",
                        "example": "Senior Designer"
                      },
                      "job_catalog_role": {
                        "type": "string",
                        "description": "the role of the employee in the job catalog.",
                        "example": "Designer"
                      },
                      "starts_on": {
                        "type": "string",
                        "description": "the day the employee is hired.",
                        "example": "2024-10-06"
                      },
                      "ends_on": {
                        "type": "string",
                        "description": "the day the employee is terminated.",
                        "example": "2024-10-06"
                      },
                      "has_payroll": {
                        "type": "boolean",
                        "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                        "example": true
                      },
                      "has_trial_period": {
                        "type": "boolean",
                        "description": "a flag that indicates if the employee has a trial period.",
                        "example": true
                      },
                      "trial_period_ends_on": {
                        "type": "string",
                        "description": "when the trial period ends.",
                        "example": "2024-10-06"
                      },
                      "salary_amount": {
                        "type": "integer",
                        "description": "the amount of money the employee earns.",
                        "example": 1000
                      },
                      "salary_frequency": {
                        "type": "string",
                        "description": "the frequency of the salary payment.",
                        "example": "yearly"
                      },
                      "working_week_days": {
                        "type": "string",
                        "description": "the days of the week the employee works.",
                        "example": "monday,tuesday,wednesday,thursday,friday"
                      },
                      "working_hours": {
                        "type": "integer",
                        "description": "the amount of hours the employee works.",
                        "example": 40
                      },
                      "working_hours_frequency": {
                        "type": "string",
                        "description": "the frequency of the working hours.",
                        "example": "week"
                      },
                      "max_legal_yearly_hours": {
                        "type": "integer",
                        "description": "the maximum amount of hours the employee can work in a year.",
                        "example": 2000
                      },
                      "maximum_weekly_hours": {
                        "type": "integer",
                        "description": "the maximum amount of hours the employee can work in a week.",
                        "example": 40
                      },
                      "created_at": {
                        "type": "string",
                        "description": "the date the contract version was created.",
                        "example": "2024-10-06"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "the date of the last contract version updated.",
                        "example": "2024-10-06"
                      },
                      "es_has_teleworking_contract": {
                        "type": "boolean",
                        "description": "flag that indicates if the contract has teleworking.",
                        "example": true
                      },
                      "es_cotization_group": {
                        "type": "integer",
                        "description": "the group of cotization of the employee.",
                        "example": 1
                      },
                      "es_contract_observations": {
                        "type": "string",
                        "description": "observations of the contract.",
                        "example": "review contract for job promotion"
                      },
                      "es_job_description": {
                        "type": "string",
                        "description": "the job description of the employee.",
                        "example": "Designer"
                      },
                      "es_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      },
                      "es_working_day_type_id": {
                        "type": "integer",
                        "description": "working day type identifier.",
                        "example": 1
                      },
                      "es_education_level_id": {
                        "type": "integer",
                        "description": "education level identifier.",
                        "example": 1
                      },
                      "es_professional_category_id": {
                        "type": "integer",
                        "description": "professional category identifier.",
                        "example": 1
                      },
                      "fr_employee_type": {
                        "type": "string",
                        "description": "employee type.",
                        "example": "apprenti"
                      },
                      "fr_forfait_jours": {
                        "type": "boolean",
                        "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                        "example": true
                      },
                      "fr_jours_par_an": {
                        "type": "integer",
                        "description": "the number of days the employee is allowed to work.",
                        "example": 200
                      },
                      "fr_coefficient": {
                        "type": "string"
                      },
                      "fr_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      },
                      "fr_level_id": {
                        "type": "integer",
                        "description": "level identifier.",
                        "example": 1
                      },
                      "fr_step_id": {
                        "type": "integer",
                        "description": "step identifier.",
                        "example": 1
                      },
                      "fr_mutual_id": {
                        "type": "integer",
                        "description": "mutual identifier.",
                        "example": 1
                      },
                      "fr_professional_category_id": {
                        "type": "integer",
                        "description": "professional category identifier.",
                        "example": 1
                      },
                      "fr_work_type_id": {
                        "type": "integer",
                        "description": "work type identifier.",
                        "example": 1
                      },
                      "de_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      },
                      "pt_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contracts > ContractVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Contract version",
        "summary": "Creates a Contract version",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "company_id",
                    "employee_id",
                    "effective_on",
                    "has_payroll",
                    "created_at",
                    "updated_at",
                    "fr_forfait_jours"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier for the contract version.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "identifier for company.",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                      "example": "2024-10-06"
                    },
                    "country": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "job_title": {
                      "type": "string",
                      "description": "job title of the employee.",
                      "example": "Designer"
                    },
                    "job_catalog_level": {
                      "type": "string",
                      "description": "the level of the employee in the job catalog.",
                      "example": "Senior Designer"
                    },
                    "job_catalog_role": {
                      "type": "string",
                      "description": "the role of the employee in the job catalog.",
                      "example": "Designer"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "the day the employee is hired.",
                      "example": "2024-10-06"
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "the day the employee is terminated.",
                      "example": "2024-10-06"
                    },
                    "has_payroll": {
                      "type": "boolean",
                      "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                      "example": true
                    },
                    "has_trial_period": {
                      "type": "boolean",
                      "description": "a flag that indicates if the employee has a trial period.",
                      "example": true
                    },
                    "trial_period_ends_on": {
                      "type": "string",
                      "description": "when the trial period ends.",
                      "example": "2024-10-06"
                    },
                    "salary_amount": {
                      "type": "integer",
                      "description": "the amount of money the employee earns.",
                      "example": 1000
                    },
                    "salary_frequency": {
                      "type": "string",
                      "description": "the frequency of the salary payment.",
                      "example": "yearly"
                    },
                    "working_week_days": {
                      "type": "string",
                      "description": "the days of the week the employee works.",
                      "example": "monday,tuesday,wednesday,thursday,friday"
                    },
                    "working_hours": {
                      "type": "integer",
                      "description": "the amount of hours the employee works.",
                      "example": 40
                    },
                    "working_hours_frequency": {
                      "type": "string",
                      "description": "the frequency of the working hours.",
                      "example": "week"
                    },
                    "max_legal_yearly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a year.",
                      "example": 2000
                    },
                    "maximum_weekly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a week.",
                      "example": 40
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date the contract version was created.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "the date of the last contract version updated.",
                      "example": "2024-10-06"
                    },
                    "es_has_teleworking_contract": {
                      "type": "boolean",
                      "description": "flag that indicates if the contract has teleworking.",
                      "example": true
                    },
                    "es_cotization_group": {
                      "type": "integer",
                      "description": "the group of cotization of the employee.",
                      "example": 1
                    },
                    "es_contract_observations": {
                      "type": "string",
                      "description": "observations of the contract.",
                      "example": "review contract for job promotion"
                    },
                    "es_job_description": {
                      "type": "string",
                      "description": "the job description of the employee.",
                      "example": "Designer"
                    },
                    "es_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "es_working_day_type_id": {
                      "type": "integer",
                      "description": "working day type identifier.",
                      "example": 1
                    },
                    "es_education_level_id": {
                      "type": "integer",
                      "description": "education level identifier.",
                      "example": 1
                    },
                    "es_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_employee_type": {
                      "type": "string",
                      "description": "employee type.",
                      "example": "apprenti"
                    },
                    "fr_forfait_jours": {
                      "type": "boolean",
                      "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                      "example": true
                    },
                    "fr_jours_par_an": {
                      "type": "integer",
                      "description": "the number of days the employee is allowed to work.",
                      "example": 200
                    },
                    "fr_coefficient": {
                      "type": "string"
                    },
                    "fr_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "fr_level_id": {
                      "type": "integer",
                      "description": "level identifier.",
                      "example": 1
                    },
                    "fr_step_id": {
                      "type": "integer",
                      "description": "step identifier.",
                      "example": 1
                    },
                    "fr_mutual_id": {
                      "type": "integer",
                      "description": "mutual identifier.",
                      "example": 1
                    },
                    "fr_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_work_type_id": {
                      "type": "integer",
                      "description": "work type identifier.",
                      "example": 1
                    },
                    "de_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "pt_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_id",
                  "effective_on",
                  "starts_on"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                    "example": "2024-10-06"
                  },
                  "starts_on": {
                    "type": "string",
                    "description": "the day the employee is hired.",
                    "example": "2024-10-06"
                  },
                  "ends_on": {
                    "type": "string",
                    "description": "the day the employee is terminated.",
                    "example": "2024-10-06"
                  },
                  "working_hours_frequency": {
                    "type": "string",
                    "description": "the frequency of the working hours.",
                    "example": "week"
                  },
                  "working_week_days": {
                    "type": "string",
                    "description": "the days of the week the employee works.",
                    "example": "monday,tuesday,wednesday,thursday,friday"
                  },
                  "working_hours": {
                    "type": "integer",
                    "description": "the amount of hours the employee works.",
                    "example": 40
                  },
                  "max_legal_yearly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a year.",
                    "example": 2000
                  },
                  "maximum_weekly_hours": {
                    "type": "integer",
                    "description": "the maximum amount of hours the employee can work in a week.",
                    "example": 40
                  },
                  "salary_frequency": {
                    "type": "string",
                    "description": "the frequency of the salary payment.",
                    "example": "yearly"
                  },
                  "salary_amount": {
                    "type": "integer",
                    "description": "the amount of money the employee earns.",
                    "example": 40000
                  },
                  "job_title": {
                    "type": "string",
                    "description": "job title of the employee.",
                    "example": "Designer"
                  },
                  "has_trial_period": {
                    "type": "boolean",
                    "description": "a flag that indicates if the employee has a trial period.",
                    "example": true
                  },
                  "trial_period_ends_on": {
                    "type": "string",
                    "description": "when the trial period ends.",
                    "example": "2024-10-06"
                  },
                  "copy_current_contract_version": {
                    "type": "boolean"
                  },
                  "job_catalog_level_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/contracts/contract_versions/{id}": {
      "get": {
        "tags": [
          "Contracts > ContractVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Contract version",
        "summary": "Reads a single Contract version",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "company_id",
                    "employee_id",
                    "effective_on",
                    "has_payroll",
                    "created_at",
                    "updated_at",
                    "fr_forfait_jours"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier for the contract version.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "identifier for company.",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                      "example": "2024-10-06"
                    },
                    "country": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "job_title": {
                      "type": "string",
                      "description": "job title of the employee.",
                      "example": "Designer"
                    },
                    "job_catalog_level": {
                      "type": "string",
                      "description": "the level of the employee in the job catalog.",
                      "example": "Senior Designer"
                    },
                    "job_catalog_role": {
                      "type": "string",
                      "description": "the role of the employee in the job catalog.",
                      "example": "Designer"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "the day the employee is hired.",
                      "example": "2024-10-06"
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "the day the employee is terminated.",
                      "example": "2024-10-06"
                    },
                    "has_payroll": {
                      "type": "boolean",
                      "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                      "example": true
                    },
                    "has_trial_period": {
                      "type": "boolean",
                      "description": "a flag that indicates if the employee has a trial period.",
                      "example": true
                    },
                    "trial_period_ends_on": {
                      "type": "string",
                      "description": "when the trial period ends.",
                      "example": "2024-10-06"
                    },
                    "salary_amount": {
                      "type": "integer",
                      "description": "the amount of money the employee earns.",
                      "example": 1000
                    },
                    "salary_frequency": {
                      "type": "string",
                      "description": "the frequency of the salary payment.",
                      "example": "yearly"
                    },
                    "working_week_days": {
                      "type": "string",
                      "description": "the days of the week the employee works.",
                      "example": "monday,tuesday,wednesday,thursday,friday"
                    },
                    "working_hours": {
                      "type": "integer",
                      "description": "the amount of hours the employee works.",
                      "example": 40
                    },
                    "working_hours_frequency": {
                      "type": "string",
                      "description": "the frequency of the working hours.",
                      "example": "week"
                    },
                    "max_legal_yearly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a year.",
                      "example": 2000
                    },
                    "maximum_weekly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a week.",
                      "example": 40
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date the contract version was created.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "the date of the last contract version updated.",
                      "example": "2024-10-06"
                    },
                    "es_has_teleworking_contract": {
                      "type": "boolean",
                      "description": "flag that indicates if the contract has teleworking.",
                      "example": true
                    },
                    "es_cotization_group": {
                      "type": "integer",
                      "description": "the group of cotization of the employee.",
                      "example": 1
                    },
                    "es_contract_observations": {
                      "type": "string",
                      "description": "observations of the contract.",
                      "example": "review contract for job promotion"
                    },
                    "es_job_description": {
                      "type": "string",
                      "description": "the job description of the employee.",
                      "example": "Designer"
                    },
                    "es_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "es_working_day_type_id": {
                      "type": "integer",
                      "description": "working day type identifier.",
                      "example": 1
                    },
                    "es_education_level_id": {
                      "type": "integer",
                      "description": "education level identifier.",
                      "example": 1
                    },
                    "es_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_employee_type": {
                      "type": "string",
                      "description": "employee type.",
                      "example": "apprenti"
                    },
                    "fr_forfait_jours": {
                      "type": "boolean",
                      "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                      "example": true
                    },
                    "fr_jours_par_an": {
                      "type": "integer",
                      "description": "the number of days the employee is allowed to work.",
                      "example": 200
                    },
                    "fr_coefficient": {
                      "type": "string"
                    },
                    "fr_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "fr_level_id": {
                      "type": "integer",
                      "description": "level identifier.",
                      "example": 1
                    },
                    "fr_step_id": {
                      "type": "integer",
                      "description": "step identifier.",
                      "example": 1
                    },
                    "fr_mutual_id": {
                      "type": "integer",
                      "description": "mutual identifier.",
                      "example": 1
                    },
                    "fr_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_work_type_id": {
                      "type": "integer",
                      "description": "work type identifier.",
                      "example": 1
                    },
                    "de_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "pt_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contracts > ContractVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Contract version",
        "summary": "Updates a Contract version",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "company_id",
                    "employee_id",
                    "effective_on",
                    "has_payroll",
                    "created_at",
                    "updated_at",
                    "fr_forfait_jours"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier for the contract version.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "identifier for company.",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                      "example": "2024-10-06"
                    },
                    "country": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "job_title": {
                      "type": "string",
                      "description": "job title of the employee.",
                      "example": "Designer"
                    },
                    "job_catalog_level": {
                      "type": "string",
                      "description": "the level of the employee in the job catalog.",
                      "example": "Senior Designer"
                    },
                    "job_catalog_role": {
                      "type": "string",
                      "description": "the role of the employee in the job catalog.",
                      "example": "Designer"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "the day the employee is hired.",
                      "example": "2024-10-06"
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "the day the employee is terminated.",
                      "example": "2024-10-06"
                    },
                    "has_payroll": {
                      "type": "boolean",
                      "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                      "example": true
                    },
                    "has_trial_period": {
                      "type": "boolean",
                      "description": "a flag that indicates if the employee has a trial period.",
                      "example": true
                    },
                    "trial_period_ends_on": {
                      "type": "string",
                      "description": "when the trial period ends.",
                      "example": "2024-10-06"
                    },
                    "salary_amount": {
                      "type": "integer",
                      "description": "the amount of money the employee earns.",
                      "example": 1000
                    },
                    "salary_frequency": {
                      "type": "string",
                      "description": "the frequency of the salary payment.",
                      "example": "yearly"
                    },
                    "working_week_days": {
                      "type": "string",
                      "description": "the days of the week the employee works.",
                      "example": "monday,tuesday,wednesday,thursday,friday"
                    },
                    "working_hours": {
                      "type": "integer",
                      "description": "the amount of hours the employee works.",
                      "example": 40
                    },
                    "working_hours_frequency": {
                      "type": "string",
                      "description": "the frequency of the working hours.",
                      "example": "week"
                    },
                    "max_legal_yearly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a year.",
                      "example": 2000
                    },
                    "maximum_weekly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a week.",
                      "example": 40
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date the contract version was created.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "the date of the last contract version updated.",
                      "example": "2024-10-06"
                    },
                    "es_has_teleworking_contract": {
                      "type": "boolean",
                      "description": "flag that indicates if the contract has teleworking.",
                      "example": true
                    },
                    "es_cotization_group": {
                      "type": "integer",
                      "description": "the group of cotization of the employee.",
                      "example": 1
                    },
                    "es_contract_observations": {
                      "type": "string",
                      "description": "observations of the contract.",
                      "example": "review contract for job promotion"
                    },
                    "es_job_description": {
                      "type": "string",
                      "description": "the job description of the employee.",
                      "example": "Designer"
                    },
                    "es_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "es_working_day_type_id": {
                      "type": "integer",
                      "description": "working day type identifier.",
                      "example": 1
                    },
                    "es_education_level_id": {
                      "type": "integer",
                      "description": "education level identifier.",
                      "example": 1
                    },
                    "es_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_employee_type": {
                      "type": "string",
                      "description": "employee type.",
                      "example": "apprenti"
                    },
                    "fr_forfait_jours": {
                      "type": "boolean",
                      "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                      "example": true
                    },
                    "fr_jours_par_an": {
                      "type": "integer",
                      "description": "the number of days the employee is allowed to work.",
                      "example": 200
                    },
                    "fr_coefficient": {
                      "type": "string"
                    },
                    "fr_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "fr_level_id": {
                      "type": "integer",
                      "description": "level identifier.",
                      "example": 1
                    },
                    "fr_step_id": {
                      "type": "integer",
                      "description": "step identifier.",
                      "example": 1
                    },
                    "fr_mutual_id": {
                      "type": "integer",
                      "description": "mutual identifier.",
                      "example": 1
                    },
                    "fr_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_work_type_id": {
                      "type": "integer",
                      "description": "work type identifier.",
                      "example": 1
                    },
                    "de_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "pt_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "contract version identifier.",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                    "example": "2024-10-06"
                  },
                  "starts_on": {
                    "type": "string",
                    "description": "the day the employee is hired.",
                    "example": "2024-10-06"
                  },
                  "ends_on": {
                    "type": "string",
                    "description": "the day the employee is terminated.",
                    "example": "2024-10-06"
                  },
                  "working_hours_frequency": {
                    "type": "string",
                    "description": "the frequency of the working hours.",
                    "example": "week"
                  },
                  "working_week_days": {
                    "type": "string",
                    "description": "the days of the week the employee works.",
                    "example": "monday,tuesday,wednesday,thursday,friday"
                  },
                  "working_hours": {
                    "type": "integer",
                    "description": "the amount of hours the employee works.",
                    "example": 40
                  },
                  "salary_frequency": {
                    "type": "string",
                    "description": "the frequency of the salary payment.",
                    "example": "yearly"
                  },
                  "salary_amount": {
                    "type": "integer",
                    "description": "the amount of money the employee earns.",
                    "example": 40000
                  },
                  "job_title": {
                    "type": "string",
                    "description": "job title of the employee.",
                    "example": "Designer"
                  },
                  "es_cotization_group": {
                    "type": "integer",
                    "description": "cotization group identifier.",
                    "example": 1
                  },
                  "es_professional_category_id": {
                    "type": "integer",
                    "description": "professional category identifier.",
                    "example": 1
                  },
                  "es_education_level_id": {
                    "type": "integer",
                    "description": "education level identifier.",
                    "example": 1
                  },
                  "es_contract_type_id": {
                    "type": "integer",
                    "description": "contract type identifier.",
                    "example": 1
                  },
                  "es_working_day_type_id": {
                    "type": "integer",
                    "description": "working day type identifier.",
                    "example": 1
                  },
                  "has_trial_period": {
                    "type": "boolean",
                    "description": "a flag that indicates if the employee has a trial period.",
                    "example": true
                  },
                  "trial_period_ends_on": {
                    "type": "string",
                    "description": "when the trial period ends.",
                    "example": "2024-10-06"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contracts > ContractVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Contract version",
        "summary": "Deletes a Contract version",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "company_id",
                    "employee_id",
                    "effective_on",
                    "has_payroll",
                    "created_at",
                    "updated_at",
                    "fr_forfait_jours"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier for the contract version.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "identifier for company.",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                      "example": "2024-10-06"
                    },
                    "country": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "job_title": {
                      "type": "string",
                      "description": "job title of the employee.",
                      "example": "Designer"
                    },
                    "job_catalog_level": {
                      "type": "string",
                      "description": "the level of the employee in the job catalog.",
                      "example": "Senior Designer"
                    },
                    "job_catalog_role": {
                      "type": "string",
                      "description": "the role of the employee in the job catalog.",
                      "example": "Designer"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "the day the employee is hired.",
                      "example": "2024-10-06"
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "the day the employee is terminated.",
                      "example": "2024-10-06"
                    },
                    "has_payroll": {
                      "type": "boolean",
                      "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                      "example": true
                    },
                    "has_trial_period": {
                      "type": "boolean",
                      "description": "a flag that indicates if the employee has a trial period.",
                      "example": true
                    },
                    "trial_period_ends_on": {
                      "type": "string",
                      "description": "when the trial period ends.",
                      "example": "2024-10-06"
                    },
                    "salary_amount": {
                      "type": "integer",
                      "description": "the amount of money the employee earns.",
                      "example": 1000
                    },
                    "salary_frequency": {
                      "type": "string",
                      "description": "the frequency of the salary payment.",
                      "example": "yearly"
                    },
                    "working_week_days": {
                      "type": "string",
                      "description": "the days of the week the employee works.",
                      "example": "monday,tuesday,wednesday,thursday,friday"
                    },
                    "working_hours": {
                      "type": "integer",
                      "description": "the amount of hours the employee works.",
                      "example": 40
                    },
                    "working_hours_frequency": {
                      "type": "string",
                      "description": "the frequency of the working hours.",
                      "example": "week"
                    },
                    "max_legal_yearly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a year.",
                      "example": 2000
                    },
                    "maximum_weekly_hours": {
                      "type": "integer",
                      "description": "the maximum amount of hours the employee can work in a week.",
                      "example": 40
                    },
                    "created_at": {
                      "type": "string",
                      "description": "the date the contract version was created.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "the date of the last contract version updated.",
                      "example": "2024-10-06"
                    },
                    "es_has_teleworking_contract": {
                      "type": "boolean",
                      "description": "flag that indicates if the contract has teleworking.",
                      "example": true
                    },
                    "es_cotization_group": {
                      "type": "integer",
                      "description": "the group of cotization of the employee.",
                      "example": 1
                    },
                    "es_contract_observations": {
                      "type": "string",
                      "description": "observations of the contract.",
                      "example": "review contract for job promotion"
                    },
                    "es_job_description": {
                      "type": "string",
                      "description": "the job description of the employee.",
                      "example": "Designer"
                    },
                    "es_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "es_working_day_type_id": {
                      "type": "integer",
                      "description": "working day type identifier.",
                      "example": 1
                    },
                    "es_education_level_id": {
                      "type": "integer",
                      "description": "education level identifier.",
                      "example": 1
                    },
                    "es_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_employee_type": {
                      "type": "string",
                      "description": "employee type.",
                      "example": "apprenti"
                    },
                    "fr_forfait_jours": {
                      "type": "boolean",
                      "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                      "example": true
                    },
                    "fr_jours_par_an": {
                      "type": "integer",
                      "description": "the number of days the employee is allowed to work.",
                      "example": 200
                    },
                    "fr_coefficient": {
                      "type": "string"
                    },
                    "fr_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "fr_level_id": {
                      "type": "integer",
                      "description": "level identifier.",
                      "example": 1
                    },
                    "fr_step_id": {
                      "type": "integer",
                      "description": "step identifier.",
                      "example": 1
                    },
                    "fr_mutual_id": {
                      "type": "integer",
                      "description": "mutual identifier.",
                      "example": 1
                    },
                    "fr_professional_category_id": {
                      "type": "integer",
                      "description": "professional category identifier.",
                      "example": 1
                    },
                    "fr_work_type_id": {
                      "type": "integer",
                      "description": "work type identifier.",
                      "example": 1
                    },
                    "de_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    },
                    "pt_contract_type_id": {
                      "type": "integer",
                      "description": "contract type identifier.",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/contracts/reference_contracts": {
      "get": {
        "tags": [
          "Contracts > ReferenceContract"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Reference Contracts. The reference contract is the contract that applies today. If no contract applies today, we will return the nearest upcoming contract. If there are no upcoming contracts, we will provide the most recent past contract.",
        "summary": "Reads all Reference contracts",
        "parameters": [
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by employee ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by employee ids.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "company_id",
                      "employee_id",
                      "effective_on",
                      "has_payroll",
                      "created_at",
                      "updated_at",
                      "fr_forfait_jours"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier for the contract version.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "identifier for company.",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "employee identifier, refers to /employees/employees endpoint.",
                        "example": 1
                      },
                      "effective_on": {
                        "type": "string",
                        "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
                        "example": "2024-10-06"
                      },
                      "country": {
                        "type": "string",
                        "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "job_title": {
                        "type": "string",
                        "description": "job title of the employee.",
                        "example": "Designer"
                      },
                      "job_catalog_level": {
                        "type": "string",
                        "description": "the level of the employee in the job catalog.",
                        "example": "Senior Designer"
                      },
                      "job_catalog_role": {
                        "type": "string",
                        "description": "the role of the employee in the job catalog.",
                        "example": "Designer"
                      },
                      "starts_on": {
                        "type": "string",
                        "description": "the day the employee is hired.",
                        "example": "2024-10-06"
                      },
                      "ends_on": {
                        "type": "string",
                        "description": "the day the employee is terminated.",
                        "example": "2024-10-06"
                      },
                      "has_payroll": {
                        "type": "boolean",
                        "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
                        "example": true
                      },
                      "has_trial_period": {
                        "type": "boolean",
                        "description": "a flag that indicates if the employee has a trial period.",
                        "example": true
                      },
                      "trial_period_ends_on": {
                        "type": "string",
                        "description": "when the trial period ends.",
                        "example": "2024-10-06"
                      },
                      "salary_amount": {
                        "type": "integer",
                        "description": "the amount of money the employee earns.",
                        "example": 1000
                      },
                      "salary_frequency": {
                        "type": "string",
                        "description": "the frequency of the salary payment.",
                        "example": "yearly"
                      },
                      "working_week_days": {
                        "type": "string",
                        "description": "the days of the week the employee works.",
                        "example": "monday,tuesday,wednesday,thursday,friday"
                      },
                      "working_hours": {
                        "type": "integer",
                        "description": "the amount of hours the employee works.",
                        "example": 40
                      },
                      "working_hours_frequency": {
                        "type": "string",
                        "description": "the frequency of the working hours.",
                        "example": "week"
                      },
                      "max_legal_yearly_hours": {
                        "type": "integer",
                        "description": "the maximum amount of hours the employee can work in a year.",
                        "example": 2000
                      },
                      "maximum_weekly_hours": {
                        "type": "integer",
                        "description": "the maximum amount of hours the employee can work in a week.",
                        "example": 40
                      },
                      "created_at": {
                        "type": "string",
                        "description": "the date the contract version was created.",
                        "example": "2024-10-06"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "the date of the last contract version updated.",
                        "example": "2024-10-06"
                      },
                      "es_has_teleworking_contract": {
                        "type": "boolean",
                        "description": "flag that indicates if the contract has teleworking.",
                        "example": true
                      },
                      "es_cotization_group": {
                        "type": "integer",
                        "description": "the group of cotization of the employee.",
                        "example": 1
                      },
                      "es_contract_observations": {
                        "type": "string",
                        "description": "observations of the contract.",
                        "example": "review contract for job promotion"
                      },
                      "es_job_description": {
                        "type": "string",
                        "description": "the job description of the employee.",
                        "example": "Designer"
                      },
                      "es_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      },
                      "es_working_day_type_id": {
                        "type": "integer",
                        "description": "working day type identifier.",
                        "example": 1
                      },
                      "es_education_level_id": {
                        "type": "integer",
                        "description": "education level identifier.",
                        "example": 1
                      },
                      "es_professional_category_id": {
                        "type": "integer",
                        "description": "professional category identifier.",
                        "example": 1
                      },
                      "fr_employee_type": {
                        "type": "string",
                        "description": "employee type.",
                        "example": "apprenti"
                      },
                      "fr_forfait_jours": {
                        "type": "boolean",
                        "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
                        "example": true
                      },
                      "fr_jours_par_an": {
                        "type": "integer",
                        "description": "the number of days the employee is allowed to work.",
                        "example": 200
                      },
                      "fr_coefficient": {
                        "type": "string"
                      },
                      "fr_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      },
                      "fr_level_id": {
                        "type": "integer",
                        "description": "level identifier.",
                        "example": 1
                      },
                      "fr_step_id": {
                        "type": "integer",
                        "description": "step identifier.",
                        "example": 1
                      },
                      "fr_mutual_id": {
                        "type": "integer",
                        "description": "mutual identifier.",
                        "example": 1
                      },
                      "fr_professional_category_id": {
                        "type": "integer",
                        "description": "professional category identifier.",
                        "example": 1
                      },
                      "fr_work_type_id": {
                        "type": "integer",
                        "description": "work type identifier.",
                        "example": 1
                      },
                      "de_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      },
                      "pt_contract_type_id": {
                        "type": "integer",
                        "description": "contract type identifier.",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/contracts/taxonomies": {
      "get": {
        "tags": [
          "Contracts > Taxonomy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Taxonomies",
        "summary": "Reads all Taxonomies",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "legal_entity_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "legal_entity_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "archived",
                      "default",
                      "legal_entity_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "archived": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "legal_entity_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/contracts/taxonomies/{id}": {
      "get": {
        "tags": [
          "Contracts > Taxonomy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Taxonomy",
        "summary": "Reads a single Taxonomy",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "archived",
                    "default",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "default": {
                      "type": "boolean"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/fields": {
      "get": {
        "tags": [
          "CustomFields > Field"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Fields",
        "summary": "Reads all Fields",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Field identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Field identifiers",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "field_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "text",
                "long_text",
                "date",
                "rating",
                "checkbox",
                "single_choice",
                "multiple_choice",
                "money",
                "cents"
              ]
            }
          },
          {
            "name": "label",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Field label",
              "example": "T-Shirt Size"
            },
            "description": "Field label",
            "example": "T-Shirt Size"
          },
          {
            "name": "slug",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Custom field slug",
              "example": "tshirt_size"
            },
            "description": "Custom field slug",
            "example": "tshirt_size"
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Company identifier where this field belongs",
              "example": 3
            },
            "description": "Company identifier where this field belongs",
            "example": 3
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "field_type",
                      "label_text"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Field identifier",
                        "example": 2
                      },
                      "field_type": {
                        "type": "string",
                        "description": "The type of the field's value",
                        "enum": [
                          "text",
                          "long_text",
                          "date",
                          "rating",
                          "checkbox",
                          "single_choice",
                          "multiple_choice",
                          "money",
                          "cents"
                        ],
                        "example": "text"
                      },
                      "label_text": {
                        "type": "string",
                        "description": "Field label",
                        "example": "T-Shirt Size"
                      },
                      "position": {
                        "type": "integer",
                        "description": "Field position within employee profile",
                        "example": 3
                      },
                      "required": {
                        "type": "boolean",
                        "description": "Requirement to fill this field",
                        "example": true
                      },
                      "min_value": {
                        "type": "integer",
                        "description": "Minimum value in range field type",
                        "example": 10
                      },
                      "max_value": {
                        "type": "integer",
                        "description": "Maximum value in range field type",
                        "example": 0
                      },
                      "options": {
                        "type": "array",
                        "description": "Array of options",
                        "example": [
                          true,
                          false,
                          "maybe"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "legal_entity_name": {
                        "type": "string",
                        "description": "Legal entity name where this field belongs",
                        "example": "Factorial Legal"
                      },
                      "slug": {
                        "type": "string",
                        "description": "Custom field slug",
                        "example": "tshirt_size"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomFields > Field"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Field",
        "summary": "Creates a Field",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "field_type",
                    "label_text"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Field identifier",
                      "example": 2
                    },
                    "field_type": {
                      "type": "string",
                      "description": "The type of the field's value",
                      "enum": [
                        "text",
                        "long_text",
                        "date",
                        "rating",
                        "checkbox",
                        "single_choice",
                        "multiple_choice",
                        "money",
                        "cents"
                      ],
                      "example": "text"
                    },
                    "label_text": {
                      "type": "string",
                      "description": "Field label",
                      "example": "T-Shirt Size"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Field position within employee profile",
                      "example": 3
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Requirement to fill this field",
                      "example": true
                    },
                    "min_value": {
                      "type": "integer",
                      "description": "Minimum value in range field type",
                      "example": 10
                    },
                    "max_value": {
                      "type": "integer",
                      "description": "Maximum value in range field type",
                      "example": 0
                    },
                    "options": {
                      "type": "array",
                      "description": "Array of options",
                      "example": [
                        true,
                        false,
                        "maybe"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "legal_entity_name": {
                      "type": "string",
                      "description": "Legal entity name where this field belongs",
                      "example": "Factorial Legal"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Custom field slug",
                      "example": "tshirt_size"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "field_type"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier where this field belongs",
                    "example": 3
                  },
                  "editable": {
                    "type": "string",
                    "description": "Group of employees that can edit the field",
                    "enum": [
                      "owned",
                      "reportees",
                      "team_leader",
                      "everybody"
                    ],
                    "example": "owned"
                  },
                  "visible": {
                    "type": "string",
                    "description": "Group of employees that can see the field",
                    "enum": [
                      "owned",
                      "reportees",
                      "team_leader",
                      "everybody"
                    ],
                    "example": "everybody"
                  },
                  "label": {
                    "type": "string",
                    "description": "Field label",
                    "example": "T-Shirt Size"
                  },
                  "field_type": {
                    "type": "string",
                    "enum": [
                      "text",
                      "long_text",
                      "date",
                      "rating",
                      "checkbox",
                      "single_choice",
                      "multiple_choice",
                      "money",
                      "cents"
                    ]
                  },
                  "min_value": {
                    "type": "integer",
                    "description": "Minimum value in range field type",
                    "example": 10
                  },
                  "max_value": {
                    "type": "integer",
                    "description": "Maximum value in range field type",
                    "example": 0
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Requirement to fill this field",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/fields/{id}": {
      "get": {
        "tags": [
          "CustomFields > Field"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Field",
        "summary": "Reads a single Field",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "field_type",
                    "label_text"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Field identifier",
                      "example": 2
                    },
                    "field_type": {
                      "type": "string",
                      "description": "The type of the field's value",
                      "enum": [
                        "text",
                        "long_text",
                        "date",
                        "rating",
                        "checkbox",
                        "single_choice",
                        "multiple_choice",
                        "money",
                        "cents"
                      ],
                      "example": "text"
                    },
                    "label_text": {
                      "type": "string",
                      "description": "Field label",
                      "example": "T-Shirt Size"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Field position within employee profile",
                      "example": 3
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Requirement to fill this field",
                      "example": true
                    },
                    "min_value": {
                      "type": "integer",
                      "description": "Minimum value in range field type",
                      "example": 10
                    },
                    "max_value": {
                      "type": "integer",
                      "description": "Maximum value in range field type",
                      "example": 0
                    },
                    "options": {
                      "type": "array",
                      "description": "Array of options",
                      "example": [
                        true,
                        false,
                        "maybe"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "legal_entity_name": {
                      "type": "string",
                      "description": "Legal entity name where this field belongs",
                      "example": "Factorial Legal"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Custom field slug",
                      "example": "tshirt_size"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomFields > Field"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Field",
        "summary": "Deletes a Field",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "field_type",
                    "label_text"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Field identifier",
                      "example": 2
                    },
                    "field_type": {
                      "type": "string",
                      "description": "The type of the field's value",
                      "enum": [
                        "text",
                        "long_text",
                        "date",
                        "rating",
                        "checkbox",
                        "single_choice",
                        "multiple_choice",
                        "money",
                        "cents"
                      ],
                      "example": "text"
                    },
                    "label_text": {
                      "type": "string",
                      "description": "Field label",
                      "example": "T-Shirt Size"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Field position within employee profile",
                      "example": 3
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Requirement to fill this field",
                      "example": true
                    },
                    "min_value": {
                      "type": "integer",
                      "description": "Minimum value in range field type",
                      "example": 10
                    },
                    "max_value": {
                      "type": "integer",
                      "description": "Maximum value in range field type",
                      "example": 0
                    },
                    "options": {
                      "type": "array",
                      "description": "Array of options",
                      "example": [
                        true,
                        false,
                        "maybe"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "legal_entity_name": {
                      "type": "string",
                      "description": "Legal entity name where this field belongs",
                      "example": "Factorial Legal"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Custom field slug",
                      "example": "tshirt_size"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/options": {
      "get": {
        "tags": [
          "CustomFields > Option"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Options",
        "summary": "Reads all Options",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Options identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Options identifiers",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "field_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Identifiers for the fields where the options belong to",
              "example": [
                3,
                4
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Identifiers for the fields where the options belong to",
            "example": [
              3,
              4
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Option identifier",
                        "example": 1
                      },
                      "label": {
                        "type": "string",
                        "description": "Title for option",
                        "example": "T-shirt size"
                      },
                      "value": {
                        "type": "string",
                        "description": "Option value",
                        "example": "L"
                      },
                      "is_active": {
                        "type": "boolean",
                        "description": "Flag to make the option available",
                        "example": true
                      },
                      "field_id": {
                        "type": "integer",
                        "description": "Custom Fields identifier",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomFields > Option"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates an Option",
        "summary": "Creates an Option",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Option identifier",
                      "example": 1
                    },
                    "label": {
                      "type": "string",
                      "description": "Title for option",
                      "example": "T-shirt size"
                    },
                    "value": {
                      "type": "string",
                      "description": "Option value",
                      "example": "L"
                    },
                    "is_active": {
                      "type": "boolean",
                      "description": "Flag to make the option available",
                      "example": true
                    },
                    "field_id": {
                      "type": "integer",
                      "description": "Custom Fields identifier",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "label",
                  "field_id"
                ],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "Title for option",
                    "example": "T-shirt size"
                  },
                  "is_active": {
                    "type": "boolean",
                    "description": "Flag to make the option available",
                    "example": true
                  },
                  "field_id": {
                    "type": "integer",
                    "description": "Custom Fields identifier",
                    "example": 2
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/options/{id}": {
      "get": {
        "tags": [
          "CustomFields > Option"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Option",
        "summary": "Reads a single Option",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Option identifier",
                      "example": 1
                    },
                    "label": {
                      "type": "string",
                      "description": "Title for option",
                      "example": "T-shirt size"
                    },
                    "value": {
                      "type": "string",
                      "description": "Option value",
                      "example": "L"
                    },
                    "is_active": {
                      "type": "boolean",
                      "description": "Flag to make the option available",
                      "example": true
                    },
                    "field_id": {
                      "type": "integer",
                      "description": "Custom Fields identifier",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/resource_fields": {
      "get": {
        "tags": [
          "CustomFields > ResourceField"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads schema custom fields",
        "summary": "Reads all Resource fields",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Resource field identifiers",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Resource field identifiers",
            "example": [
              1
            ]
          },
          {
            "name": "field_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Custom Field identifiers",
              "example": [
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Custom Field identifiers",
            "example": [
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Resource field identifier",
                        "example": 1
                      },
                      "field_id": {
                        "type": "integer",
                        "description": "Custom Field identifier",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomFields > ResourceField"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates an schema custom field",
        "summary": "Creates a Resource field",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Resource field identifier",
                      "example": 1
                    },
                    "field_id": {
                      "type": "integer",
                      "description": "Custom Field identifier",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "schema_id",
                  "company_id",
                  "field_type",
                  "required",
                  "editable",
                  "visible"
                ],
                "properties": {
                  "schema_id": {
                    "type": "integer",
                    "description": "Schema identifier",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier",
                    "example": 1
                  },
                  "label": {
                    "type": "string",
                    "description": "Resource field label",
                    "example": "T-shirt size"
                  },
                  "field_type": {
                    "type": "string",
                    "description": "Type of the value for the resource field",
                    "enum": [
                      "text",
                      "long_text",
                      "date",
                      "rating",
                      "checkbox",
                      "single_choice",
                      "multiple_choice",
                      "money",
                      "cents"
                    ],
                    "example": "text"
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Requirement to fill this resource field",
                    "example": true
                  },
                  "max_value": {
                    "type": "integer",
                    "description": "Maximum value for range field type",
                    "example": 10
                  },
                  "min_value": {
                    "type": "integer",
                    "description": "Minimum value for range field type",
                    "example": 0
                  },
                  "position": {
                    "type": "integer",
                    "description": "Field position within schema",
                    "example": 2
                  },
                  "editable": {
                    "type": "string",
                    "description": "Group for which this field is editable",
                    "enum": [
                      "owned",
                      "reportees",
                      "team_leader",
                      "everybody"
                    ],
                    "example": "team_leader"
                  },
                  "visible": {
                    "type": "string",
                    "description": "Group for which this field is visible",
                    "enum": [
                      "owned",
                      "reportees",
                      "team_leader",
                      "everybody"
                    ],
                    "example": "everybody"
                  },
                  "options": {
                    "type": "array",
                    "description": "Array of options to choose from",
                    "example": [
                      "yes",
                      "no",
                      "maybe"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/resource_fields/{id}": {
      "get": {
        "tags": [
          "CustomFields > ResourceField"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads schema custom fields",
        "summary": "Reads a single Resource field",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Resource field identifier",
                      "example": 1
                    },
                    "field_id": {
                      "type": "integer",
                      "description": "Custom Field identifier",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/values": {
      "get": {
        "tags": [
          "CustomFields > Value"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Values",
        "summary": "Reads all Values",
        "parameters": [
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "identifiers[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "instance_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "custom_field_identifier",
                      "valuable_id",
                      "field_id",
                      "valuable_type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the custom field value",
                        "example": 1
                      },
                      "value": {
                        "type": "boolean",
                        "description": "Custom Fields value",
                        "example": "This is an example value for a custom field"
                      },
                      "long_text_value": {
                        "type": "string",
                        "description": "Custom field text value",
                        "example": "The value of a text custom field"
                      },
                      "custom_field_identifier": {
                        "type": "string"
                      },
                      "date_value": {
                        "type": "string",
                        "description": "Custom field date value",
                        "example": "2022-01-01"
                      },
                      "single_choice_value": {
                        "type": "string",
                        "description": "Custom field single choice value",
                        "example": "Option 1"
                      },
                      "cents_value": {
                        "type": "integer",
                        "description": "Custom field number value",
                        "example": 100
                      },
                      "valuable_id": {
                        "type": "integer"
                      },
                      "field_id": {
                        "type": "integer"
                      },
                      "valuable_type": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "usage_group_id": {
                        "type": "integer"
                      },
                      "usage_group_slug": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomFields > Value"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Value",
        "summary": "Creates a Value",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "custom_field_identifier",
                    "valuable_id",
                    "field_id",
                    "valuable_type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the custom field value",
                      "example": 1
                    },
                    "value": {
                      "type": "boolean",
                      "description": "Custom Fields value",
                      "example": "This is an example value for a custom field"
                    },
                    "long_text_value": {
                      "type": "string",
                      "description": "Custom field text value",
                      "example": "The value of a text custom field"
                    },
                    "custom_field_identifier": {
                      "type": "string"
                    },
                    "date_value": {
                      "type": "string",
                      "description": "Custom field date value",
                      "example": "2022-01-01"
                    },
                    "single_choice_value": {
                      "type": "string",
                      "description": "Custom field single choice value",
                      "example": "Option 1"
                    },
                    "cents_value": {
                      "type": "integer",
                      "description": "Custom field number value",
                      "example": 100
                    },
                    "valuable_id": {
                      "type": "integer"
                    },
                    "field_id": {
                      "type": "integer"
                    },
                    "valuable_type": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "usage_group_id": {
                      "type": "integer"
                    },
                    "usage_group_slug": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "field_id",
                  "valuable_type",
                  "valuable_id",
                  "value"
                ],
                "properties": {
                  "field_id": {
                    "type": "integer",
                    "description": "Custom Fields identifier",
                    "example": 1
                  },
                  "valuable_type": {
                    "type": "string",
                    "description": "Type of the object that the custom field is attached to: 'Document' | 'Employee' | 'Contracts::ContractVersion' | 'CustomResources::Value' ",
                    "example": "Employee"
                  },
                  "valuable_id": {
                    "type": "integer",
                    "description": "Identifier of the object that the custom field is attached to",
                    "example": 1
                  },
                  "value": {
                    "type": "string",
                    "description": "Custom Fields value",
                    "example": "This is an example value for a custom field"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_fields/values/{id}": {
      "get": {
        "tags": [
          "CustomFields > Value"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Value",
        "summary": "Reads a single Value",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "custom_field_identifier",
                    "valuable_id",
                    "field_id",
                    "valuable_type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the custom field value",
                      "example": 1
                    },
                    "value": {
                      "type": "boolean",
                      "description": "Custom Fields value",
                      "example": "This is an example value for a custom field"
                    },
                    "long_text_value": {
                      "type": "string",
                      "description": "Custom field text value",
                      "example": "The value of a text custom field"
                    },
                    "custom_field_identifier": {
                      "type": "string"
                    },
                    "date_value": {
                      "type": "string",
                      "description": "Custom field date value",
                      "example": "2022-01-01"
                    },
                    "single_choice_value": {
                      "type": "string",
                      "description": "Custom field single choice value",
                      "example": "Option 1"
                    },
                    "cents_value": {
                      "type": "integer",
                      "description": "Custom field number value",
                      "example": 100
                    },
                    "valuable_id": {
                      "type": "integer"
                    },
                    "field_id": {
                      "type": "integer"
                    },
                    "valuable_type": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "usage_group_id": {
                      "type": "integer"
                    },
                    "usage_group_slug": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomFields > Value"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Value",
        "summary": "Updates a Value",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "custom_field_identifier",
                    "valuable_id",
                    "field_id",
                    "valuable_type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the custom field value",
                      "example": 1
                    },
                    "value": {
                      "type": "boolean",
                      "description": "Custom Fields value",
                      "example": "This is an example value for a custom field"
                    },
                    "long_text_value": {
                      "type": "string",
                      "description": "Custom field text value",
                      "example": "The value of a text custom field"
                    },
                    "custom_field_identifier": {
                      "type": "string"
                    },
                    "date_value": {
                      "type": "string",
                      "description": "Custom field date value",
                      "example": "2022-01-01"
                    },
                    "single_choice_value": {
                      "type": "string",
                      "description": "Custom field single choice value",
                      "example": "Option 1"
                    },
                    "cents_value": {
                      "type": "integer",
                      "description": "Custom field number value",
                      "example": 100
                    },
                    "valuable_id": {
                      "type": "integer"
                    },
                    "field_id": {
                      "type": "integer"
                    },
                    "valuable_type": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "usage_group_id": {
                      "type": "integer"
                    },
                    "usage_group_slug": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_resources/schemas": {
      "get": {
        "tags": [
          "CustomResources > Schema"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Schemas",
        "summary": "Reads all Schemas",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Schemas identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Schemas identifiers",
            "example": [
              1,
              2
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id",
                      "hidden"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Schema identifier",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Schema name",
                        "example": "Company Offsite"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier where this schema belongs",
                        "example": 2
                      },
                      "hidden": {
                        "type": "boolean",
                        "description": "Manages visibility of the schema"
                      },
                      "position": {
                        "type": "integer",
                        "description": "Schema position within employee profile",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomResources > Schema"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Schema",
        "summary": "Creates a Schema",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "hidden"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Schema identifier",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Schema name",
                      "example": "Company Offsite"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier where this schema belongs",
                      "example": 2
                    },
                    "hidden": {
                      "type": "boolean",
                      "description": "Manages visibility of the schema"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Schema position within employee profile",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "company_id",
                  "hidden"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Schema name",
                    "example": "Company Offsite"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier where this schema belongs",
                    "example": 2
                  },
                  "effective_at_id": {
                    "type": "integer",
                    "description": "Custom field identifier",
                    "example": 1
                  },
                  "hidden": {
                    "type": "boolean",
                    "description": "Manages visibility of the schema"
                  },
                  "position": {
                    "type": "integer",
                    "description": "Schema position within employee profile",
                    "example": 1
                  },
                  "usage_group_slug": {
                    "type": "string",
                    "description": "Schema slug",
                    "example": "company_offsite"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_resources/schemas/{id}": {
      "get": {
        "tags": [
          "CustomResources > Schema"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Schema",
        "summary": "Reads a single Schema",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "hidden"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Schema identifier",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Schema name",
                      "example": "Company Offsite"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier where this schema belongs",
                      "example": 2
                    },
                    "hidden": {
                      "type": "boolean",
                      "description": "Manages visibility of the schema"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Schema position within employee profile",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_resources/values": {
      "get": {
        "tags": [
          "CustomResources > Value"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Values",
        "summary": "Reads all Values",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Values identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Values identifiers",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Employee identifiers",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Employee identifiers",
            "example": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "field_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Value identifier",
                        "example": 1
                      },
                      "field_id": {
                        "type": "integer",
                        "description": "Identifier of the field this value belongs to",
                        "example": 2
                      },
                      "long_text_value": {
                        "type": "string",
                        "description": "When the field's type is long_text_value, value for schema long_text_value custom field",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
                      },
                      "date_value": {
                        "type": "string",
                        "description": "When the field's type is date_value, value for schema date_value custom field",
                        "example": "2024-04-01"
                      },
                      "text_value": {
                        "type": "string",
                        "description": "When the field's type is text_value, value for schema text_value custom field",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                      },
                      "number_value": {
                        "type": "integer",
                        "description": "When the field's type is number_value, value for schema number_value custom field",
                        "example": 2
                      },
                      "option_value": {
                        "type": "string",
                        "description": "When the field's type is option_value, selected value for schema option_value custom field",
                        "example": "one_of_the_options"
                      },
                      "cents_value": {
                        "type": "integer",
                        "description": "When the field's type is cents_value, value for schema cents_value custom field",
                        "example": 5
                      },
                      "boolean_value": {
                        "type": "boolean",
                        "description": "When the field's type is boolean_value, value for schema boolean_value custom field",
                        "example": true
                      },
                      "single_choice_value": {
                        "type": "string",
                        "description": "When the field's type is single_choice_value, selected value for schema single_choice_value custom field",
                        "example": "selected_choice"
                      },
                      "multiple_choice_value": {
                        "type": "array",
                        "description": "When the field's type is multiple_choice_value,selected values for schema multiple_choice_value custom field",
                        "example": [
                          "selected_choice_1",
                          "selected_choice_2"
                        ],
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomResources > Value"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Value",
        "summary": "Creates a Value",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "field_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Value identifier",
                      "example": 1
                    },
                    "field_id": {
                      "type": "integer",
                      "description": "Identifier of the field this value belongs to",
                      "example": 2
                    },
                    "long_text_value": {
                      "type": "string",
                      "description": "When the field's type is long_text_value, value for schema long_text_value custom field",
                      "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
                    },
                    "date_value": {
                      "type": "string",
                      "description": "When the field's type is date_value, value for schema date_value custom field",
                      "example": "2024-04-01"
                    },
                    "text_value": {
                      "type": "string",
                      "description": "When the field's type is text_value, value for schema text_value custom field",
                      "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                    },
                    "number_value": {
                      "type": "integer",
                      "description": "When the field's type is number_value, value for schema number_value custom field",
                      "example": 2
                    },
                    "option_value": {
                      "type": "string",
                      "description": "When the field's type is option_value, selected value for schema option_value custom field",
                      "example": "one_of_the_options"
                    },
                    "cents_value": {
                      "type": "integer",
                      "description": "When the field's type is cents_value, value for schema cents_value custom field",
                      "example": 5
                    },
                    "boolean_value": {
                      "type": "boolean",
                      "description": "When the field's type is boolean_value, value for schema boolean_value custom field",
                      "example": true
                    },
                    "single_choice_value": {
                      "type": "string",
                      "description": "When the field's type is single_choice_value, selected value for schema single_choice_value custom field",
                      "example": "selected_choice"
                    },
                    "multiple_choice_value": {
                      "type": "array",
                      "description": "When the field's type is multiple_choice_value,selected values for schema multiple_choice_value custom field",
                      "example": [
                        "selected_choice_1",
                        "selected_choice_2"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "schema_id",
                  "employee_id",
                  "field_id",
                  "value"
                ],
                "properties": {
                  "schema_id": {
                    "type": "integer",
                    "description": "Identifier of the schema this value belongs to",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer"
                  },
                  "field_id": {
                    "type": "integer",
                    "description": "Identifier of the field this value belongs to",
                    "example": 2
                  },
                  "value": {
                    "type": "string",
                    "description": "Value for schema custom field",
                    "example": "This is an example value for a custom field"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/custom_resources/values/{id}": {
      "get": {
        "tags": [
          "CustomResources > Value"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Value",
        "summary": "Reads a single Value",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "field_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Value identifier",
                      "example": 1
                    },
                    "field_id": {
                      "type": "integer",
                      "description": "Identifier of the field this value belongs to",
                      "example": 2
                    },
                    "long_text_value": {
                      "type": "string",
                      "description": "When the field's type is long_text_value, value for schema long_text_value custom field",
                      "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
                    },
                    "date_value": {
                      "type": "string",
                      "description": "When the field's type is date_value, value for schema date_value custom field",
                      "example": "2024-04-01"
                    },
                    "text_value": {
                      "type": "string",
                      "description": "When the field's type is text_value, value for schema text_value custom field",
                      "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                    },
                    "number_value": {
                      "type": "integer",
                      "description": "When the field's type is number_value, value for schema number_value custom field",
                      "example": 2
                    },
                    "option_value": {
                      "type": "string",
                      "description": "When the field's type is option_value, selected value for schema option_value custom field",
                      "example": "one_of_the_options"
                    },
                    "cents_value": {
                      "type": "integer",
                      "description": "When the field's type is cents_value, value for schema cents_value custom field",
                      "example": 5
                    },
                    "boolean_value": {
                      "type": "boolean",
                      "description": "When the field's type is boolean_value, value for schema boolean_value custom field",
                      "example": true
                    },
                    "single_choice_value": {
                      "type": "string",
                      "description": "When the field's type is single_choice_value, selected value for schema single_choice_value custom field",
                      "example": "selected_choice"
                    },
                    "multiple_choice_value": {
                      "type": "array",
                      "description": "When the field's type is multiple_choice_value,selected values for schema multiple_choice_value custom field",
                      "example": [
                        "selected_choice_1",
                        "selected_choice_2"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/documents/documents": {
      "get": {
        "tags": [
          "Documents > Document"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Documents",
        "summary": "Reads all Documents",
        "parameters": [
          {
            "name": "by_bookkeeper_documents",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "flag to indicate if the document belongs to a bookkeeper.",
              "example": true
            },
            "description": "flag to indicate if the document belongs to a bookkeeper.",
            "example": true
          },
          {
            "name": "by_pending_assignment",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "flag to indicate if the document is pending assignment.",
              "example": true
            },
            "description": "flag to indicate if the document is pending assignment.",
            "example": true,
            "required": true
          },
          {
            "name": "by_trash_bin",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "flag to indicate if the document is in the trash bin.",
              "example": true
            },
            "description": "flag to indicate if the document is in the trash bin.",
            "example": true,
            "required": true
          },
          {
            "name": "by_without_folder",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "flag to indicate if the document doesn't have a folder.",
              "example": true
            },
            "description": "flag to indicate if the document doesn't have a folder.",
            "example": true
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of employee identifiers.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of employee identifiers.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "folder_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "folder identifier.",
              "example": 1
            },
            "description": "folder identifier.",
            "example": 1
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "list of document identifiers.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "list of document identifiers.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "leave_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
              "example": 1
            },
            "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "created_at",
                      "filename",
                      "id",
                      "public",
                      "space",
                      "updated_at"
                    ],
                    "properties": {
                      "author_id": {
                        "type": "integer",
                        "description": "access identifier of the author, refers to /employees/employees endpoint.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "company identifier, refers to /api/me endpoint.",
                        "example": 1
                      },
                      "content_type": {
                        "type": "string",
                        "description": "document content type.",
                        "example": "application/pdf"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "creation date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "employee identifier associated to the document.",
                        "example": 1
                      },
                      "extension": {
                        "type": "string",
                        "description": "document extension.",
                        "example": "pdf"
                      },
                      "file_size": {
                        "type": "integer",
                        "description": "document file size in bytes.",
                        "example": 1024
                      },
                      "file": {
                        "type": "string",
                        "description": "url of the document for download it.",
                        "example": "/documents/60"
                      },
                      "filename": {
                        "type": "string",
                        "description": "name of the document.",
                        "example": "document.pdf"
                      },
                      "folder_id": {
                        "type": "integer",
                        "description": "folder identifier, references to documents/folders endpoint.",
                        "example": 1
                      },
                      "id": {
                        "type": "integer",
                        "description": "document identifier.",
                        "example": 1
                      },
                      "is_company_document": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is a company document.",
                        "example": true
                      },
                      "is_management_document": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is a management document.",
                        "example": true
                      },
                      "is_pending_assignment": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is pending assignment.",
                        "example": true
                      },
                      "leave_id": {
                        "type": "integer",
                        "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                        "example": 1
                      },
                      "public": {
                        "type": "boolean",
                        "description": "flag to indicate if the document is public.",
                        "example": true
                      },
                      "signature_status": {
                        "type": "string",
                        "description": "document signature status.",
                        "enum": [
                          "pending",
                          "partially_signed",
                          "declined",
                          "completed",
                          "bounced_email",
                          "cancelled",
                          "error"
                        ],
                        "example": "pending"
                      },
                      "signees": {
                        "type": "array",
                        "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "space": {
                        "type": "string",
                        "description": "document space.",
                        "example": "company_public"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "last update date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      },
                      "deleted_at": {
                        "type": "string",
                        "description": "deletion date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents > Document"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Document",
        "summary": "Creates a Document",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created_at",
                    "filename",
                    "id",
                    "public",
                    "space",
                    "updated_at"
                  ],
                  "properties": {
                    "author_id": {
                      "type": "integer",
                      "description": "access identifier of the author, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier, refers to /api/me endpoint.",
                      "example": 1
                    },
                    "content_type": {
                      "type": "string",
                      "description": "document content type.",
                      "example": "application/pdf"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier associated to the document.",
                      "example": 1
                    },
                    "extension": {
                      "type": "string",
                      "description": "document extension.",
                      "example": "pdf"
                    },
                    "file_size": {
                      "type": "integer",
                      "description": "document file size in bytes.",
                      "example": 1024
                    },
                    "file": {
                      "type": "string",
                      "description": "url of the document for download it.",
                      "example": "/documents/60"
                    },
                    "filename": {
                      "type": "string",
                      "description": "name of the document.",
                      "example": "document.pdf"
                    },
                    "folder_id": {
                      "type": "integer",
                      "description": "folder identifier, references to documents/folders endpoint.",
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "description": "document identifier.",
                      "example": 1
                    },
                    "is_company_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a company document.",
                      "example": true
                    },
                    "is_management_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a management document.",
                      "example": true
                    },
                    "is_pending_assignment": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is pending assignment.",
                      "example": true
                    },
                    "leave_id": {
                      "type": "integer",
                      "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                      "example": 1
                    },
                    "public": {
                      "type": "boolean",
                      "description": "flag to indicate if the document is public.",
                      "example": true
                    },
                    "signature_status": {
                      "type": "string",
                      "description": "document signature status.",
                      "enum": [
                        "pending",
                        "partially_signed",
                        "declined",
                        "completed",
                        "bounced_email",
                        "cancelled",
                        "error"
                      ],
                      "example": "pending"
                    },
                    "signees": {
                      "type": "array",
                      "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "space": {
                      "type": "string",
                      "description": "document space.",
                      "example": "company_public"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "deleted_at": {
                      "type": "string",
                      "description": "deletion date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "public",
                  "space",
                  "is_pending_assignment",
                  "file",
                  "author_id",
                  "company_id",
                  "signee_ids",
                  "request_esignature"
                ],
                "properties": {
                  "public": {
                    "type": "boolean",
                    "description": "flag to indicate if the document is public.",
                    "example": true
                  },
                  "space": {
                    "type": "string",
                    "description": "document space, in case of employee_my_documents it's necessary to fill employee_id.",
                    "enum": [
                      "employee_my_documents",
                      "company_public",
                      "company_internal",
                      "pending_to_assign",
                      "pending_to_destroy"
                    ],
                    "example": "employee_my_documents"
                  },
                  "folder_id": {
                    "type": "integer",
                    "description": "folder identifier, references to documents/folders endpoint.",
                    "example": 1
                  },
                  "file_filename": {
                    "type": "string",
                    "description": "final name of the file, even if the file has been uploaded with a different name.",
                    "example": "document.pdf"
                  },
                  "is_pending_assignment": {
                    "type": "boolean",
                    "description": "flag that indicates if the document is pending assignment.",
                    "example": true
                  },
                  "leave_id": {
                    "type": "integer",
                    "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                    "example": 1
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload, the binary file.",
                    "example": "document.pdf",
                    "format": "binary"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier associated to the document.",
                    "example": 1
                  },
                  "author_id": {
                    "type": "integer",
                    "description": "access identifier of the author, refers to /employees/employees endpoint.",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "company identifier, refers to /api/me endpoint.",
                    "example": 1
                  },
                  "signee_ids": {
                    "type": "array",
                    "description": "list of user access identifiers associated to the document, refers to /employees/employees endpoint.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "request_esignature": {
                    "type": "boolean",
                    "description": "flag to indicate if the document requires an electronic signature.",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/documents/documents/{id}": {
      "get": {
        "tags": [
          "Documents > Document"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Document",
        "summary": "Reads a single Document",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created_at",
                    "filename",
                    "id",
                    "public",
                    "space",
                    "updated_at"
                  ],
                  "properties": {
                    "author_id": {
                      "type": "integer",
                      "description": "access identifier of the author, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier, refers to /api/me endpoint.",
                      "example": 1
                    },
                    "content_type": {
                      "type": "string",
                      "description": "document content type.",
                      "example": "application/pdf"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier associated to the document.",
                      "example": 1
                    },
                    "extension": {
                      "type": "string",
                      "description": "document extension.",
                      "example": "pdf"
                    },
                    "file_size": {
                      "type": "integer",
                      "description": "document file size in bytes.",
                      "example": 1024
                    },
                    "file": {
                      "type": "string",
                      "description": "url of the document for download it.",
                      "example": "/documents/60"
                    },
                    "filename": {
                      "type": "string",
                      "description": "name of the document.",
                      "example": "document.pdf"
                    },
                    "folder_id": {
                      "type": "integer",
                      "description": "folder identifier, references to documents/folders endpoint.",
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "description": "document identifier.",
                      "example": 1
                    },
                    "is_company_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a company document.",
                      "example": true
                    },
                    "is_management_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a management document.",
                      "example": true
                    },
                    "is_pending_assignment": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is pending assignment.",
                      "example": true
                    },
                    "leave_id": {
                      "type": "integer",
                      "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                      "example": 1
                    },
                    "public": {
                      "type": "boolean",
                      "description": "flag to indicate if the document is public.",
                      "example": true
                    },
                    "signature_status": {
                      "type": "string",
                      "description": "document signature status.",
                      "enum": [
                        "pending",
                        "partially_signed",
                        "declined",
                        "completed",
                        "bounced_email",
                        "cancelled",
                        "error"
                      ],
                      "example": "pending"
                    },
                    "signees": {
                      "type": "array",
                      "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "space": {
                      "type": "string",
                      "description": "document space.",
                      "example": "company_public"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "deleted_at": {
                      "type": "string",
                      "description": "deletion date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents > Document"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Document",
        "summary": "Updates a Document",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created_at",
                    "filename",
                    "id",
                    "public",
                    "space",
                    "updated_at"
                  ],
                  "properties": {
                    "author_id": {
                      "type": "integer",
                      "description": "access identifier of the author, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier, refers to /api/me endpoint.",
                      "example": 1
                    },
                    "content_type": {
                      "type": "string",
                      "description": "document content type.",
                      "example": "application/pdf"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier associated to the document.",
                      "example": 1
                    },
                    "extension": {
                      "type": "string",
                      "description": "document extension.",
                      "example": "pdf"
                    },
                    "file_size": {
                      "type": "integer",
                      "description": "document file size in bytes.",
                      "example": 1024
                    },
                    "file": {
                      "type": "string",
                      "description": "url of the document for download it.",
                      "example": "/documents/60"
                    },
                    "filename": {
                      "type": "string",
                      "description": "name of the document.",
                      "example": "document.pdf"
                    },
                    "folder_id": {
                      "type": "integer",
                      "description": "folder identifier, references to documents/folders endpoint.",
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "description": "document identifier.",
                      "example": 1
                    },
                    "is_company_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a company document.",
                      "example": true
                    },
                    "is_management_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a management document.",
                      "example": true
                    },
                    "is_pending_assignment": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is pending assignment.",
                      "example": true
                    },
                    "leave_id": {
                      "type": "integer",
                      "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                      "example": 1
                    },
                    "public": {
                      "type": "boolean",
                      "description": "flag to indicate if the document is public.",
                      "example": true
                    },
                    "signature_status": {
                      "type": "string",
                      "description": "document signature status.",
                      "enum": [
                        "pending",
                        "partially_signed",
                        "declined",
                        "completed",
                        "bounced_email",
                        "cancelled",
                        "error"
                      ],
                      "example": "pending"
                    },
                    "signees": {
                      "type": "array",
                      "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "space": {
                      "type": "string",
                      "description": "document space.",
                      "example": "company_public"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "deleted_at": {
                      "type": "string",
                      "description": "deletion date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "public",
                  "request_esignature",
                  "signee_ids"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "document identifiers.",
                    "example": 1
                  },
                  "public": {
                    "type": "boolean",
                    "description": "flag to indicate if the document is public.",
                    "example": true
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "employee identifier associated to the document.",
                    "example": 1
                  },
                  "folder_id": {
                    "type": "integer",
                    "description": "folder identifier, references to documents/folders endpoint.",
                    "example": 1
                  },
                  "request_esignature": {
                    "type": "boolean",
                    "description": "flag to indicate if the document requires an electronic signature.",
                    "example": true
                  },
                  "signee_ids": {
                    "type": "array",
                    "description": "list of user access identifiers associated to the document, refers to /employees/employees endpoint.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents > Document"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Document",
        "summary": "Deletes a Document",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created_at",
                    "filename",
                    "id",
                    "public",
                    "space",
                    "updated_at"
                  ],
                  "properties": {
                    "author_id": {
                      "type": "integer",
                      "description": "access identifier of the author, refers to /employees/employees endpoint.",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "company identifier, refers to /api/me endpoint.",
                      "example": 1
                    },
                    "content_type": {
                      "type": "string",
                      "description": "document content type.",
                      "example": "application/pdf"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "employee identifier associated to the document.",
                      "example": 1
                    },
                    "extension": {
                      "type": "string",
                      "description": "document extension.",
                      "example": "pdf"
                    },
                    "file_size": {
                      "type": "integer",
                      "description": "document file size in bytes.",
                      "example": 1024
                    },
                    "file": {
                      "type": "string",
                      "description": "url of the document for download it.",
                      "example": "/documents/60"
                    },
                    "filename": {
                      "type": "string",
                      "description": "name of the document.",
                      "example": "document.pdf"
                    },
                    "folder_id": {
                      "type": "integer",
                      "description": "folder identifier, references to documents/folders endpoint.",
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "description": "document identifier.",
                      "example": 1
                    },
                    "is_company_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a company document.",
                      "example": true
                    },
                    "is_management_document": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is a management document.",
                      "example": true
                    },
                    "is_pending_assignment": {
                      "type": "boolean",
                      "description": "flag that indicates if the document is pending assignment.",
                      "example": true
                    },
                    "leave_id": {
                      "type": "integer",
                      "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                      "example": 1
                    },
                    "public": {
                      "type": "boolean",
                      "description": "flag to indicate if the document is public.",
                      "example": true
                    },
                    "signature_status": {
                      "type": "string",
                      "description": "document signature status.",
                      "enum": [
                        "pending",
                        "partially_signed",
                        "declined",
                        "completed",
                        "bounced_email",
                        "cancelled",
                        "error"
                      ],
                      "example": "pending"
                    },
                    "signees": {
                      "type": "array",
                      "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "space": {
                      "type": "string",
                      "description": "document space.",
                      "example": "company_public"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "last update date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    },
                    "deleted_at": {
                      "type": "string",
                      "description": "deletion date of the document.",
                      "example": "2020-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/documents/documents/move_to_trash_bin": {
      "post": {
        "tags": [
          "Documents > Document"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint moves the documents to the trash bin, after 30 days they will be deleted from the system.",
        "summary": "Move to trash bins a Document",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "created_at",
                      "filename",
                      "id",
                      "public",
                      "space",
                      "updated_at"
                    ],
                    "properties": {
                      "author_id": {
                        "type": "integer",
                        "description": "access identifier of the author, refers to /employees/employees endpoint.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "company identifier, refers to /api/me endpoint.",
                        "example": 1
                      },
                      "content_type": {
                        "type": "string",
                        "description": "document content type.",
                        "example": "application/pdf"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "creation date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "employee identifier associated to the document.",
                        "example": 1
                      },
                      "extension": {
                        "type": "string",
                        "description": "document extension.",
                        "example": "pdf"
                      },
                      "file_size": {
                        "type": "integer",
                        "description": "document file size in bytes.",
                        "example": 1024
                      },
                      "file": {
                        "type": "string",
                        "description": "url of the document for download it.",
                        "example": "/documents/60"
                      },
                      "filename": {
                        "type": "string",
                        "description": "name of the document.",
                        "example": "document.pdf"
                      },
                      "folder_id": {
                        "type": "integer",
                        "description": "folder identifier, references to documents/folders endpoint.",
                        "example": 1
                      },
                      "id": {
                        "type": "integer",
                        "description": "document identifier.",
                        "example": 1
                      },
                      "is_company_document": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is a company document.",
                        "example": true
                      },
                      "is_management_document": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is a management document.",
                        "example": true
                      },
                      "is_pending_assignment": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is pending assignment.",
                        "example": true
                      },
                      "leave_id": {
                        "type": "integer",
                        "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                        "example": 1
                      },
                      "public": {
                        "type": "boolean",
                        "description": "flag to indicate if the document is public.",
                        "example": true
                      },
                      "signature_status": {
                        "type": "string",
                        "description": "document signature status.",
                        "enum": [
                          "pending",
                          "partially_signed",
                          "declined",
                          "completed",
                          "bounced_email",
                          "cancelled",
                          "error"
                        ],
                        "example": "pending"
                      },
                      "signees": {
                        "type": "array",
                        "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "space": {
                        "type": "string",
                        "description": "document space.",
                        "example": "company_public"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "last update date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      },
                      "deleted_at": {
                        "type": "string",
                        "description": "deletion date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "document_ids"
                ],
                "properties": {
                  "document_ids": {
                    "type": "array",
                    "description": "list of document identifiers.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/documents/documents/restore_from_trash_bin": {
      "post": {
        "tags": [
          "Documents > Document"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint restores the documents from the trash bin, remember that a document in the trash bin will be deleted from the system after 30 days.",
        "summary": "Restore from trash bins a Document",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "created_at",
                      "filename",
                      "id",
                      "public",
                      "space",
                      "updated_at"
                    ],
                    "properties": {
                      "author_id": {
                        "type": "integer",
                        "description": "access identifier of the author, refers to /employees/employees endpoint.",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "company identifier, refers to /api/me endpoint.",
                        "example": 1
                      },
                      "content_type": {
                        "type": "string",
                        "description": "document content type.",
                        "example": "application/pdf"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "creation date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "employee identifier associated to the document.",
                        "example": 1
                      },
                      "extension": {
                        "type": "string",
                        "description": "document extension.",
                        "example": "pdf"
                      },
                      "file_size": {
                        "type": "integer",
                        "description": "document file size in bytes.",
                        "example": 1024
                      },
                      "file": {
                        "type": "string",
                        "description": "url of the document for download it.",
                        "example": "/documents/60"
                      },
                      "filename": {
                        "type": "string",
                        "description": "name of the document.",
                        "example": "document.pdf"
                      },
                      "folder_id": {
                        "type": "integer",
                        "description": "folder identifier, references to documents/folders endpoint.",
                        "example": 1
                      },
                      "id": {
                        "type": "integer",
                        "description": "document identifier.",
                        "example": 1
                      },
                      "is_company_document": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is a company document.",
                        "example": true
                      },
                      "is_management_document": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is a management document.",
                        "example": true
                      },
                      "is_pending_assignment": {
                        "type": "boolean",
                        "description": "flag that indicates if the document is pending assignment.",
                        "example": true
                      },
                      "leave_id": {
                        "type": "integer",
                        "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
                        "example": 1
                      },
                      "public": {
                        "type": "boolean",
                        "description": "flag to indicate if the document is public.",
                        "example": true
                      },
                      "signature_status": {
                        "type": "string",
                        "description": "document signature status.",
                        "enum": [
                          "pending",
                          "partially_signed",
                          "declined",
                          "completed",
                          "bounced_email",
                          "cancelled",
                          "error"
                        ],
                        "example": "pending"
                      },
                      "signees": {
                        "type": "array",
                        "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "space": {
                        "type": "string",
                        "description": "document space.",
                        "example": "company_public"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "last update date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      },
                      "deleted_at": {
                        "type": "string",
                        "description": "deletion date of the document.",
                        "example": "2020-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "document_ids"
                ],
                "properties": {
                  "document_ids": {
                    "type": "array",
                    "description": "list of document identifiers.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/documents/folders": {
      "get": {
        "tags": [
          "Documents > Folder"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Get all folders.",
        "summary": "Reads all Folders",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Active folder.",
              "example": true
            },
            "description": "Active folder.",
            "example": true
          },
          {
            "name": "employee_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Employee id",
              "example": 15
            },
            "description": "Employee id",
            "example": 15
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "ids of the folders.",
              "example": [
                10,
                12,
                13
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "ids of the folders.",
            "example": [
              10,
              12,
              13
            ]
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Name of the folder.",
              "example": "Payslips"
            },
            "description": "Name of the folder.",
            "example": "Payslips"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "active",
                      "id",
                      "name"
                    ],
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "Whether the folder is active or not",
                        "example": true
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company ID of the folder",
                        "example": 1
                      },
                      "id": {
                        "type": "integer",
                        "description": "Folder ID",
                        "example": 10
                      },
                      "name": {
                        "type": "string",
                        "description": "Folder name",
                        "example": "Payslips"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents > Folder"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create a folder.",
        "summary": "Creates a Folder",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "active",
                    "id",
                    "name"
                  ],
                  "properties": {
                    "active": {
                      "type": "boolean",
                      "description": "Whether the folder is active or not",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID of the folder",
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "description": "Folder ID",
                      "example": 10
                    },
                    "name": {
                      "type": "string",
                      "description": "Folder name",
                      "example": "Payslips"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "name",
                  "space"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Folder name",
                    "example": "Payslips"
                  },
                  "space": {
                    "type": "string",
                    "description": "The space of the folder is related to the type of documents that will be stored in it. You should always use \"employee_my_documents\"",
                    "example": "employee_my_documents"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/documents/folders/{id}": {
      "get": {
        "tags": [
          "Documents > Folder"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Get all folders.",
        "summary": "Reads a single Folder",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "active",
                    "id",
                    "name"
                  ],
                  "properties": {
                    "active": {
                      "type": "boolean",
                      "description": "Whether the folder is active or not",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID of the folder",
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "description": "Folder ID",
                      "example": 10
                    },
                    "name": {
                      "type": "string",
                      "description": "Folder name",
                      "example": "Payslips"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents > Folder"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update a folder.",
        "summary": "Updates a Folder",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "active",
                    "id",
                    "name"
                  ],
                  "properties": {
                    "active": {
                      "type": "boolean",
                      "description": "Whether the folder is active or not",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID of the folder",
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "description": "Folder ID",
                      "example": 10
                    },
                    "name": {
                      "type": "string",
                      "description": "Folder name",
                      "example": "Payslips"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "id",
                  "name"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID",
                    "example": 1
                  },
                  "id": {
                    "type": "integer",
                    "description": "Folder id",
                    "example": 3
                  },
                  "name": {
                    "type": "string",
                    "description": "Folder name",
                    "example": "New folder name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employees/employees": {
      "get": {
        "tags": [
          "Employees > Employee"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Only admins can see all the employees' information, regular users will get a restricted version of the payload as a response based on the permission set by the admin",
        "summary": "Reads all Employees",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by employee ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by employee ids.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "access_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by employee access ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by employee access ids.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "emails[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by employee emails.",
              "example": [
                "ana@factorial.com",
                "john@factorial.com"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "filter by employee emails.",
            "example": [
              "ana@factorial.com",
              "john@factorial.com"
            ]
          },
          {
            "name": "full_text_name",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter by employee name.",
              "example": "Ana Lopez Perez"
            },
            "description": "filter by employee name.",
            "example": "Ana Lopez Perez"
          },
          {
            "name": "legal_entity_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by legal entity id (refereces to companies/legal_entities).",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by legal entity id (refereces to companies/legal_entities).",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "only_active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "get only active employees",
              "example": true
            },
            "description": "get only active employees",
            "example": true,
            "required": true
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter employees by team id (references to core/teams).",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter employees by team id (references to core/teams).",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "location_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter employees by location id (references to locations/location).",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter employees by location id (references to locations/location).",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "only_managers",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "get only manager employees.",
              "example": true
            },
            "description": "get only manager employees.",
            "example": true,
            "required": true
          },
          {
            "name": "name_starts_with",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter by employee names that start with the given text.",
              "example": "Ana"
            },
            "description": "filter by employee names that start with the given text.",
            "example": "Ana"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "first_name",
                      "last_name",
                      "full_name",
                      "company_id",
                      "created_at",
                      "updated_at",
                      "is_terminating"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "id of the employee.",
                        "example": 1
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "access_id associated to the employee.",
                        "example": 1
                      },
                      "first_name": {
                        "type": "string",
                        "description": "name of the employee.",
                        "example": "Ana"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last name of the employee.",
                        "example": "Blanco Perez"
                      },
                      "full_name": {
                        "type": "string",
                        "description": "full name of the employee.",
                        "example": "Ana Blanco Perez"
                      },
                      "preferred_name": {
                        "type": "string",
                        "description": "nickname of the employee or a name that defines the employee better.",
                        "example": "Anita"
                      },
                      "birth_name": {
                        "type": "string",
                        "description": "Birthname of the employee.",
                        "example": "Anna"
                      },
                      "gender": {
                        "type": "string",
                        "description": "gender of the employee (male | female).",
                        "example": "female"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "national identifier number.",
                        "example": "QKG587532Y"
                      },
                      "identifier_type": {
                        "type": "string",
                        "description": "type of identifier (ex passport).",
                        "example": "passport"
                      },
                      "email": {
                        "type": "string",
                        "description": "personal email of the employee.",
                        "example": "ana@factorial.com"
                      },
                      "login_email": {
                        "type": "string",
                        "description": "email associated to the session.",
                        "example": "ana@factorial.com"
                      },
                      "birthday_on": {
                        "type": "string",
                        "description": "birthday of the employee.",
                        "example": "1990-06-06"
                      },
                      "nationality": {
                        "type": "string",
                        "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "address_line_1": {
                        "type": "string",
                        "description": "address of the employee.",
                        "example": "Calle Rosalía de Castro 10, 1º 1ª"
                      },
                      "address_line_2": {
                        "type": "string",
                        "description": "secondary address of the employee.",
                        "example": "Calle Rosalía de Castro 10, 1º 1ª"
                      },
                      "postal_code": {
                        "type": "string",
                        "description": "postal code of the employee.",
                        "example": 27004
                      },
                      "city": {
                        "type": "string",
                        "description": "city of the employee.",
                        "example": "Santander"
                      },
                      "state": {
                        "type": "string",
                        "description": "state/province/region of the employee.",
                        "example": "Cantabria"
                      },
                      "country": {
                        "type": "string",
                        "description": "country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "bank_number": {
                        "type": "string",
                        "description": "bank account number of the employee.",
                        "example": "ES6220809324751871912999"
                      },
                      "swift_bic": {
                        "type": "string",
                        "description": "code to identify banks and financial institutions globally.",
                        "example": "CAGLES2M510"
                      },
                      "bank_number_format": {
                        "type": "string",
                        "description": "bank number format.",
                        "enum": [
                          "iban",
                          "sort_code_and_account_number",
                          "routing_number_and_account_number",
                          "clabe",
                          "other",
                          "bank_name_and_account_number"
                        ],
                        "example": "iban"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "id of the company to which the employee belongs (not editable).",
                        "example": 1
                      },
                      "legal_entity_id": {
                        "type": "integer",
                        "description": "legal entity of the employee, references to companies/legal_entities.",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "description": "creation date of the employee.",
                        "example": "2024-10-06"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "date of last modification of the employee",
                        "example": "2024-10-06"
                      },
                      "social_security_number": {
                        "type": "string",
                        "description": "social security number of the employee.",
                        "example": 238038194000
                      },
                      "is_terminating": {
                        "type": "boolean",
                        "description": "is the employee being terminated?"
                      },
                      "terminated_on": {
                        "type": "string",
                        "description": "termination date of the employee.",
                        "example": "2024-10-06"
                      },
                      "termination_reason": {
                        "type": "string",
                        "description": "A reason for the termination.",
                        "example": "The employee has left the company"
                      },
                      "termination_observations": {
                        "type": "string",
                        "description": "observations about the termination.",
                        "example": "Ana has been working on this project before she left"
                      },
                      "manager_id": {
                        "type": "integer",
                        "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                        "example": 1
                      },
                      "timeoff_manager_id": {
                        "type": "integer",
                        "description": "Timeoff manager id of the employee.",
                        "example": 1
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone number of the employee.",
                        "example": 657483987
                      },
                      "company_identifier": {
                        "type": "string",
                        "description": "identity number or string used inside a company to internally identify the employee.",
                        "example": "bb9d281e"
                      },
                      "age_number": {
                        "type": "integer",
                        "description": "age of the employee.",
                        "example": 30
                      },
                      "contact_name": {
                        "type": "string",
                        "description": "name of the employee contact.",
                        "example": "Laura Delgado"
                      },
                      "contact_number": {
                        "type": "string",
                        "description": "phone number of the employee contact .",
                        "example": 647384950
                      },
                      "personal_email": {
                        "type": "string",
                        "description": "personal email of the employee.",
                        "example": "ana@factorial.com"
                      },
                      "pronouns": {
                        "type": "string",
                        "description": "pronouns that an employee uses to define themselves.",
                        "example": "She/Her"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "status of the employee, true when active, false when terminated.",
                        "example": true
                      },
                      "disability_percentage_cents": {
                        "type": "integer",
                        "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                        "example": 1200
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employees/employees/{id}": {
      "get": {
        "tags": [
          "Employees > Employee"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Only admins can see all the employees' information, regular users will get a restricted version of the payload as a response based on the permission set by the admin",
        "summary": "Reads a single Employee",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "is_terminating"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "id of the employee.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "access_id associated to the employee.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the employee.",
                      "example": "Ana Blanco Perez"
                    },
                    "preferred_name": {
                      "type": "string",
                      "description": "nickname of the employee or a name that defines the employee better.",
                      "example": "Anita"
                    },
                    "birth_name": {
                      "type": "string",
                      "description": "Birthname of the employee.",
                      "example": "Anna"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "login_email": {
                      "type": "string",
                      "description": "email associated to the session.",
                      "example": "ana@factorial.com"
                    },
                    "birthday_on": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "address_line_1": {
                      "type": "string",
                      "description": "address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "address_line_2": {
                      "type": "string",
                      "description": "secondary address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cantabria"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "bank_number": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "swift_bic": {
                      "type": "string",
                      "description": "code to identify banks and financial institutions globally.",
                      "example": "CAGLES2M510"
                    },
                    "bank_number_format": {
                      "type": "string",
                      "description": "bank number format.",
                      "enum": [
                        "iban",
                        "sort_code_and_account_number",
                        "routing_number_and_account_number",
                        "clabe",
                        "other",
                        "bank_name_and_account_number"
                      ],
                      "example": "iban"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "id of the company to which the employee belongs (not editable).",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "legal entity of the employee, references to companies/legal_entities.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the employee.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date of last modification of the employee",
                      "example": "2024-10-06"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "is_terminating": {
                      "type": "boolean",
                      "description": "is the employee being terminated?"
                    },
                    "terminated_on": {
                      "type": "string",
                      "description": "termination date of the employee.",
                      "example": "2024-10-06"
                    },
                    "termination_reason": {
                      "type": "string",
                      "description": "A reason for the termination.",
                      "example": "The employee has left the company"
                    },
                    "termination_observations": {
                      "type": "string",
                      "description": "observations about the termination.",
                      "example": "Ana has been working on this project before she left"
                    },
                    "manager_id": {
                      "type": "integer",
                      "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                      "example": 1
                    },
                    "timeoff_manager_id": {
                      "type": "integer",
                      "description": "Timeoff manager id of the employee.",
                      "example": 1
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 657483987
                    },
                    "company_identifier": {
                      "type": "string",
                      "description": "identity number or string used inside a company to internally identify the employee.",
                      "example": "bb9d281e"
                    },
                    "age_number": {
                      "type": "integer",
                      "description": "age of the employee.",
                      "example": 30
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "name of the employee contact.",
                      "example": "Laura Delgado"
                    },
                    "contact_number": {
                      "type": "string",
                      "description": "phone number of the employee contact .",
                      "example": 647384950
                    },
                    "personal_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "pronouns": {
                      "type": "string",
                      "description": "pronouns that an employee uses to define themselves.",
                      "example": "She/Her"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "status of the employee, true when active, false when terminated.",
                      "example": true
                    },
                    "disability_percentage_cents": {
                      "type": "integer",
                      "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                      "example": 1200
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employees > Employee"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates an Employee",
        "summary": "Updates an Employee",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "is_terminating"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "id of the employee.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "access_id associated to the employee.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the employee.",
                      "example": "Ana Blanco Perez"
                    },
                    "preferred_name": {
                      "type": "string",
                      "description": "nickname of the employee or a name that defines the employee better.",
                      "example": "Anita"
                    },
                    "birth_name": {
                      "type": "string",
                      "description": "Birthname of the employee.",
                      "example": "Anna"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "login_email": {
                      "type": "string",
                      "description": "email associated to the session.",
                      "example": "ana@factorial.com"
                    },
                    "birthday_on": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "address_line_1": {
                      "type": "string",
                      "description": "address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "address_line_2": {
                      "type": "string",
                      "description": "secondary address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cantabria"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "bank_number": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "swift_bic": {
                      "type": "string",
                      "description": "code to identify banks and financial institutions globally.",
                      "example": "CAGLES2M510"
                    },
                    "bank_number_format": {
                      "type": "string",
                      "description": "bank number format.",
                      "enum": [
                        "iban",
                        "sort_code_and_account_number",
                        "routing_number_and_account_number",
                        "clabe",
                        "other",
                        "bank_name_and_account_number"
                      ],
                      "example": "iban"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "id of the company to which the employee belongs (not editable).",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "legal entity of the employee, references to companies/legal_entities.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the employee.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date of last modification of the employee",
                      "example": "2024-10-06"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "is_terminating": {
                      "type": "boolean",
                      "description": "is the employee being terminated?"
                    },
                    "terminated_on": {
                      "type": "string",
                      "description": "termination date of the employee.",
                      "example": "2024-10-06"
                    },
                    "termination_reason": {
                      "type": "string",
                      "description": "A reason for the termination.",
                      "example": "The employee has left the company"
                    },
                    "termination_observations": {
                      "type": "string",
                      "description": "observations about the termination.",
                      "example": "Ana has been working on this project before she left"
                    },
                    "manager_id": {
                      "type": "integer",
                      "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                      "example": 1
                    },
                    "timeoff_manager_id": {
                      "type": "integer",
                      "description": "Timeoff manager id of the employee.",
                      "example": 1
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 657483987
                    },
                    "company_identifier": {
                      "type": "string",
                      "description": "identity number or string used inside a company to internally identify the employee.",
                      "example": "bb9d281e"
                    },
                    "age_number": {
                      "type": "integer",
                      "description": "age of the employee.",
                      "example": 30
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "name of the employee contact.",
                      "example": "Laura Delgado"
                    },
                    "contact_number": {
                      "type": "string",
                      "description": "phone number of the employee contact .",
                      "example": 647384950
                    },
                    "personal_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "pronouns": {
                      "type": "string",
                      "description": "pronouns that an employee uses to define themselves.",
                      "example": "She/Her"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "status of the employee, true when active, false when terminated.",
                      "example": true
                    },
                    "disability_percentage_cents": {
                      "type": "integer",
                      "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                      "example": 1200
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  },
                  "access_id": {
                    "type": "integer",
                    "description": "access_id of the creator.",
                    "example": 1
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the employee (male | female).",
                    "example": "female"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the employee.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the employee.",
                    "example": "Blanco Perez"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "national identifier number.",
                    "example": "QKG587532Y"
                  },
                  "identifier_type": {
                    "type": "string",
                    "description": "type of identifier (ex passport).",
                    "example": "passport"
                  },
                  "birthday_on": {
                    "type": "string",
                    "description": "birthday of the employee.",
                    "example": "1990-06-06"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "address_line_1": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "postal code of the employee.",
                    "example": 27004
                  },
                  "city": {
                    "type": "string",
                    "description": "city of the employee.",
                    "example": "Santander"
                  },
                  "state": {
                    "type": "string",
                    "description": "state/province/region of the employee.",
                    "example": "Cataluña"
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "bank_number": {
                    "type": "string",
                    "description": "bank account number of the employee.",
                    "example": "ES6220809324751871912999"
                  },
                  "swift_bic": {
                    "type": "string",
                    "description": "code to identify banks and financial institutions globally.",
                    "example": "CAGLES2M510"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "id of manager, you can get the manager_id from employees endpoint.",
                    "example": 1
                  },
                  "timeoff_manager_id": {
                    "type": "integer",
                    "description": "id of manager, you can get the manager_id from employees endpoint.",
                    "example": 1
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee.",
                    "example": 238038194000
                  },
                  "has_work_permit": {
                    "type": "boolean",
                    "description": "does the employee have work permit?",
                    "example": true
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "phone number of the employee.",
                    "example": 657483987
                  },
                  "company_identifier": {
                    "type": "string",
                    "description": "identity number or string used inside a company to internally identify the employee.",
                    "example": "bb9d281e"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "legal entity of the employee, references to companies/legal_entities.",
                    "example": 1
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "location id of the employee, references to locations/locations.",
                    "example": 1
                  },
                  "preferred_name": {
                    "type": "string",
                    "description": "nickname of the employee or a name that defines the employee better.",
                    "example": "Anita"
                  },
                  "pronouns": {
                    "type": "string",
                    "description": "pronouns that an employee uses to define themselves.",
                    "example": "She/Her"
                  },
                  "contact_name": {
                    "type": "string",
                    "description": "name of the employee contact.",
                    "example": "Laura Delgado"
                  },
                  "contact_number": {
                    "type": "string",
                    "description": "phone number of the employee contact .",
                    "example": 657482908
                  },
                  "personal_email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "disability_percentage_cents": {
                    "type": "integer",
                    "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                    "example": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employees/employees/create_with_contract": {
      "post": {
        "tags": [
          "Employees > Employee"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create an employee with a contract",
        "summary": "Create with contracts an Employee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "is_terminating"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "id of the employee.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "access_id associated to the employee.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the employee.",
                      "example": "Ana Blanco Perez"
                    },
                    "preferred_name": {
                      "type": "string",
                      "description": "nickname of the employee or a name that defines the employee better.",
                      "example": "Anita"
                    },
                    "birth_name": {
                      "type": "string",
                      "description": "Birthname of the employee.",
                      "example": "Anna"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "login_email": {
                      "type": "string",
                      "description": "email associated to the session.",
                      "example": "ana@factorial.com"
                    },
                    "birthday_on": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "address_line_1": {
                      "type": "string",
                      "description": "address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "address_line_2": {
                      "type": "string",
                      "description": "secondary address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cantabria"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "bank_number": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "swift_bic": {
                      "type": "string",
                      "description": "code to identify banks and financial institutions globally.",
                      "example": "CAGLES2M510"
                    },
                    "bank_number_format": {
                      "type": "string",
                      "description": "bank number format.",
                      "enum": [
                        "iban",
                        "sort_code_and_account_number",
                        "routing_number_and_account_number",
                        "clabe",
                        "other",
                        "bank_name_and_account_number"
                      ],
                      "example": "iban"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "id of the company to which the employee belongs (not editable).",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "legal entity of the employee, references to companies/legal_entities.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the employee.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date of last modification of the employee",
                      "example": "2024-10-06"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "is_terminating": {
                      "type": "boolean",
                      "description": "is the employee being terminated?"
                    },
                    "terminated_on": {
                      "type": "string",
                      "description": "termination date of the employee.",
                      "example": "2024-10-06"
                    },
                    "termination_reason": {
                      "type": "string",
                      "description": "A reason for the termination.",
                      "example": "The employee has left the company"
                    },
                    "termination_observations": {
                      "type": "string",
                      "description": "observations about the termination.",
                      "example": "Ana has been working on this project before she left"
                    },
                    "manager_id": {
                      "type": "integer",
                      "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                      "example": 1
                    },
                    "timeoff_manager_id": {
                      "type": "integer",
                      "description": "Timeoff manager id of the employee.",
                      "example": 1
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 657483987
                    },
                    "company_identifier": {
                      "type": "string",
                      "description": "identity number or string used inside a company to internally identify the employee.",
                      "example": "bb9d281e"
                    },
                    "age_number": {
                      "type": "integer",
                      "description": "age of the employee.",
                      "example": 30
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "name of the employee contact.",
                      "example": "Laura Delgado"
                    },
                    "contact_number": {
                      "type": "string",
                      "description": "phone number of the employee contact .",
                      "example": 647384950
                    },
                    "personal_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "pronouns": {
                      "type": "string",
                      "description": "pronouns that an employee uses to define themselves.",
                      "example": "She/Her"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "status of the employee, true when active, false when terminated.",
                      "example": true
                    },
                    "disability_percentage_cents": {
                      "type": "integer",
                      "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                      "example": 1200
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "first_name",
                  "last_name",
                  "email"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "company id of the employee, you can get it in companies/legal_entities endpoint.",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "description": "name of the employee.",
                    "example": "Ana"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last name of the employee.",
                    "example": "Blanco Perez"
                  },
                  "email": {
                    "type": "string",
                    "description": "personal email of the employee.",
                    "example": "ana@factorial.com"
                  },
                  "contract_effective_on": {
                    "type": "string",
                    "description": "the day the specific contract starts, in case of hiring the same than contract_starts_on.",
                    "example": "2024-10-06"
                  },
                  "contract_starts_on": {
                    "type": "string",
                    "description": "the day the employee is hired.",
                    "example": "2024-10-06"
                  },
                  "gender": {
                    "type": "string",
                    "description": "gender of the employee (male | female).",
                    "example": "female"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "national identifier number.",
                    "example": "QKG587532Y"
                  },
                  "identifier_type": {
                    "type": "string",
                    "description": "type of identifier (ex passport).",
                    "example": "passport"
                  },
                  "birthday_on": {
                    "type": "string",
                    "description": "birthday of the employee.",
                    "example": "1990-06-06"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "address_line1": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "address_line_2": {
                    "type": "string",
                    "description": "address of the employee.",
                    "example": "Calle Rosalía de Castro 10, 1º 1ª"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "postal code of the employee.",
                    "example": 27004
                  },
                  "city": {
                    "type": "string",
                    "description": "city of the employee.",
                    "example": "Santander"
                  },
                  "state": {
                    "type": "string",
                    "description": "state/province/region of the employee.",
                    "example": "Cataluña"
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee (Spain ES, United Kingdom GB).",
                    "example": "ES"
                  },
                  "bank_number": {
                    "type": "string",
                    "description": "bank account number of the employee.",
                    "example": "ES6220809324751871912999"
                  },
                  "swift_bic": {
                    "type": "string",
                    "description": "code to identify banks and financial institutions globally.",
                    "example": "CAGLES2M510"
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "id of manager, you can get the manager_id from employees endpoint.",
                    "example": 1
                  },
                  "timeoff_manager_id": {
                    "type": "integer",
                    "description": "id of manager, you can get the manager_id from employees endpoint.",
                    "example": 1
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "legal entity of the employee, references to companies/legal_entities.",
                    "example": 1
                  },
                  "company_identifier": {
                    "type": "string",
                    "description": "identity number or string used inside a company to internally identify the employee.",
                    "example": "bb9d281e"
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "team id of the employee.",
                    "example": 1
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "location id of the employee, references to locations/locations.",
                    "example": 1
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee.",
                    "example": 238038194000
                  },
                  "has_trial_period": {
                    "type": "boolean",
                    "description": "does the employee have a trial period?",
                    "example": true
                  },
                  "trial_period_ends_on": {
                    "type": "string",
                    "description": "when the trial period ends.",
                    "example": "2024-10-06"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employees/employees/invite": {
      "post": {
        "tags": [
          "Employees > Employee"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Send an email invitation to an unconfirmed employee to join Factorial",
        "summary": "Invites an Employee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "is_terminating"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "id of the employee.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "access_id associated to the employee.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the employee.",
                      "example": "Ana Blanco Perez"
                    },
                    "preferred_name": {
                      "type": "string",
                      "description": "nickname of the employee or a name that defines the employee better.",
                      "example": "Anita"
                    },
                    "birth_name": {
                      "type": "string",
                      "description": "Birthname of the employee.",
                      "example": "Anna"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "login_email": {
                      "type": "string",
                      "description": "email associated to the session.",
                      "example": "ana@factorial.com"
                    },
                    "birthday_on": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "address_line_1": {
                      "type": "string",
                      "description": "address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "address_line_2": {
                      "type": "string",
                      "description": "secondary address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cantabria"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "bank_number": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "swift_bic": {
                      "type": "string",
                      "description": "code to identify banks and financial institutions globally.",
                      "example": "CAGLES2M510"
                    },
                    "bank_number_format": {
                      "type": "string",
                      "description": "bank number format.",
                      "enum": [
                        "iban",
                        "sort_code_and_account_number",
                        "routing_number_and_account_number",
                        "clabe",
                        "other",
                        "bank_name_and_account_number"
                      ],
                      "example": "iban"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "id of the company to which the employee belongs (not editable).",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "legal entity of the employee, references to companies/legal_entities.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the employee.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date of last modification of the employee",
                      "example": "2024-10-06"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "is_terminating": {
                      "type": "boolean",
                      "description": "is the employee being terminated?"
                    },
                    "terminated_on": {
                      "type": "string",
                      "description": "termination date of the employee.",
                      "example": "2024-10-06"
                    },
                    "termination_reason": {
                      "type": "string",
                      "description": "A reason for the termination.",
                      "example": "The employee has left the company"
                    },
                    "termination_observations": {
                      "type": "string",
                      "description": "observations about the termination.",
                      "example": "Ana has been working on this project before she left"
                    },
                    "manager_id": {
                      "type": "integer",
                      "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                      "example": 1
                    },
                    "timeoff_manager_id": {
                      "type": "integer",
                      "description": "Timeoff manager id of the employee.",
                      "example": 1
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 657483987
                    },
                    "company_identifier": {
                      "type": "string",
                      "description": "identity number or string used inside a company to internally identify the employee.",
                      "example": "bb9d281e"
                    },
                    "age_number": {
                      "type": "integer",
                      "description": "age of the employee.",
                      "example": 30
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "name of the employee contact.",
                      "example": "Laura Delgado"
                    },
                    "contact_number": {
                      "type": "string",
                      "description": "phone number of the employee contact .",
                      "example": 647384950
                    },
                    "personal_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "pronouns": {
                      "type": "string",
                      "description": "pronouns that an employee uses to define themselves.",
                      "example": "She/Her"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "status of the employee, true when active, false when terminated.",
                      "example": true
                    },
                    "disability_percentage_cents": {
                      "type": "integer",
                      "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                      "example": 1200
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the unconfirmed employee",
                    "example": 1
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "id of the company",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employees/employees/terminate": {
      "post": {
        "tags": [
          "Employees > Employee"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Terminates an Employee",
        "summary": "Terminates an Employee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "is_terminating"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "id of the employee.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "access_id associated to the employee.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the employee.",
                      "example": "Ana Blanco Perez"
                    },
                    "preferred_name": {
                      "type": "string",
                      "description": "nickname of the employee or a name that defines the employee better.",
                      "example": "Anita"
                    },
                    "birth_name": {
                      "type": "string",
                      "description": "Birthname of the employee.",
                      "example": "Anna"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "login_email": {
                      "type": "string",
                      "description": "email associated to the session.",
                      "example": "ana@factorial.com"
                    },
                    "birthday_on": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "address_line_1": {
                      "type": "string",
                      "description": "address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "address_line_2": {
                      "type": "string",
                      "description": "secondary address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cantabria"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "bank_number": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "swift_bic": {
                      "type": "string",
                      "description": "code to identify banks and financial institutions globally.",
                      "example": "CAGLES2M510"
                    },
                    "bank_number_format": {
                      "type": "string",
                      "description": "bank number format.",
                      "enum": [
                        "iban",
                        "sort_code_and_account_number",
                        "routing_number_and_account_number",
                        "clabe",
                        "other",
                        "bank_name_and_account_number"
                      ],
                      "example": "iban"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "id of the company to which the employee belongs (not editable).",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "legal entity of the employee, references to companies/legal_entities.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the employee.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date of last modification of the employee",
                      "example": "2024-10-06"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "is_terminating": {
                      "type": "boolean",
                      "description": "is the employee being terminated?"
                    },
                    "terminated_on": {
                      "type": "string",
                      "description": "termination date of the employee.",
                      "example": "2024-10-06"
                    },
                    "termination_reason": {
                      "type": "string",
                      "description": "A reason for the termination.",
                      "example": "The employee has left the company"
                    },
                    "termination_observations": {
                      "type": "string",
                      "description": "observations about the termination.",
                      "example": "Ana has been working on this project before she left"
                    },
                    "manager_id": {
                      "type": "integer",
                      "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                      "example": 1
                    },
                    "timeoff_manager_id": {
                      "type": "integer",
                      "description": "Timeoff manager id of the employee.",
                      "example": 1
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 657483987
                    },
                    "company_identifier": {
                      "type": "string",
                      "description": "identity number or string used inside a company to internally identify the employee.",
                      "example": "bb9d281e"
                    },
                    "age_number": {
                      "type": "integer",
                      "description": "age of the employee.",
                      "example": 30
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "name of the employee contact.",
                      "example": "Laura Delgado"
                    },
                    "contact_number": {
                      "type": "string",
                      "description": "phone number of the employee contact .",
                      "example": 647384950
                    },
                    "personal_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "pronouns": {
                      "type": "string",
                      "description": "pronouns that an employee uses to define themselves.",
                      "example": "She/Her"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "status of the employee, true when active, false when terminated.",
                      "example": true
                    },
                    "disability_percentage_cents": {
                      "type": "integer",
                      "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                      "example": 1200
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "terminated_on"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  },
                  "terminated_on": {
                    "type": "string",
                    "description": "when the employee will be terminated.",
                    "example": "2024-10-06"
                  },
                  "termination_reason": {
                    "type": "string",
                    "description": "A reason for the termination.",
                    "example": "The employee has left the company"
                  },
                  "termination_assigned_manager_id": {
                    "type": "integer",
                    "description": "id of manager that terminates the employee, you can get the manager_id from employees endpoint.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employees/employees/unterminate": {
      "post": {
        "tags": [
          "Employees > Employee"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Unterminates an Employee",
        "summary": "Unterminates an Employee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "first_name",
                    "last_name",
                    "full_name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "is_terminating"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "id of the employee.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "access_id associated to the employee.",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name of the employee.",
                      "example": "Ana Blanco Perez"
                    },
                    "preferred_name": {
                      "type": "string",
                      "description": "nickname of the employee or a name that defines the employee better.",
                      "example": "Anita"
                    },
                    "birth_name": {
                      "type": "string",
                      "description": "Birthname of the employee.",
                      "example": "Anna"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "login_email": {
                      "type": "string",
                      "description": "email associated to the session.",
                      "example": "ana@factorial.com"
                    },
                    "birthday_on": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "address_line_1": {
                      "type": "string",
                      "description": "address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "address_line_2": {
                      "type": "string",
                      "description": "secondary address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cantabria"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "bank_number": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "swift_bic": {
                      "type": "string",
                      "description": "code to identify banks and financial institutions globally.",
                      "example": "CAGLES2M510"
                    },
                    "bank_number_format": {
                      "type": "string",
                      "description": "bank number format.",
                      "enum": [
                        "iban",
                        "sort_code_and_account_number",
                        "routing_number_and_account_number",
                        "clabe",
                        "other",
                        "bank_name_and_account_number"
                      ],
                      "example": "iban"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "id of the company to which the employee belongs (not editable).",
                      "example": 1
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "legal entity of the employee, references to companies/legal_entities.",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the employee.",
                      "example": "2024-10-06"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date of last modification of the employee",
                      "example": "2024-10-06"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "is_terminating": {
                      "type": "boolean",
                      "description": "is the employee being terminated?"
                    },
                    "terminated_on": {
                      "type": "string",
                      "description": "termination date of the employee.",
                      "example": "2024-10-06"
                    },
                    "termination_reason": {
                      "type": "string",
                      "description": "A reason for the termination.",
                      "example": "The employee has left the company"
                    },
                    "termination_observations": {
                      "type": "string",
                      "description": "observations about the termination.",
                      "example": "Ana has been working on this project before she left"
                    },
                    "manager_id": {
                      "type": "integer",
                      "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                      "example": 1
                    },
                    "timeoff_manager_id": {
                      "type": "integer",
                      "description": "Timeoff manager id of the employee.",
                      "example": 1
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 657483987
                    },
                    "company_identifier": {
                      "type": "string",
                      "description": "identity number or string used inside a company to internally identify the employee.",
                      "example": "bb9d281e"
                    },
                    "age_number": {
                      "type": "integer",
                      "description": "age of the employee.",
                      "example": 30
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "name of the employee contact.",
                      "example": "Laura Delgado"
                    },
                    "contact_number": {
                      "type": "string",
                      "description": "phone number of the employee contact .",
                      "example": 647384950
                    },
                    "personal_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "pronouns": {
                      "type": "string",
                      "description": "pronouns that an employee uses to define themselves.",
                      "example": "She/Her"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "status of the employee, true when active, false when terminated.",
                      "example": true
                    },
                    "disability_percentage_cents": {
                      "type": "integer",
                      "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
                      "example": 1200
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the employee.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/absences": {
      "get": {
        "tags": [
          "EmployeeUpdates > Absence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of absence `employee updates`.",
        "summary": "Reads all Absences",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by absence incidence ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by absence incidence ids.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "employee_full_name": {
                        "type": "string"
                      },
                      "approved": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "start_on": {
                        "type": "string"
                      },
                      "prev_start_on": {
                        "type": "string"
                      },
                      "finish_on": {
                        "type": "string"
                      },
                      "prev_finish_on": {
                        "type": "string"
                      },
                      "half_day": {
                        "type": "string"
                      },
                      "leave_type_id": {
                        "type": "integer"
                      },
                      "leave_type_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/absences/{id}": {
      "get": {
        "tags": [
          "EmployeeUpdates > Absence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of absence `employee updates`.",
        "summary": "Reads a single Absence",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "employee_full_name": {
                      "type": "string"
                    },
                    "approved": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "start_on": {
                      "type": "string"
                    },
                    "prev_start_on": {
                      "type": "string"
                    },
                    "finish_on": {
                      "type": "string"
                    },
                    "prev_finish_on": {
                      "type": "string"
                    },
                    "half_day": {
                      "type": "string"
                    },
                    "leave_type_id": {
                      "type": "integer"
                    },
                    "leave_type_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/contract_changes": {
      "get": {
        "tags": [
          "EmployeeUpdates > ContractChange"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of contrat changes `employee updates` details.",
        "summary": "Reads all Contract changes",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by contract change incidence ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by contract change incidence ids.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "status",
                      "effective_on",
                      "employee_id",
                      "has_payroll",
                      "fr_forfait_jours",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The id of the contract change incidence",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the contract change incidence",
                        "example": "done"
                      },
                      "effective_on": {
                        "type": "string",
                        "description": "The effective date of the contract",
                        "example": "2024-10-06"
                      },
                      "starts_on": {
                        "type": "string",
                        "description": "The start date of the contract",
                        "example": "2024-10-06"
                      },
                      "ends_on": {
                        "type": "string",
                        "description": "The end date of the contract",
                        "example": "2024-10-06"
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "The employee id",
                        "example": 1
                      },
                      "job_title": {
                        "type": "string",
                        "description": "The job title on the contract change",
                        "example": "The job title"
                      },
                      "job_role": {
                        "type": "string",
                        "description": "The job role on the contract change",
                        "example": "The job role"
                      },
                      "job_level": {
                        "type": "string",
                        "description": "The job level on the contract change",
                        "example": "The job level"
                      },
                      "has_payroll": {
                        "type": "boolean",
                        "description": "The payrollable status of the employee on the contract change",
                        "example": true
                      },
                      "salary_amount": {
                        "type": "integer",
                        "description": "The salary amount on the contract change",
                        "example": 200000
                      },
                      "salary_frequency": {
                        "type": "string",
                        "description": "The salary payment frequency on the contract change",
                        "example": "monthly"
                      },
                      "working_week_days": {
                        "type": "string",
                        "description": "The working week days on the contract change",
                        "example": "Monday"
                      },
                      "working_hours": {
                        "type": "integer",
                        "description": "The working hours on the contract change",
                        "example": 40
                      },
                      "working_hours_frequency": {
                        "type": "string",
                        "description": "The working hours frequency on the contract change",
                        "example": "weekly"
                      },
                      "country": {
                        "type": "string",
                        "description": "The country on the contract change",
                        "example": "es"
                      },
                      "es_has_teleworking_contract": {
                        "type": "boolean",
                        "description": "The teleworking status on the contract change",
                        "example": true
                      },
                      "es_cotization_group": {
                        "type": "integer",
                        "description": "The cotization group on the contract change",
                        "example": 1
                      },
                      "es_contract_observations": {
                        "type": "string",
                        "description": "The contract observations on the contract change",
                        "example": "The contract observations"
                      },
                      "es_job_description": {
                        "type": "string",
                        "description": "The job description on the contract change",
                        "example": "The job description"
                      },
                      "es_contract_type_id": {
                        "type": "integer",
                        "description": "The contract type id on the contract change",
                        "example": 1
                      },
                      "es_contract_type_name": {
                        "type": "string",
                        "description": "The contract type name on the contract change",
                        "example": "The contract type name"
                      },
                      "es_trial_period_ends_on": {
                        "type": "string",
                        "description": "The trial period end date on the contract change",
                        "example": "2024-10-06"
                      },
                      "es_working_day_type_id": {
                        "type": "integer",
                        "description": "The working day type id on the contract change",
                        "example": 1
                      },
                      "es_education_level_id": {
                        "type": "integer",
                        "description": "The education level id on the contract change",
                        "example": 1
                      },
                      "es_professional_category_id": {
                        "type": "integer",
                        "description": "The professional category id on the contract change",
                        "example": 1
                      },
                      "fr_employee_type": {
                        "type": "string",
                        "description": "The employee type on the contract change",
                        "example": "The employee type"
                      },
                      "fr_forfait_jours": {
                        "type": "boolean",
                        "description": "The forfait jours status on the contract change",
                        "example": true
                      },
                      "fr_jours_par_an": {
                        "type": "integer",
                        "description": "The jours par an on the contract change",
                        "example": 1
                      },
                      "fr_coefficient": {
                        "type": "string",
                        "description": "The coefficient on the contract change",
                        "example": "The coefficient"
                      },
                      "fr_level_id": {
                        "type": "integer",
                        "description": "The level id on the contract change",
                        "example": 1
                      },
                      "fr_level_name": {
                        "type": "string",
                        "description": "The level name on the contract change",
                        "example": "The level name"
                      },
                      "fr_step_id": {
                        "type": "integer",
                        "description": "The step id on the contract change",
                        "example": 1
                      },
                      "fr_step_name": {
                        "type": "string",
                        "description": "The step name on the contract change",
                        "example": "The step name"
                      },
                      "fr_mutual_id": {
                        "type": "integer",
                        "description": "The mutual id on the contract change",
                        "example": 1
                      },
                      "fr_mutual_name": {
                        "type": "string",
                        "description": "The mutual name on the contract change",
                        "example": "The mutual name"
                      },
                      "fr_professional_category_id": {
                        "type": "integer",
                        "description": "The professional category id on the contract change",
                        "example": 1
                      },
                      "fr_professional_category_name": {
                        "type": "string",
                        "description": "The professional category name on the contract change",
                        "example": "The professional category name"
                      },
                      "fr_work_type_id": {
                        "type": "integer",
                        "description": "The work type id on the contract change",
                        "example": 1
                      },
                      "fr_work_type_name": {
                        "type": "string",
                        "description": "The work type name on the contract change",
                        "example": "The work type name"
                      },
                      "compensation_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "fr_contract_type_id": {
                        "type": "integer",
                        "description": "The contract type id on the contract change",
                        "example": 1
                      },
                      "fr_contract_type_name": {
                        "type": "string",
                        "description": "The contract type name on the contract change",
                        "example": "The contract type name"
                      },
                      "de_contract_type_id": {
                        "type": "integer",
                        "description": "The contract type id on the contract change",
                        "example": 1
                      },
                      "de_contract_type_name": {
                        "type": "string",
                        "description": "The contract type name on the contract change",
                        "example": "The contract type name"
                      },
                      "pt_contract_type_id": {
                        "type": "integer",
                        "description": "The contract type id on the contract change",
                        "example": 1
                      },
                      "pt_contract_type_name": {
                        "type": "string",
                        "description": "The contract type name on the contract change",
                        "example": "The contract type name"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/contract_changes/{id}": {
      "get": {
        "tags": [
          "EmployeeUpdates > ContractChange"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of contrat changes `employee updates` details.",
        "summary": "Reads a single Contract change",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "effective_on",
                    "employee_id",
                    "has_payroll",
                    "fr_forfait_jours",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id of the contract change incidence",
                      "example": 1
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the contract change incidence",
                      "example": "done"
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "The effective date of the contract",
                      "example": "2024-10-06"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "The start date of the contract",
                      "example": "2024-10-06"
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "The end date of the contract",
                      "example": "2024-10-06"
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The employee id",
                      "example": 1
                    },
                    "job_title": {
                      "type": "string",
                      "description": "The job title on the contract change",
                      "example": "The job title"
                    },
                    "job_role": {
                      "type": "string",
                      "description": "The job role on the contract change",
                      "example": "The job role"
                    },
                    "job_level": {
                      "type": "string",
                      "description": "The job level on the contract change",
                      "example": "The job level"
                    },
                    "has_payroll": {
                      "type": "boolean",
                      "description": "The payrollable status of the employee on the contract change",
                      "example": true
                    },
                    "salary_amount": {
                      "type": "integer",
                      "description": "The salary amount on the contract change",
                      "example": 200000
                    },
                    "salary_frequency": {
                      "type": "string",
                      "description": "The salary payment frequency on the contract change",
                      "example": "monthly"
                    },
                    "working_week_days": {
                      "type": "string",
                      "description": "The working week days on the contract change",
                      "example": "Monday"
                    },
                    "working_hours": {
                      "type": "integer",
                      "description": "The working hours on the contract change",
                      "example": 40
                    },
                    "working_hours_frequency": {
                      "type": "string",
                      "description": "The working hours frequency on the contract change",
                      "example": "weekly"
                    },
                    "country": {
                      "type": "string",
                      "description": "The country on the contract change",
                      "example": "es"
                    },
                    "es_has_teleworking_contract": {
                      "type": "boolean",
                      "description": "The teleworking status on the contract change",
                      "example": true
                    },
                    "es_cotization_group": {
                      "type": "integer",
                      "description": "The cotization group on the contract change",
                      "example": 1
                    },
                    "es_contract_observations": {
                      "type": "string",
                      "description": "The contract observations on the contract change",
                      "example": "The contract observations"
                    },
                    "es_job_description": {
                      "type": "string",
                      "description": "The job description on the contract change",
                      "example": "The job description"
                    },
                    "es_contract_type_id": {
                      "type": "integer",
                      "description": "The contract type id on the contract change",
                      "example": 1
                    },
                    "es_contract_type_name": {
                      "type": "string",
                      "description": "The contract type name on the contract change",
                      "example": "The contract type name"
                    },
                    "es_trial_period_ends_on": {
                      "type": "string",
                      "description": "The trial period end date on the contract change",
                      "example": "2024-10-06"
                    },
                    "es_working_day_type_id": {
                      "type": "integer",
                      "description": "The working day type id on the contract change",
                      "example": 1
                    },
                    "es_education_level_id": {
                      "type": "integer",
                      "description": "The education level id on the contract change",
                      "example": 1
                    },
                    "es_professional_category_id": {
                      "type": "integer",
                      "description": "The professional category id on the contract change",
                      "example": 1
                    },
                    "fr_employee_type": {
                      "type": "string",
                      "description": "The employee type on the contract change",
                      "example": "The employee type"
                    },
                    "fr_forfait_jours": {
                      "type": "boolean",
                      "description": "The forfait jours status on the contract change",
                      "example": true
                    },
                    "fr_jours_par_an": {
                      "type": "integer",
                      "description": "The jours par an on the contract change",
                      "example": 1
                    },
                    "fr_coefficient": {
                      "type": "string",
                      "description": "The coefficient on the contract change",
                      "example": "The coefficient"
                    },
                    "fr_level_id": {
                      "type": "integer",
                      "description": "The level id on the contract change",
                      "example": 1
                    },
                    "fr_level_name": {
                      "type": "string",
                      "description": "The level name on the contract change",
                      "example": "The level name"
                    },
                    "fr_step_id": {
                      "type": "integer",
                      "description": "The step id on the contract change",
                      "example": 1
                    },
                    "fr_step_name": {
                      "type": "string",
                      "description": "The step name on the contract change",
                      "example": "The step name"
                    },
                    "fr_mutual_id": {
                      "type": "integer",
                      "description": "The mutual id on the contract change",
                      "example": 1
                    },
                    "fr_mutual_name": {
                      "type": "string",
                      "description": "The mutual name on the contract change",
                      "example": "The mutual name"
                    },
                    "fr_professional_category_id": {
                      "type": "integer",
                      "description": "The professional category id on the contract change",
                      "example": 1
                    },
                    "fr_professional_category_name": {
                      "type": "string",
                      "description": "The professional category name on the contract change",
                      "example": "The professional category name"
                    },
                    "fr_work_type_id": {
                      "type": "integer",
                      "description": "The work type id on the contract change",
                      "example": 1
                    },
                    "fr_work_type_name": {
                      "type": "string",
                      "description": "The work type name on the contract change",
                      "example": "The work type name"
                    },
                    "compensation_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "fr_contract_type_id": {
                      "type": "integer",
                      "description": "The contract type id on the contract change",
                      "example": 1
                    },
                    "fr_contract_type_name": {
                      "type": "string",
                      "description": "The contract type name on the contract change",
                      "example": "The contract type name"
                    },
                    "de_contract_type_id": {
                      "type": "integer",
                      "description": "The contract type id on the contract change",
                      "example": 1
                    },
                    "de_contract_type_name": {
                      "type": "string",
                      "description": "The contract type name on the contract change",
                      "example": "The contract type name"
                    },
                    "pt_contract_type_id": {
                      "type": "integer",
                      "description": "The contract type id on the contract change",
                      "example": 1
                    },
                    "pt_contract_type_name": {
                      "type": "string",
                      "description": "The contract type name on the contract change",
                      "example": "The contract type name"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/new_hires": {
      "get": {
        "tags": [
          "EmployeeUpdates > NewHire"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a detail of new hire `employee updates`.",
        "summary": "Reads all New hires",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by new hire incidence ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by new hire incidence ids.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "status",
                      "employee_id",
                      "first_name",
                      "last_name",
                      "address"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The id of the new hire incidence",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the new hire incidence",
                        "example": "done"
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "The employee id of the new hire",
                        "example": 1
                      },
                      "first_name": {
                        "type": "string",
                        "description": "name of the employee.",
                        "example": "Ana"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last name of the employee.",
                        "example": "Blanco Perez"
                      },
                      "birth_name": {
                        "type": "string",
                        "description": "The birth name of the new hire",
                        "example": "John Doe"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "national identifier number.",
                        "example": "QKG587532Y"
                      },
                      "identifier_type": {
                        "type": "string",
                        "description": "type of identifier (ex passport).",
                        "example": "passport"
                      },
                      "payroll_identifier": {
                        "type": "string",
                        "description": "payroll identifier.",
                        "example": 123456
                      },
                      "work_email": {
                        "type": "string",
                        "description": "personal email of the employee.",
                        "example": "ana@factorial.com"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone number of the employee.",
                        "example": 123456789
                      },
                      "gender": {
                        "type": "string",
                        "description": "gender of the employee (male | female).",
                        "example": "female"
                      },
                      "job_title": {
                        "type": "string",
                        "description": "job title of the employee.",
                        "example": "Software Engineer"
                      },
                      "address": {
                        "type": "string",
                        "description": "address of the employee.",
                        "example": "Calle Rosalía de Castro 10, 1º 1ª"
                      },
                      "city": {
                        "type": "string",
                        "description": "city of the employee.",
                        "example": "Santander"
                      },
                      "country": {
                        "type": "string",
                        "description": "country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "state": {
                        "type": "string",
                        "description": "state/province/region of the employee.",
                        "example": "Cataluña"
                      },
                      "postal_code": {
                        "type": "string",
                        "description": "postal code of the employee.",
                        "example": 27004
                      },
                      "date_of_birth": {
                        "type": "string",
                        "description": "birthday of the employee.",
                        "example": "1990-06-06"
                      },
                      "nationality": {
                        "type": "string",
                        "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "start_date": {
                        "type": "string"
                      },
                      "contract_effective_date": {
                        "type": "string"
                      },
                      "contract_end_date": {
                        "type": "string"
                      },
                      "bank_account": {
                        "type": "string",
                        "description": "bank account number of the employee.",
                        "example": "ES6220809324751871912999"
                      },
                      "salary_amount_in_cents": {
                        "type": "integer",
                        "description": "salary amount in cents.",
                        "example": 200000
                      },
                      "salary_frequency": {
                        "type": "string"
                      },
                      "working_hours": {
                        "type": "integer"
                      },
                      "working_hours_frequency": {
                        "type": "string"
                      },
                      "social_security_number": {
                        "type": "string",
                        "description": "social security number of the employee.",
                        "example": 238038194000
                      },
                      "manager_id": {
                        "type": "integer",
                        "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                        "example": 1
                      },
                      "tax_id": {
                        "type": "string"
                      },
                      "legal_entity_id": {
                        "type": "integer",
                        "description": "The legal entity id of the new hire",
                        "example": 1
                      },
                      "workplace_id": {
                        "type": "integer",
                        "description": "workplace id of the employee.",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/new_hires/{id}": {
      "get": {
        "tags": [
          "EmployeeUpdates > NewHire"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a detail of new hire `employee updates`.",
        "summary": "Reads a single New hire",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "employee_id",
                    "first_name",
                    "last_name",
                    "address"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id of the new hire incidence",
                      "example": 1
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the new hire incidence",
                      "example": "done"
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The employee id of the new hire",
                      "example": 1
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "birth_name": {
                      "type": "string",
                      "description": "The birth name of the new hire",
                      "example": "John Doe"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "payroll_identifier": {
                      "type": "string",
                      "description": "payroll identifier.",
                      "example": 123456
                    },
                    "work_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 123456789
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "job_title": {
                      "type": "string",
                      "description": "job title of the employee.",
                      "example": "Software Engineer"
                    },
                    "address": {
                      "type": "string",
                      "description": "address of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cataluña"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "date_of_birth": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "contract_effective_date": {
                      "type": "string"
                    },
                    "contract_end_date": {
                      "type": "string"
                    },
                    "bank_account": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "salary_amount_in_cents": {
                      "type": "integer",
                      "description": "salary amount in cents.",
                      "example": 200000
                    },
                    "salary_frequency": {
                      "type": "string"
                    },
                    "working_hours": {
                      "type": "integer"
                    },
                    "working_hours_frequency": {
                      "type": "string"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "manager_id": {
                      "type": "integer",
                      "description": "manager id of the employee, you can get the manager id from employees endpoint.",
                      "example": 1
                    },
                    "tax_id": {
                      "type": "string"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "The legal entity id of the new hire",
                      "example": 1
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "workplace id of the employee.",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/personal_changes": {
      "get": {
        "tags": [
          "EmployeeUpdates > PersonalChange"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of personal changes `employee updates`.",
        "summary": "Reads all Personal changes",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by personal change incidence ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by personal change incidence ids.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "status",
                      "employee_id",
                      "first_name",
                      "last_name"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The id of the new hire incidence",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the new hire incidence",
                        "example": "done"
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "The employee id of the new hire",
                        "example": 1
                      },
                      "work_email": {
                        "type": "string",
                        "description": "personal email of the employee.",
                        "example": "ana@factorial.com"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone number of the employee.",
                        "example": 123456789
                      },
                      "identifier_type": {
                        "type": "string",
                        "description": "type of identifier (ex passport).",
                        "example": "passport"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "national identifier number.",
                        "example": "QKG587532Y"
                      },
                      "social_security_number": {
                        "type": "string",
                        "description": "social security number of the employee.",
                        "example": 238038194000
                      },
                      "tax_id": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "name of the employee.",
                        "example": "Ana"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last name of the employee.",
                        "example": "Blanco Perez"
                      },
                      "gender": {
                        "type": "string",
                        "description": "gender of the employee (male | female).",
                        "example": "female"
                      },
                      "date_of_birth": {
                        "type": "string",
                        "description": "birthday of the employee.",
                        "example": "1990-06-06"
                      },
                      "nationality": {
                        "type": "string",
                        "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "address_line_1": {
                        "type": "string",
                        "description": "address line 1 of the employee.",
                        "example": "Calle Rosalía de Castro 10, 1º 1ª"
                      },
                      "address_line_2": {
                        "type": "string",
                        "description": "address line 1 of the employee.",
                        "example": "Calle Rosalía de Castro 10, 1º 1ª"
                      },
                      "postal_code": {
                        "type": "string",
                        "description": "postal code of the employee.",
                        "example": 27004
                      },
                      "city": {
                        "type": "string",
                        "description": "city of the employee.",
                        "example": "Santander"
                      },
                      "state": {
                        "type": "string",
                        "description": "state/province/region of the employee.",
                        "example": "Cataluña"
                      },
                      "country": {
                        "type": "string",
                        "description": "country code of the employee (Spain ES, United Kingdom GB).",
                        "example": "ES"
                      },
                      "bank_number": {
                        "type": "string",
                        "description": "bank account number of the employee.",
                        "example": "ES6220809324751871912999"
                      },
                      "job_title": {
                        "type": "string",
                        "description": "job title of the employee.",
                        "example": "Software Engineer"
                      },
                      "workplace_id": {
                        "type": "integer",
                        "description": "workplace id of the employee.",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/personal_changes/{id}": {
      "get": {
        "tags": [
          "EmployeeUpdates > PersonalChange"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of personal changes `employee updates`.",
        "summary": "Reads a single Personal change",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "employee_id",
                    "first_name",
                    "last_name"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id of the new hire incidence",
                      "example": 1
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the new hire incidence",
                      "example": "done"
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The employee id of the new hire",
                      "example": 1
                    },
                    "work_email": {
                      "type": "string",
                      "description": "personal email of the employee.",
                      "example": "ana@factorial.com"
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "phone number of the employee.",
                      "example": 123456789
                    },
                    "identifier_type": {
                      "type": "string",
                      "description": "type of identifier (ex passport).",
                      "example": "passport"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "national identifier number.",
                      "example": "QKG587532Y"
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee.",
                      "example": 238038194000
                    },
                    "tax_id": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "name of the employee.",
                      "example": "Ana"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name of the employee.",
                      "example": "Blanco Perez"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender of the employee (male | female).",
                      "example": "female"
                    },
                    "date_of_birth": {
                      "type": "string",
                      "description": "birthday of the employee.",
                      "example": "1990-06-06"
                    },
                    "nationality": {
                      "type": "string",
                      "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "address_line_1": {
                      "type": "string",
                      "description": "address line 1 of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "address_line_2": {
                      "type": "string",
                      "description": "address line 1 of the employee.",
                      "example": "Calle Rosalía de Castro 10, 1º 1ª"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "postal code of the employee.",
                      "example": 27004
                    },
                    "city": {
                      "type": "string",
                      "description": "city of the employee.",
                      "example": "Santander"
                    },
                    "state": {
                      "type": "string",
                      "description": "state/province/region of the employee.",
                      "example": "Cataluña"
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee (Spain ES, United Kingdom GB).",
                      "example": "ES"
                    },
                    "bank_number": {
                      "type": "string",
                      "description": "bank account number of the employee.",
                      "example": "ES6220809324751871912999"
                    },
                    "job_title": {
                      "type": "string",
                      "description": "job title of the employee.",
                      "example": "Software Engineer"
                    },
                    "workplace_id": {
                      "type": "integer",
                      "description": "workplace id of the employee.",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/summaries": {
      "get": {
        "tags": [
          "EmployeeUpdates > Summary"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of `employee updates`.",
        "summary": "Reads all Summaries",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "retrieve only the `employee updates` that matches the `ids` passed in the request.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "retrieve only the `employee updates` that matches the `ids` passed in the request.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "retrieve only the `employee updates` assigned to any `employee` specified in the request.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "retrieve only the `employee updates` assigned to any `employee` specified in the request.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "legal_entities_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "retrieve only the `employee updates` assigned to any `legal entity` specified in the request.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "retrieve only the `employee updates` assigned to any `legal entity` specified in the request.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "type[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter `employee updates` that have the given type. The supported types are: sick, parental, name, id, address, irpf, bank, residence, nationality, gender, hiring, custom-leave, termination, contract, workplace, manual_incidence, legal_entity",
              "example": "sick",
              "items": {
                "type": "string"
              }
            },
            "description": "filter `employee updates` that have the given type. The supported types are: sick, parental, name, id, address, irpf, bank, residence, nationality, gender, hiring, custom-leave, termination, contract, workplace, manual_incidence, legal_entity",
            "example": "sick"
          },
          {
            "name": "starts_on",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter `employee updates` that started **later** the given param.",
              "example": "2024-06-06"
            },
            "description": "filter `employee updates` that started **later** the given param.",
            "example": "2024-06-06"
          },
          {
            "name": "ends_on",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter `employee updates` that started **before** the given param.",
              "example": "2024-06-06"
            },
            "description": "filter `employee updates` that started **before** the given param.",
            "example": "2024-06-06"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "legal_entity_id",
                      "status",
                      "type",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "legal_entity_id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "starts_on": {
                        "type": "string"
                      },
                      "ends_on": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/summaries/{id}": {
      "get": {
        "tags": [
          "EmployeeUpdates > Summary"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of `employee updates`.",
        "summary": "Reads a single Summary",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "legal_entity_id",
                    "status",
                    "type",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "starts_on": {
                      "type": "string"
                    },
                    "ends_on": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/terminations": {
      "get": {
        "tags": [
          "EmployeeUpdates > Termination"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of termination `employee updates`.",
        "summary": "Reads all Terminations",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filter by termination incidence ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filter by termination incidence ids.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "status",
                      "employee_id",
                      "remaining_holidays"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "terminated_on": {
                        "type": "string"
                      },
                      "termination_reason": {
                        "type": "string"
                      },
                      "termination_observations": {
                        "type": "string"
                      },
                      "legal_entity_id": {
                        "type": "integer"
                      },
                      "remaining_holidays": {
                        "type": "array",
                        "items": {}
                      },
                      "termination_reason_type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/employee_updates/terminations/{id}": {
      "get": {
        "tags": [
          "EmployeeUpdates > Termination"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of termination `employee updates`.",
        "summary": "Reads a single Termination",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "employee_id",
                    "remaining_holidays"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "terminated_on": {
                      "type": "string"
                    },
                    "termination_reason": {
                      "type": "string"
                    },
                    "termination_observations": {
                      "type": "string"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "remaining_holidays": {
                      "type": "array",
                      "items": {}
                    },
                    "termination_reason_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/expenses/expensables": {
      "get": {
        "tags": [
          "Expenses > Expensable"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Expensables",
        "summary": "Reads all Expensables",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "group_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "by_resources[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {}
            }
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "reporter_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "schema": {
              "type": "array",
              "enum": [
                "pending",
                "approved",
                "paid",
                "archived",
                "inreview",
                "rejected",
                "reversed",
                "draft",
                "in_payroll",
                "sent_to_pay"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "creation_type[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_grouped",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "include_attachments",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "include_manual_drafts",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "company_id",
                      "employee_id",
                      "currency",
                      "status",
                      "status_updated_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the expensable",
                        "example": 1
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the expensable. Can be either \"expense\" or \"mileage\" or \"perdiem\"",
                        "enum": [
                          "expense",
                          "mileage",
                          "perdiem"
                        ],
                        "example": "mileage"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "The ID of the company that owns the expensable",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "The ID of the employee that owns the expensable",
                        "example": 1
                      },
                      "group_id": {
                        "type": "integer",
                        "description": "The optional ID of the group that the expensable belongs to",
                        "example": 1
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The optional amount in cents",
                        "example": 1000
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency code in ISO 4217 format",
                        "example": "EUR"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the expensable. Can be pending, approved, paid, archived, in_review, rejected, reversed, draft, or in_payroll",
                        "enum": [
                          "pending",
                          "approved",
                          "paid",
                          "archived",
                          "inreview",
                          "rejected",
                          "reversed",
                          "draft",
                          "in_payroll",
                          "sent_to_pay"
                        ],
                        "example": "approved"
                      },
                      "description": {
                        "type": "string",
                        "description": "The optional description of the expensable",
                        "example": "Dinner with clients"
                      },
                      "reporter_id": {
                        "type": "integer",
                        "description": "The optional ID of the employee that reported the expensable",
                        "example": 1
                      },
                      "status_updated_at": {
                        "type": "string",
                        "description": "The optional date and time when the status was last updated",
                        "example": "2024-06-06T12:00:00Z"
                      },
                      "effective_on": {
                        "type": "string",
                        "description": "The optional date and time when the expensable was effective",
                        "example": "2024-06-06T12:00:00Z"
                      },
                      "review_request_at": {
                        "type": "string",
                        "description": "The optional date and time when the expensable was requested for review",
                        "example": "2024-06-06T12:00:00Z"
                      },
                      "paid_at": {
                        "type": "string",
                        "description": "The optional date and time when the expensable was set as paid",
                        "example": "2024-06-06T12:00:00Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "The date and time when the expensable was last updated",
                        "example": "2024-06-06T12:00:00Z"
                      },
                      "reimbursable_amount": {
                        "type": "integer",
                        "description": "The optional reimbursable amount in cents",
                        "example": 1000
                      },
                      "reimbursable_currency": {
                        "type": "string",
                        "description": "The optional reimbursable currency code in ISO 4217 format",
                        "example": "EUR"
                      },
                      "expense_id": {
                        "type": "integer",
                        "description": "The optional ID of the expense that the expensable belongs to",
                        "example": 1
                      },
                      "mileage_id": {
                        "type": "integer",
                        "description": "The optional ID of the mileage that the expensable belongs to",
                        "example": 1
                      },
                      "per_diem_id": {
                        "type": "integer",
                        "description": "The optional ID of the per_diem that the expensable belongs to",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/expenses/expensables/{id}": {
      "get": {
        "tags": [
          "Expenses > Expensable"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Expensable",
        "summary": "Reads a single Expensable",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "type",
                    "company_id",
                    "employee_id",
                    "currency",
                    "status",
                    "status_updated_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the expensable",
                      "example": 1
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the expensable. Can be either \"expense\" or \"mileage\" or \"perdiem\"",
                      "enum": [
                        "expense",
                        "mileage",
                        "perdiem"
                      ],
                      "example": "mileage"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The ID of the company that owns the expensable",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The ID of the employee that owns the expensable",
                      "example": 1
                    },
                    "group_id": {
                      "type": "integer",
                      "description": "The optional ID of the group that the expensable belongs to",
                      "example": 1
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The optional amount in cents",
                      "example": 1000
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency code in ISO 4217 format",
                      "example": "EUR"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the expensable. Can be pending, approved, paid, archived, in_review, rejected, reversed, draft, or in_payroll",
                      "enum": [
                        "pending",
                        "approved",
                        "paid",
                        "archived",
                        "inreview",
                        "rejected",
                        "reversed",
                        "draft",
                        "in_payroll",
                        "sent_to_pay"
                      ],
                      "example": "approved"
                    },
                    "description": {
                      "type": "string",
                      "description": "The optional description of the expensable",
                      "example": "Dinner with clients"
                    },
                    "reporter_id": {
                      "type": "integer",
                      "description": "The optional ID of the employee that reported the expensable",
                      "example": 1
                    },
                    "status_updated_at": {
                      "type": "string",
                      "description": "The optional date and time when the status was last updated",
                      "example": "2024-06-06T12:00:00Z"
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "The optional date and time when the expensable was effective",
                      "example": "2024-06-06T12:00:00Z"
                    },
                    "review_request_at": {
                      "type": "string",
                      "description": "The optional date and time when the expensable was requested for review",
                      "example": "2024-06-06T12:00:00Z"
                    },
                    "paid_at": {
                      "type": "string",
                      "description": "The optional date and time when the expensable was set as paid",
                      "example": "2024-06-06T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The date and time when the expensable was last updated",
                      "example": "2024-06-06T12:00:00Z"
                    },
                    "reimbursable_amount": {
                      "type": "integer",
                      "description": "The optional reimbursable amount in cents",
                      "example": 1000
                    },
                    "reimbursable_currency": {
                      "type": "string",
                      "description": "The optional reimbursable currency code in ISO 4217 format",
                      "example": "EUR"
                    },
                    "expense_id": {
                      "type": "integer",
                      "description": "The optional ID of the expense that the expensable belongs to",
                      "example": 1
                    },
                    "mileage_id": {
                      "type": "integer",
                      "description": "The optional ID of the mileage that the expensable belongs to",
                      "example": 1
                    },
                    "per_diem_id": {
                      "type": "integer",
                      "description": "The optional ID of the per_diem that the expensable belongs to",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/expenses/expenses": {
      "get": {
        "tags": [
          "Expenses > Expense"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Expenses",
        "summary": "Reads all Expenses",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "expenses_expensable_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "include_manual_drafts",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "external_authorization_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "card_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "card_payment_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "include_attachments",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dispute_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "company_id",
                      "creation_type",
                      "currency",
                      "status",
                      "effective_on",
                      "status_updated_at",
                      "files",
                      "taxes"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "card_payment_id": {
                        "type": "integer"
                      },
                      "dispute_id": {
                        "type": "integer"
                      },
                      "expenses_expensable_id": {
                        "type": "integer"
                      },
                      "merchant_name": {
                        "type": "string"
                      },
                      "user_merchant": {
                        "type": "string"
                      },
                      "merchant_tin": {
                        "type": "string"
                      },
                      "category": {
                        "type": "object"
                      },
                      "subcategory": {
                        "type": "string"
                      },
                      "creation_type": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "automatic",
                          "travelperk"
                        ]
                      },
                      "reference": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The optional amount in cents",
                        "example": 1000
                      },
                      "currency": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "paid",
                          "archived",
                          "inreview",
                          "rejected",
                          "reversed",
                          "draft",
                          "in_payroll",
                          "sent_to_pay"
                        ]
                      },
                      "description": {
                        "type": "string"
                      },
                      "effective_on": {
                        "type": "string"
                      },
                      "review_request_at": {
                        "type": "string"
                      },
                      "status_updated_at": {
                        "type": "string"
                      },
                      "files": {
                        "type": "array",
                        "items": {}
                      },
                      "external_authorization_id": {
                        "type": "string"
                      },
                      "expenses_card_id": {
                        "type": "integer"
                      },
                      "card": {
                        "type": "object"
                      },
                      "document_id": {
                        "type": "integer"
                      },
                      "signed_document": {
                        "type": "object"
                      },
                      "access_token": {
                        "type": "string"
                      },
                      "paid_at": {
                        "type": "string"
                      },
                      "document_number": {
                        "type": "string"
                      },
                      "document_type": {
                        "type": "string"
                      },
                      "payment": {
                        "type": "string",
                        "enum": [
                          "reimbursable",
                          "not_reimbursable"
                        ]
                      },
                      "payment_method": {
                        "type": "string"
                      },
                      "exchange_rate": {
                        "type": "number"
                      },
                      "reimbursable_currency": {
                        "type": "string"
                      },
                      "reimbursable_amount": {
                        "type": "integer",
                        "description": "The optional reimbursable amount in cents",
                        "example": 1000
                      },
                      "taxes": {
                        "type": "array",
                        "items": {}
                      },
                      "category_id": {
                        "type": "integer"
                      },
                      "ledger_account_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/expenses/expenses/{id}": {
      "get": {
        "tags": [
          "Expenses > Expense"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Expense",
        "summary": "Reads a single Expense",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "company_id",
                    "creation_type",
                    "currency",
                    "status",
                    "effective_on",
                    "status_updated_at",
                    "files",
                    "taxes"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "card_payment_id": {
                      "type": "integer"
                    },
                    "dispute_id": {
                      "type": "integer"
                    },
                    "expenses_expensable_id": {
                      "type": "integer"
                    },
                    "merchant_name": {
                      "type": "string"
                    },
                    "user_merchant": {
                      "type": "string"
                    },
                    "merchant_tin": {
                      "type": "string"
                    },
                    "category": {
                      "type": "object"
                    },
                    "subcategory": {
                      "type": "string"
                    },
                    "creation_type": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "automatic",
                        "travelperk"
                      ]
                    },
                    "reference": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The optional amount in cents",
                      "example": 1000
                    },
                    "currency": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "paid",
                        "archived",
                        "inreview",
                        "rejected",
                        "reversed",
                        "draft",
                        "in_payroll",
                        "sent_to_pay"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "effective_on": {
                      "type": "string"
                    },
                    "review_request_at": {
                      "type": "string"
                    },
                    "status_updated_at": {
                      "type": "string"
                    },
                    "files": {
                      "type": "array",
                      "items": {}
                    },
                    "external_authorization_id": {
                      "type": "string"
                    },
                    "expenses_card_id": {
                      "type": "integer"
                    },
                    "card": {
                      "type": "object"
                    },
                    "document_id": {
                      "type": "integer"
                    },
                    "signed_document": {
                      "type": "object"
                    },
                    "access_token": {
                      "type": "string"
                    },
                    "paid_at": {
                      "type": "string"
                    },
                    "document_number": {
                      "type": "string"
                    },
                    "document_type": {
                      "type": "string"
                    },
                    "payment": {
                      "type": "string",
                      "enum": [
                        "reimbursable",
                        "not_reimbursable"
                      ]
                    },
                    "payment_method": {
                      "type": "string"
                    },
                    "exchange_rate": {
                      "type": "number"
                    },
                    "reimbursable_currency": {
                      "type": "string"
                    },
                    "reimbursable_amount": {
                      "type": "integer",
                      "description": "The optional reimbursable amount in cents",
                      "example": 1000
                    },
                    "taxes": {
                      "type": "array",
                      "items": {}
                    },
                    "category_id": {
                      "type": "integer"
                    },
                    "ledger_account_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/expenses/mileages": {
      "get": {
        "tags": [
          "Expenses > Mileage"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Mileages",
        "summary": "Reads all Mileages",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "expenses_expensable_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "include_manual_drafts",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "external_authorization_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "card_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "card_payment_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "include_attachments",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dispute_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "currency",
                      "status",
                      "files",
                      "payment"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "expenses_expensable_id": {
                        "type": "integer"
                      },
                      "category": {
                        "type": "object"
                      },
                      "subcategory": {
                        "type": "string"
                      },
                      "category_id": {
                        "type": "integer"
                      },
                      "amount": {
                        "type": "integer"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "mileage": {
                        "type": "integer"
                      },
                      "units": {
                        "type": "string"
                      },
                      "rate": {
                        "type": "object"
                      },
                      "from": {
                        "type": "string"
                      },
                      "to": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "effective_on": {
                        "type": "string"
                      },
                      "review_request_at": {
                        "type": "string"
                      },
                      "files": {
                        "type": "array",
                        "items": {}
                      },
                      "paid_at": {
                        "type": "string"
                      },
                      "payment": {
                        "type": "string",
                        "enum": [
                          "reimbursable",
                          "not_reimbursable"
                        ]
                      },
                      "ledger_account_id": {
                        "type": "integer"
                      },
                      "round_trip": {
                        "type": "boolean",
                        "description": "Indicates if the mileage is a round trip",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/expenses/mileages/{id}": {
      "get": {
        "tags": [
          "Expenses > Mileage"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Mileage",
        "summary": "Reads a single Mileage",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "currency",
                    "status",
                    "files",
                    "payment"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "expenses_expensable_id": {
                      "type": "integer"
                    },
                    "category": {
                      "type": "object"
                    },
                    "subcategory": {
                      "type": "string"
                    },
                    "category_id": {
                      "type": "integer"
                    },
                    "amount": {
                      "type": "integer"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "mileage": {
                      "type": "integer"
                    },
                    "units": {
                      "type": "string"
                    },
                    "rate": {
                      "type": "object"
                    },
                    "from": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "effective_on": {
                      "type": "string"
                    },
                    "review_request_at": {
                      "type": "string"
                    },
                    "files": {
                      "type": "array",
                      "items": {}
                    },
                    "paid_at": {
                      "type": "string"
                    },
                    "payment": {
                      "type": "string",
                      "enum": [
                        "reimbursable",
                        "not_reimbursable"
                      ]
                    },
                    "ledger_account_id": {
                      "type": "integer"
                    },
                    "round_trip": {
                      "type": "boolean",
                      "description": "Indicates if the mileage is a round trip",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/finance/accounts": {
      "get": {
        "tags": [
          "Finance > Account"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Fetch one or all ledger accounts for the company legal_entities.",
        "summary": "Reads all Accounts",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Search ledger accounts by ID",
              "example": [
                568
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Search ledger accounts by ID",
            "example": [
              568
            ]
          },
          {
            "name": "legal_entity_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Search ledger accounts by legal_entity_id",
              "example": [
                23
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Search ledger accounts by legal_entity_id",
            "example": [
              23
            ]
          },
          {
            "name": "types[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Search ledger accounts by type",
              "example": [
                "bank"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "Search ledger accounts by type",
            "example": [
              "bank"
            ]
          },
          {
            "name": "number",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Search ledger accounts by number",
              "example": [
                "type"
              ]
            },
            "description": "Search ledger accounts by number",
            "example": [
              "type"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "number",
                      "disabled",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier in factorial for the ledger account",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ledger account",
                        "example": "Bank account"
                      },
                      "legal_entity_id": {
                        "type": "integer",
                        "description": "Legal entity ID of the ledger account",
                        "example": 1
                      },
                      "number": {
                        "type": "string",
                        "description": "Number of the ledger account",
                        "example": "1000"
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "Whether the ledger account is disabled"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the ledger account",
                        "enum": [
                          "equity",
                          "non_current_asset",
                          "current_asset",
                          "bank",
                          "non_current_liability",
                          "current_liability",
                          "expense",
                          "income"
                        ],
                        "example": "bank"
                      },
                      "external_id": {
                        "type": "string",
                        "description": "Id of the ledger account on the external system",
                        "example": "123"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Finance > Account"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create a ledger account for the company legal_entity. To avoid duplicates use the external_id field to set the ID of the ledger account in the external system.",
        "summary": "Creates an Account",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "number",
                    "disabled",
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier in factorial for the ledger account",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the ledger account",
                      "example": "Bank account"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "Legal entity ID of the ledger account",
                      "example": 1
                    },
                    "number": {
                      "type": "string",
                      "description": "Number of the ledger account",
                      "example": "1000"
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "Whether the ledger account is disabled"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the ledger account",
                      "enum": [
                        "equity",
                        "non_current_asset",
                        "current_asset",
                        "bank",
                        "non_current_liability",
                        "current_liability",
                        "expense",
                        "income"
                      ],
                      "example": "bank"
                    },
                    "external_id": {
                      "type": "string",
                      "description": "Id of the ledger account on the external system",
                      "example": "123"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the ledger account",
                    "example": "Bank account"
                  },
                  "number": {
                    "type": "string",
                    "description": "Number of the ledger account",
                    "example": "1000"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the ledger account",
                    "enum": [
                      "equity",
                      "non_current_asset",
                      "current_asset",
                      "bank",
                      "non_current_liability",
                      "current_liability",
                      "expense",
                      "income"
                    ],
                    "example": "bank"
                  },
                  "legal_entity_id": {
                    "type": "integer",
                    "description": "Legal entity ID of the ledger account",
                    "example": 1
                  },
                  "external_id": {
                    "type": "string",
                    "description": "Id of the ledger account on the external system. This field is important to avoid having duplicated ledger accounts",
                    "example": "123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/finance/accounts/{id}": {
      "get": {
        "tags": [
          "Finance > Account"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Fetch one or all ledger accounts for the company legal_entities.",
        "summary": "Reads a single Account",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "number",
                    "disabled",
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier in factorial for the ledger account",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the ledger account",
                      "example": "Bank account"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "Legal entity ID of the ledger account",
                      "example": 1
                    },
                    "number": {
                      "type": "string",
                      "description": "Number of the ledger account",
                      "example": "1000"
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "Whether the ledger account is disabled"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the ledger account",
                      "enum": [
                        "equity",
                        "non_current_asset",
                        "current_asset",
                        "bank",
                        "non_current_liability",
                        "current_liability",
                        "expense",
                        "income"
                      ],
                      "example": "bank"
                    },
                    "external_id": {
                      "type": "string",
                      "description": "Id of the ledger account on the external system",
                      "example": "123"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/finance/cost_centers": {
      "get": {
        "tags": [
          "Finance > CostCenter"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Cost centers",
        "summary": "Reads all Cost centers",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "legal_entity_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "include_actives_on_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id",
                      "active_employees_count",
                      "historical_employees_count",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "legal_entity_id": {
                        "type": "integer"
                      },
                      "code": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "active_employees_count": {
                        "type": "integer"
                      },
                      "historical_employees_count": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "deactivation_date": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Finance > CostCenter"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Cost center",
        "summary": "Creates a Cost center",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "active_employees_count",
                    "historical_employees_count",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "active_employees_count": {
                      "type": "integer"
                    },
                    "historical_employees_count": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "deactivation_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "company_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "legal_entity_id": {
                    "type": "integer"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/finance/cost_centers/{id}": {
      "get": {
        "tags": [
          "Finance > CostCenter"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Cost center",
        "summary": "Reads a single Cost center",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "active_employees_count",
                    "historical_employees_count",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "active_employees_count": {
                      "type": "integer"
                    },
                    "historical_employees_count": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "deactivation_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Finance > CostCenter"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Cost center",
        "summary": "Deletes a Cost center",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "active_employees_count",
                    "historical_employees_count",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "active_employees_count": {
                      "type": "integer"
                    },
                    "historical_employees_count": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "deactivation_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/finance/cost_centers/edit": {
      "post": {
        "tags": [
          "Finance > CostCenter"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Edits a Cost center",
        "summary": "Edits a Cost center",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "active_employees_count",
                    "historical_employees_count",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "active_employees_count": {
                      "type": "integer"
                    },
                    "historical_employees_count": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "deactivation_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "company_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/finance/cost_center_memberships": {
      "get": {
        "tags": [
          "Finance > CostCenterMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Cost center memberships",
        "summary": "Reads all Cost center memberships",
        "parameters": [
          {
            "name": "cost_center_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "active_on",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "cost_center_id",
                      "start_date",
                      "percentage"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "cost_center_id": {
                        "type": "integer"
                      },
                      "start_date": {
                        "type": "string"
                      },
                      "end_date": {
                        "type": "string"
                      },
                      "percentage": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/finance/cost_center_memberships/bulk_create_update": {
      "post": {
        "tags": [
          "Finance > CostCenterMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?** Performs an update of cost center memberships for an employee.\nThe action creates new memberships starting from today, terminating any pre-existing memberships for the employee.\nThis ensures a history of cost center memberships is preserved.\n###### **What does the `memberships` array look like?**\nAn array of objects with these properties:\n- `cost_center_id`\n- `percentage`: A float between 0 and 1 representing the percentage that the employee is assigned to the cost center. For multiple assignments, the sum of percentages must equal 1.0.\nFor example, for an employee assigned to cost center 1 during 30% of their time and cost center 2 during 70% of their time, the request parameters would look like: `memberships[][cost_center_id]=1&memberships[][percentage]=0.3&memberships[][cost_center_id]=2&memberships[][percentage]=0.7`",
        "summary": "Bulk create updates a Cost center membership",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "cost_center_id",
                      "start_date",
                      "percentage"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "cost_center_id": {
                        "type": "integer"
                      },
                      "start_date": {
                        "type": "string"
                      },
                      "end_date": {
                        "type": "string"
                      },
                      "percentage": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_id",
                  "memberships",
                  "company_id"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer"
                  },
                  "memberships": {
                    "type": "array",
                    "items": {}
                  },
                  "company_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/holidays/company_holidays": {
      "get": {
        "tags": [
          "Holidays > CompanyHoliday"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves company holidays",
        "summary": "Reads all Company holidays",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Company holiday ids",
              "example": 56,
              "items": {
                "type": "integer"
              }
            },
            "description": "Company holiday ids",
            "example": 56
          },
          {
            "name": "location_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Location id",
              "example": 1
            },
            "description": "Location id",
            "example": 1
          },
          {
            "name": "team_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Team id",
              "example": 3
            },
            "description": "Team id",
            "example": 3
          },
          {
            "name": "start_at",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Start date",
              "example": "2024-01-05"
            },
            "description": "Start date",
            "example": "2024-01-05"
          },
          {
            "name": "end_at",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "End date",
              "example": "2024-06-01"
            },
            "description": "End date",
            "example": "2024-06-01"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "location_id",
                      "date"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Company holiday id",
                        "example": 56
                      },
                      "location_id": {
                        "type": "integer",
                        "description": "Related location id",
                        "example": 1
                      },
                      "summary": {
                        "type": "string",
                        "description": "Company holiday summary",
                        "example": "Christmas Day"
                      },
                      "description": {
                        "type": "string",
                        "description": "Company holiday description",
                        "example": "Christmas Day"
                      },
                      "date": {
                        "type": "string",
                        "description": "Company holiday date",
                        "example": "2024-12-25"
                      },
                      "half_day": {
                        "type": "string",
                        "description": "If the company holiday is half-day and which part of the day",
                        "enum": [
                          "beginning_of_day",
                          "end_of_day"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/holidays/company_holidays/{id}": {
      "get": {
        "tags": [
          "Holidays > CompanyHoliday"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves company holidays",
        "summary": "Reads a single Company holiday",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "location_id",
                    "date"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Company holiday id",
                      "example": 56
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Related location id",
                      "example": 1
                    },
                    "summary": {
                      "type": "string",
                      "description": "Company holiday summary",
                      "example": "Christmas Day"
                    },
                    "description": {
                      "type": "string",
                      "description": "Company holiday description",
                      "example": "Christmas Day"
                    },
                    "date": {
                      "type": "string",
                      "description": "Company holiday date",
                      "example": "2024-12-25"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "If the company holiday is half-day and which part of the day",
                      "enum": [
                        "beginning_of_day",
                        "end_of_day"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/locations/locations": {
      "get": {
        "tags": [
          "Locations > Location"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Locations",
        "summary": "Reads all Locations",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "name",
                      "main"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "address_line_1": {
                        "type": "string"
                      },
                      "address_line_2": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "main": {
                        "type": "boolean"
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      },
                      "radius": {
                        "type": "number"
                      },
                      "siret": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations > Location"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Location",
        "summary": "Creates a Location",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "main"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "address_line_1": {
                      "type": "string"
                    },
                    "address_line_2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "main": {
                      "type": "boolean"
                    },
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    },
                    "radius": {
                      "type": "number"
                    },
                    "siret": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "country",
                  "timezone",
                  "company_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "address_line_one": {
                    "type": "string"
                  },
                  "address_line_two": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "radius": {
                    "type": "number"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "siret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/locations/locations/{id}": {
      "get": {
        "tags": [
          "Locations > Location"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Location",
        "summary": "Reads a single Location",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "main"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "address_line_1": {
                      "type": "string"
                    },
                    "address_line_2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "main": {
                      "type": "boolean"
                    },
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    },
                    "radius": {
                      "type": "number"
                    },
                    "siret": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations > Location"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Location",
        "summary": "Updates a Location",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "main"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "address_line_1": {
                      "type": "string"
                    },
                    "address_line_2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "main": {
                      "type": "boolean"
                    },
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    },
                    "radius": {
                      "type": "number"
                    },
                    "siret": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "address_line_one": {
                    "type": "string"
                  },
                  "address_line_two": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "radius": {
                    "type": "number"
                  },
                  "siret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations > Location"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Location",
        "summary": "Deletes a Location",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "main"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "address_line_1": {
                      "type": "string"
                    },
                    "address_line_2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "main": {
                      "type": "boolean"
                    },
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    },
                    "radius": {
                      "type": "number"
                    },
                    "siret": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/locations/work_areas": {
      "get": {
        "tags": [
          "Locations > WorkArea"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Work areas",
        "summary": "Reads all Work areas",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "location_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "only_non_archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "location_id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "archived_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations > WorkArea"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Work area",
        "summary": "Creates a Work area",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "location_id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "location_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "location_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "location_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/locations/work_areas/{id}": {
      "get": {
        "tags": [
          "Locations > WorkArea"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Work area",
        "summary": "Reads a single Work area",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "location_id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "location_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations > WorkArea"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Work area",
        "summary": "Updates a Work area",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "location_id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "location_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/locations/work_areas/archive": {
      "post": {
        "tags": [
          "Locations > WorkArea"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Archives a Work area",
        "summary": "Archives a Work area",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "location_id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "location_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/locations/work_areas/unarchive": {
      "post": {
        "tags": [
          "Locations > WorkArea"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Unarchives a Work area",
        "summary": "Unarchives a Work area",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "location_id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "location_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/marketplace/installation_settings": {
      "get": {
        "tags": [
          "Marketplace > InstallationSetting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Installation settings",
        "summary": "Reads all Installation settings",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "integration_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "leave_types",
                      "additional_compensation_types",
                      "file_numbers",
                      "establishment_codes",
                      "timeoff_allowance_code"
                    ],
                    "properties": {
                      "leave_types": {
                        "type": "array",
                        "items": {}
                      },
                      "additional_compensation_types": {
                        "type": "array",
                        "items": {}
                      },
                      "file_numbers": {
                        "type": "array",
                        "items": {}
                      },
                      "establishment_codes": {
                        "type": "array",
                        "items": {}
                      },
                      "timeoff_allowance_code": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/marketplace/settings": {
      "get": {
        "tags": [
          "Marketplace > Setting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Settings",
        "summary": "Reads all Settings",
        "parameters": [
          {
            "name": "integration_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "access_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "integration_id",
                      "title",
                      "questions"
                    ],
                    "properties": {
                      "integration_id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "questions": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll/family_situations": {
      "get": {
        "tags": [
          "Payroll > FamilySituation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Get all family situations.",
        "summary": "Reads all Family situations",
        "parameters": [
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "employee ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "employee ids.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "ID of the family situation.",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Employee id of the family situation.",
                        "example": 5
                      },
                      "civil_status": {
                        "type": "string",
                        "description": "Civil status of the employee.",
                        "enum": [
                          "single",
                          "cohabitating",
                          "divorced",
                          "married",
                          "unknown",
                          "civil_partnership",
                          "separated",
                          "widow",
                          "not_applicable"
                        ],
                        "example": "married"
                      },
                      "number_of_dependants": {
                        "type": "integer",
                        "description": "Number of dependants of the employee.",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payroll > FamilySituation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create a family situation.",
        "summary": "Creates a Family situation",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the family situation.",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the family situation.",
                      "example": 5
                    },
                    "civil_status": {
                      "type": "string",
                      "description": "Civil status of the employee.",
                      "enum": [
                        "single",
                        "cohabitating",
                        "divorced",
                        "married",
                        "unknown",
                        "civil_partnership",
                        "separated",
                        "widow",
                        "not_applicable"
                      ],
                      "example": "married"
                    },
                    "number_of_dependants": {
                      "type": "integer",
                      "description": "Number of dependants of the employee.",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_id"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id.",
                    "example": 10
                  },
                  "civil_status": {
                    "type": "string",
                    "description": "Civil status of the employee.",
                    "enum": [
                      "single",
                      "cohabitating",
                      "divorced",
                      "married",
                      "civil_partnership",
                      "separated",
                      "widow",
                      "not_applicable",
                      "unknown"
                    ],
                    "example": "married"
                  },
                  "number_of_dependants": {
                    "type": "integer",
                    "description": "Number of dependants of the employee.",
                    "example": 3
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll/family_situations/{id}": {
      "put": {
        "tags": [
          "Payroll > FamilySituation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update a family situation.",
        "summary": "Updates a Family situation",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the family situation.",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the family situation.",
                      "example": 5
                    },
                    "civil_status": {
                      "type": "string",
                      "description": "Civil status of the employee.",
                      "enum": [
                        "single",
                        "cohabitating",
                        "divorced",
                        "married",
                        "unknown",
                        "civil_partnership",
                        "separated",
                        "widow",
                        "not_applicable"
                      ],
                      "example": "married"
                    },
                    "number_of_dependants": {
                      "type": "integer",
                      "description": "Number of dependants of the employee.",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employee_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Family situation id.",
                    "example": 3
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id.",
                    "example": 10
                  },
                  "civil_status": {
                    "type": "string",
                    "description": "Civil status of the employee.",
                    "enum": [
                      "single",
                      "cohabitating",
                      "divorced",
                      "married",
                      "unknown",
                      "civil_partnership",
                      "separated",
                      "widow",
                      "not_applicable"
                    ],
                    "example": "married"
                  },
                  "number_of_dependants": {
                    "type": "integer",
                    "description": "Number of dependants of the employee.",
                    "example": 2
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll/policy_periods/change_status": {
      "post": {
        "tags": [
          "Payroll > PolicyPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Change statuses a Policy period",
        "summary": "Change statuses a Policy period",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "starts_on",
                    "policy_id",
                    "company_id",
                    "ends_on",
                    "period"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Policy period id",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name with start and end date",
                      "example": "Policy name example 20 aug - 13 sep"
                    },
                    "starts_on": {
                      "type": "string",
                      "description": "The start date of the policy period",
                      "example": "2020-01-01"
                    },
                    "policy_id": {
                      "type": "integer",
                      "description": "The id of the policy associated with the policy period",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The id of the company",
                      "example": 1
                    },
                    "ends_on": {
                      "type": "string",
                      "description": "The start date of the policy period",
                      "example": "2020-01-01"
                    },
                    "period": {
                      "type": "string",
                      "description": "Period for the policy",
                      "example": "20 aug - 13 sep 2021"
                    },
                    "status": {
                      "type": "string",
                      "description": "Policy period status",
                      "example": "preparation"
                    },
                    "policy_name": {
                      "type": "string",
                      "description": "Policy name",
                      "example": "Policy name example"
                    },
                    "calculation_started_at": {
                      "type": "string",
                      "description": "The date and time the calculation started",
                      "example": "2020-01-01"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "status",
                  "notify_employee",
                  "employee_ids"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "preparation",
                      "supplements_definition",
                      "under_review",
                      "payroll_calculation",
                      "paid"
                    ]
                  },
                  "notify_employee": {
                    "type": "boolean"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll/supplements": {
      "get": {
        "tags": [
          "Payroll > Supplement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Supplements",
        "summary": "Reads all Supplements",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Valid date following the format YYYY-MM-DD",
              "example": "2024-01-01"
            },
            "description": "Valid date following the format YYYY-MM-DD",
            "example": "2024-01-01"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Valid date following the format YYYY-MM-DD",
              "example": "2024-01-01"
            },
            "description": "Valid date following the format YYYY-MM-DD",
            "example": "2024-01-01"
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The employee ids to retrieve",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The employee ids to retrieve",
            "example": [
              1
            ]
          },
          {
            "name": "policy_period_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The policy period ids to retrieve",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The policy period ids to retrieve",
            "example": [
              1
            ],
            "required": true
          },
          {
            "name": "compensation_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The compensation id to retrieve",
              "example": 1
            },
            "description": "The compensation id to retrieve",
            "example": 1
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "ids",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "ids",
            "example": [
              1
            ]
          },
          {
            "name": "legal_entity_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The legal entities id to retrieve",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The legal entities id to retrieve",
            "example": [
              1
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "company_id",
                      "unit"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The identifier of the supplement",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "The identifier of the employee associated with the supplement",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "The identifier of the company associated with the supplement",
                        "example": 1
                      },
                      "contracts_compensation_id": {
                        "type": "integer",
                        "description": "The contract compensation identifier associated with the supplement",
                        "example": 1
                      },
                      "contracts_taxonomy_id": {
                        "type": "integer",
                        "description": "The taxonomy identifier associated with the supplement",
                        "example": 1
                      },
                      "amount_in_cents": {
                        "type": "integer",
                        "description": "The amount of the supplement in cents",
                        "example": 10000
                      },
                      "unit": {
                        "type": "string",
                        "description": "The unit of the supplement",
                        "enum": [
                          "money",
                          "units",
                          "time"
                        ],
                        "example": "hours"
                      },
                      "effective_on": {
                        "type": "string",
                        "description": "The date on which the supplement becomes effective",
                        "example": "2024-01-01"
                      },
                      "created_at": {
                        "type": "boolean",
                        "description": "The created at date when the supplement was created",
                        "example": "2024-01-01T12:00:00Z"
                      },
                      "updated_at": {
                        "type": "boolean",
                        "description": "The last updated at date when the supplement was last updated",
                        "example": "2024-01-05T12:00:00Z"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the supplement",
                        "example": "Supplement for additional work hours"
                      },
                      "payroll_policy_period_id": {
                        "type": "integer",
                        "description": "The payroll policy period identifier associated with the supplement",
                        "example": 23456
                      },
                      "employee_observations": {
                        "type": "array",
                        "description": "Observations on the employee made by the admin or manager",
                        "example": [
                          "Worked extra shifts",
                          "Bonus for holiday work"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "raw_minutes_in_cents": {
                        "type": "integer",
                        "description": "The raw value of minutes in cents associated with the supplement",
                        "example": 5000
                      },
                      "minutes_in_cents": {
                        "type": "integer",
                        "description": "The value of minutes in cents after adjustments",
                        "example": 4800
                      },
                      "equivalent_minutes_in_cents": {
                        "type": "integer",
                        "description": "The equivalent value of minutes in cents for payroll processing",
                        "example": 4600
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency used for the supplement, typically in ISO 4217 format",
                        "example": "USD"
                      },
                      "legal_entity_id": {
                        "type": "integer",
                        "description": "The legal entity identifier associated with the supplement",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payroll > Supplement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Supplement",
        "summary": "Creates a Supplement",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "company_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The identifier of the supplement",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The identifier of the employee associated with the supplement",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The identifier of the company associated with the supplement",
                      "example": 1
                    },
                    "contracts_compensation_id": {
                      "type": "integer",
                      "description": "The contract compensation identifier associated with the supplement",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "The taxonomy identifier associated with the supplement",
                      "example": 1
                    },
                    "amount_in_cents": {
                      "type": "integer",
                      "description": "The amount of the supplement in cents",
                      "example": 10000
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit of the supplement",
                      "enum": [
                        "money",
                        "units",
                        "time"
                      ],
                      "example": "hours"
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "The date on which the supplement becomes effective",
                      "example": "2024-01-01"
                    },
                    "created_at": {
                      "type": "boolean",
                      "description": "The created at date when the supplement was created",
                      "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "boolean",
                      "description": "The last updated at date when the supplement was last updated",
                      "example": "2024-01-05T12:00:00Z"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the supplement",
                      "example": "Supplement for additional work hours"
                    },
                    "payroll_policy_period_id": {
                      "type": "integer",
                      "description": "The payroll policy period identifier associated with the supplement",
                      "example": 23456
                    },
                    "employee_observations": {
                      "type": "array",
                      "description": "Observations on the employee made by the admin or manager",
                      "example": [
                        "Worked extra shifts",
                        "Bonus for holiday work"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "raw_minutes_in_cents": {
                      "type": "integer",
                      "description": "The raw value of minutes in cents associated with the supplement",
                      "example": 5000
                    },
                    "minutes_in_cents": {
                      "type": "integer",
                      "description": "The value of minutes in cents after adjustments",
                      "example": 4800
                    },
                    "equivalent_minutes_in_cents": {
                      "type": "integer",
                      "description": "The equivalent value of minutes in cents for payroll processing",
                      "example": 4600
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency used for the supplement, typically in ISO 4217 format",
                      "example": "USD"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "The legal entity identifier associated with the supplement",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount_in_cents",
                  "employee_id",
                  "effective_on",
                  "contracts_taxonomy_id"
                ],
                "properties": {
                  "amount_in_cents": {
                    "type": "integer",
                    "description": "Supplement amount in cents",
                    "example": "50000"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "The employee id of the suplement",
                    "example": 1
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "Supplement effective on date following the format YYYY-MM-DD",
                    "example": "2024-01-01"
                  },
                  "contracts_taxonomy_id": {
                    "type": "integer",
                    "description": "Supplement contract taxonomy id",
                    "example": 2
                  },
                  "contracts_compensation_id": {
                    "type": "integer",
                    "description": "Supplement contract compensation id",
                    "example": 1
                  },
                  "payroll_policy_period_id": {
                    "type": "integer",
                    "description": "Supplement payroll policy period id",
                    "example": 1
                  },
                  "unit": {
                    "type": "string",
                    "description": "Supplement unit",
                    "example": "usd"
                  },
                  "worked_days": {
                    "type": "integer",
                    "description": "Supplement worked days",
                    "example": 5
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll/supplements/{id}": {
      "get": {
        "tags": [
          "Payroll > Supplement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Supplement",
        "summary": "Reads a single Supplement",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "company_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The identifier of the supplement",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The identifier of the employee associated with the supplement",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The identifier of the company associated with the supplement",
                      "example": 1
                    },
                    "contracts_compensation_id": {
                      "type": "integer",
                      "description": "The contract compensation identifier associated with the supplement",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "The taxonomy identifier associated with the supplement",
                      "example": 1
                    },
                    "amount_in_cents": {
                      "type": "integer",
                      "description": "The amount of the supplement in cents",
                      "example": 10000
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit of the supplement",
                      "enum": [
                        "money",
                        "units",
                        "time"
                      ],
                      "example": "hours"
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "The date on which the supplement becomes effective",
                      "example": "2024-01-01"
                    },
                    "created_at": {
                      "type": "boolean",
                      "description": "The created at date when the supplement was created",
                      "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "boolean",
                      "description": "The last updated at date when the supplement was last updated",
                      "example": "2024-01-05T12:00:00Z"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the supplement",
                      "example": "Supplement for additional work hours"
                    },
                    "payroll_policy_period_id": {
                      "type": "integer",
                      "description": "The payroll policy period identifier associated with the supplement",
                      "example": 23456
                    },
                    "employee_observations": {
                      "type": "array",
                      "description": "Observations on the employee made by the admin or manager",
                      "example": [
                        "Worked extra shifts",
                        "Bonus for holiday work"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "raw_minutes_in_cents": {
                      "type": "integer",
                      "description": "The raw value of minutes in cents associated with the supplement",
                      "example": 5000
                    },
                    "minutes_in_cents": {
                      "type": "integer",
                      "description": "The value of minutes in cents after adjustments",
                      "example": 4800
                    },
                    "equivalent_minutes_in_cents": {
                      "type": "integer",
                      "description": "The equivalent value of minutes in cents for payroll processing",
                      "example": 4600
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency used for the supplement, typically in ISO 4217 format",
                      "example": "USD"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "The legal entity identifier associated with the supplement",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payroll > Supplement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Supplement",
        "summary": "Updates a Supplement",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "company_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The identifier of the supplement",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The identifier of the employee associated with the supplement",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The identifier of the company associated with the supplement",
                      "example": 1
                    },
                    "contracts_compensation_id": {
                      "type": "integer",
                      "description": "The contract compensation identifier associated with the supplement",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "The taxonomy identifier associated with the supplement",
                      "example": 1
                    },
                    "amount_in_cents": {
                      "type": "integer",
                      "description": "The amount of the supplement in cents",
                      "example": 10000
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit of the supplement",
                      "enum": [
                        "money",
                        "units",
                        "time"
                      ],
                      "example": "hours"
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "The date on which the supplement becomes effective",
                      "example": "2024-01-01"
                    },
                    "created_at": {
                      "type": "boolean",
                      "description": "The created at date when the supplement was created",
                      "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "boolean",
                      "description": "The last updated at date when the supplement was last updated",
                      "example": "2024-01-05T12:00:00Z"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the supplement",
                      "example": "Supplement for additional work hours"
                    },
                    "payroll_policy_period_id": {
                      "type": "integer",
                      "description": "The payroll policy period identifier associated with the supplement",
                      "example": 23456
                    },
                    "employee_observations": {
                      "type": "array",
                      "description": "Observations on the employee made by the admin or manager",
                      "example": [
                        "Worked extra shifts",
                        "Bonus for holiday work"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "raw_minutes_in_cents": {
                      "type": "integer",
                      "description": "The raw value of minutes in cents associated with the supplement",
                      "example": 5000
                    },
                    "minutes_in_cents": {
                      "type": "integer",
                      "description": "The value of minutes in cents after adjustments",
                      "example": 4800
                    },
                    "equivalent_minutes_in_cents": {
                      "type": "integer",
                      "description": "The equivalent value of minutes in cents for payroll processing",
                      "example": 4600
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency used for the supplement, typically in ISO 4217 format",
                      "example": "USD"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "The legal entity identifier associated with the supplement",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The supplement id",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "The employee id of the supplement",
                    "example": 1
                  },
                  "contracts_compensation_id": {
                    "type": "integer",
                    "description": "The supplement contract compensation id",
                    "example": 1
                  },
                  "contracts_taxonomy_id": {
                    "type": "integer",
                    "description": "The supplement contract taxonomy id",
                    "example": 2
                  },
                  "amount_in_cents": {
                    "type": "integer",
                    "description": "Supplement amount in cents",
                    "example": 50000
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "Supplement effective on date following the format YYYY-MM-DD",
                    "example": "2024-01-01"
                  },
                  "unit": {
                    "type": "string",
                    "description": "Supplement unit",
                    "example": "usd"
                  },
                  "payroll_policy_period_id": {
                    "type": "integer",
                    "description": "Supplement payroll policy period  id",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payroll > Supplement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Supplement",
        "summary": "Deletes a Supplement",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "company_id",
                    "unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The identifier of the supplement",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "The identifier of the employee associated with the supplement",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The identifier of the company associated with the supplement",
                      "example": 1
                    },
                    "contracts_compensation_id": {
                      "type": "integer",
                      "description": "The contract compensation identifier associated with the supplement",
                      "example": 1
                    },
                    "contracts_taxonomy_id": {
                      "type": "integer",
                      "description": "The taxonomy identifier associated with the supplement",
                      "example": 1
                    },
                    "amount_in_cents": {
                      "type": "integer",
                      "description": "The amount of the supplement in cents",
                      "example": 10000
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit of the supplement",
                      "enum": [
                        "money",
                        "units",
                        "time"
                      ],
                      "example": "hours"
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "The date on which the supplement becomes effective",
                      "example": "2024-01-01"
                    },
                    "created_at": {
                      "type": "boolean",
                      "description": "The created at date when the supplement was created",
                      "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                      "type": "boolean",
                      "description": "The last updated at date when the supplement was last updated",
                      "example": "2024-01-05T12:00:00Z"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the supplement",
                      "example": "Supplement for additional work hours"
                    },
                    "payroll_policy_period_id": {
                      "type": "integer",
                      "description": "The payroll policy period identifier associated with the supplement",
                      "example": 23456
                    },
                    "employee_observations": {
                      "type": "array",
                      "description": "Observations on the employee made by the admin or manager",
                      "example": [
                        "Worked extra shifts",
                        "Bonus for holiday work"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "raw_minutes_in_cents": {
                      "type": "integer",
                      "description": "The raw value of minutes in cents associated with the supplement",
                      "example": 5000
                    },
                    "minutes_in_cents": {
                      "type": "integer",
                      "description": "The value of minutes in cents after adjustments",
                      "example": 4800
                    },
                    "equivalent_minutes_in_cents": {
                      "type": "integer",
                      "description": "The equivalent value of minutes in cents for payroll processing",
                      "example": 4600
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency used for the supplement, typically in ISO 4217 format",
                      "example": "USD"
                    },
                    "legal_entity_id": {
                      "type": "integer",
                      "description": "The legal entity identifier associated with the supplement",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll_employees/identifiers": {
      "get": {
        "tags": [
          "PayrollEmployees > Identifier"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads Payroll employee identifier codes, current countries supported are Portugal, Italy and Germany",
        "summary": "Reads all Identifiers",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "employees_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "filters by employee identifiers",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "filters by employee identifiers",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "legal_entities_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filters by country code pt | it | de",
              "enum": [
                "pt",
                "de",
                "it"
              ],
              "example": "it"
            },
            "description": "filters by country code pt | it | de",
            "example": "it",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "country"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "payroll employee identifier",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "identifier of the employee",
                        "example": 1
                      },
                      "social_security_number": {
                        "type": "string",
                        "description": "social security number of the employee",
                        "example": 123456788
                      },
                      "tax_id": {
                        "type": "string",
                        "description": "tax id of the employee",
                        "example": 123456789
                      },
                      "country": {
                        "type": "string",
                        "description": "country code of the employee pt | it | de",
                        "enum": [
                          "pt",
                          "de",
                          "it"
                        ],
                        "example": "it"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayrollEmployees > Identifier"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads Payroll employee identifier codes, current countries supported are Portugal, Italy and Germany",
        "summary": "Creates an Identifier",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "country"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "payroll employee identifier",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "identifier of the employee",
                      "example": 1
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee",
                      "example": 123456788
                    },
                    "tax_id": {
                      "type": "string",
                      "description": "tax id of the employee",
                      "example": 123456789
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee pt | it | de",
                      "enum": [
                        "pt",
                        "de",
                        "it"
                      ],
                      "example": "it"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_id",
                  "country"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "identifier of the employee",
                    "example": 1
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee",
                    "example": 123456788
                  },
                  "tax_id": {
                    "type": "string",
                    "description": "tax id of the employee",
                    "example": 123456789
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee pt | it | de",
                    "enum": [
                      "pt",
                      "de",
                      "it"
                    ],
                    "example": "it"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll_employees/identifiers/{id}": {
      "get": {
        "tags": [
          "PayrollEmployees > Identifier"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads Payroll employee identifier codes, current countries supported are Portugal, Italy and Germany",
        "summary": "Reads a single Identifier",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "country"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "payroll employee identifier",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "identifier of the employee",
                      "example": 1
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee",
                      "example": 123456788
                    },
                    "tax_id": {
                      "type": "string",
                      "description": "tax id of the employee",
                      "example": 123456789
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee pt | it | de",
                      "enum": [
                        "pt",
                        "de",
                        "it"
                      ],
                      "example": "it"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollEmployees > Identifier"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads Payroll employee identifier codes, current countries supported are Portugal, Italy and Germany",
        "summary": "Updates an Identifier",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "country"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "payroll employee identifier",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "identifier of the employee",
                      "example": 1
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee",
                      "example": 123456788
                    },
                    "tax_id": {
                      "type": "string",
                      "description": "tax id of the employee",
                      "example": 123456789
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee pt | it | de",
                      "enum": [
                        "pt",
                        "de",
                        "it"
                      ],
                      "example": "it"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "country"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "payroll employee identifier",
                    "example": 1
                  },
                  "social_security_number": {
                    "type": "string",
                    "description": "social security number of the employee",
                    "example": 123456788
                  },
                  "tax_id": {
                    "type": "string",
                    "description": "tax id of the employee",
                    "example": 123456789
                  },
                  "country": {
                    "type": "string",
                    "description": "country code of the employee pt | it | de",
                    "enum": [
                      "pt",
                      "de",
                      "it"
                    ],
                    "example": "it"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollEmployees > Identifier"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads Payroll employee identifier codes, current countries supported are Portugal, Italy and Germany",
        "summary": "Deletes an Identifier",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "country"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "payroll employee identifier",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "identifier of the employee",
                      "example": 1
                    },
                    "social_security_number": {
                      "type": "string",
                      "description": "social security number of the employee",
                      "example": 123456788
                    },
                    "tax_id": {
                      "type": "string",
                      "description": "tax id of the employee",
                      "example": 123456789
                    },
                    "country": {
                      "type": "string",
                      "description": "country code of the employee pt | it | de",
                      "enum": [
                        "pt",
                        "de",
                        "it"
                      ],
                      "example": "it"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll_integrations_base/codes": {
      "get": {
        "tags": [
          "PayrollIntegrationsBase > Code"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Codes",
        "summary": "Reads all Codes",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Code Value",
              "example": "COD-51"
            },
            "description": "Code Value",
            "example": "COD-51"
          },
          {
            "name": "integrations[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Payroll Integration names",
              "enum": [
                "a3innuva",
                "a3nom",
                "paierh",
                "silae",
                "silae_api",
                "datev",
                "datev_api",
                "datev_lug_api",
                "zucchetti"
              ],
              "example": "a3innuva",
              "items": {
                "type": "string"
              }
            },
            "description": "Payroll Integration names",
            "example": "a3innuva",
            "required": true
          },
          {
            "name": "codeable_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Related object ID. Used together with codeable_type",
              "example": 1
            },
            "description": "Related object ID. Used together with codeable_type",
            "example": 1
          },
          {
            "name": "codeable_type",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Related object type. Used together with codeable_id",
              "example": "Employee | Company | LegalEntity | Location"
            },
            "description": "Related object type. Used together with codeable_id",
            "example": "Employee | Company | LegalEntity | Location"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "code",
                      "codeable_id",
                      "codeable_type",
                      "integration"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Code identifier",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company ID where the code belongs to",
                        "example": 2
                      },
                      "code": {
                        "type": "string",
                        "description": "Code value",
                        "example": "COD-51"
                      },
                      "codeable_id": {
                        "type": "integer",
                        "description": "Related object ID. Used together with codeable_type",
                        "example": 5
                      },
                      "codeable_type": {
                        "type": "string",
                        "description": "Related object type. Used together with codeable_id",
                        "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                      },
                      "integration": {
                        "type": "string",
                        "description": "Integration name",
                        "enum": [
                          "a3innuva",
                          "a3nom",
                          "paierh",
                          "silae",
                          "silae_api",
                          "datev",
                          "datev_api",
                          "datev_lug_api",
                          "zucchetti"
                        ],
                        "example": "a3innuva"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayrollIntegrationsBase > Code"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Code",
        "summary": "Creates a Code",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "code",
                    "codeable_id",
                    "codeable_type",
                    "integration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Code identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID where the code belongs to",
                      "example": 2
                    },
                    "code": {
                      "type": "string",
                      "description": "Code value",
                      "example": "COD-51"
                    },
                    "codeable_id": {
                      "type": "integer",
                      "description": "Related object ID. Used together with codeable_type",
                      "example": 5
                    },
                    "codeable_type": {
                      "type": "string",
                      "description": "Related object type. Used together with codeable_id",
                      "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                    },
                    "integration": {
                      "type": "string",
                      "description": "Integration name",
                      "enum": [
                        "a3innuva",
                        "a3nom",
                        "paierh",
                        "silae",
                        "silae_api",
                        "datev",
                        "datev_api",
                        "datev_lug_api",
                        "zucchetti"
                      ],
                      "example": "a3innuva"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "codeable_id",
                  "codeable_type",
                  "integration"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Code Value",
                    "example": "COD-51"
                  },
                  "codeable_id": {
                    "type": "integer",
                    "description": "Related object ID. Used together with codeable_type",
                    "example": 1
                  },
                  "codeable_type": {
                    "type": "string",
                    "description": "Related object type. Used together with codeable_id",
                    "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                  },
                  "integration": {
                    "type": "string",
                    "description": "Integration name",
                    "enum": [
                      "a3innuva",
                      "a3nom",
                      "paierh",
                      "silae",
                      "silae_api",
                      "datev",
                      "datev_api",
                      "datev_lug_api",
                      "zucchetti"
                    ],
                    "example": "a3innuva"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/payroll_integrations_base/codes/{id}": {
      "put": {
        "tags": [
          "PayrollIntegrationsBase > Code"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Code",
        "summary": "Updates a Code",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "code",
                    "codeable_id",
                    "codeable_type",
                    "integration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Code identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID where the code belongs to",
                      "example": 2
                    },
                    "code": {
                      "type": "string",
                      "description": "Code value",
                      "example": "COD-51"
                    },
                    "codeable_id": {
                      "type": "integer",
                      "description": "Related object ID. Used together with codeable_type",
                      "example": 5
                    },
                    "codeable_type": {
                      "type": "string",
                      "description": "Related object type. Used together with codeable_id",
                      "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                    },
                    "integration": {
                      "type": "string",
                      "description": "Integration name",
                      "enum": [
                        "a3innuva",
                        "a3nom",
                        "paierh",
                        "silae",
                        "silae_api",
                        "datev",
                        "datev_api",
                        "datev_lug_api",
                        "zucchetti"
                      ],
                      "example": "a3innuva"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "code"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Code identifier",
                    "example": 1
                  },
                  "code": {
                    "type": "string",
                    "description": "Code Value",
                    "example": "COD-51"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollIntegrationsBase > Code"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Code",
        "summary": "Deletes a Code",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "code",
                    "codeable_id",
                    "codeable_type",
                    "integration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Code identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID where the code belongs to",
                      "example": 2
                    },
                    "code": {
                      "type": "string",
                      "description": "Code value",
                      "example": "COD-51"
                    },
                    "codeable_id": {
                      "type": "integer",
                      "description": "Related object ID. Used together with codeable_type",
                      "example": 5
                    },
                    "codeable_type": {
                      "type": "string",
                      "description": "Related object type. Used together with codeable_id",
                      "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
                    },
                    "integration": {
                      "type": "string",
                      "description": "Integration name",
                      "enum": [
                        "a3innuva",
                        "a3nom",
                        "paierh",
                        "silae",
                        "silae_api",
                        "datev",
                        "datev_api",
                        "datev_lug_api",
                        "zucchetti"
                      ],
                      "example": "a3innuva"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/agreements": {
      "get": {
        "tags": [
          "Performance > Agreement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the action plans of review processes.",
        "summary": "Reads all Agreements",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by action plan IDs",
              "example": [
                "1",
                "2",
                "3"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "Filter by action plan IDs",
            "example": [
              "1",
              "2",
              "3"
            ]
          },
          {
            "name": "process_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by review process IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "target_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process target IDs",
              "example": [
                "1-3",
                "1-4",
                "1-5"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "Filter by review process target IDs",
            "example": [
              "1-3",
              "1-4",
              "1-5"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "process_id",
                      "target_id",
                      "status",
                      "locked"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Action plan ID",
                        "example": "1"
                      },
                      "process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "target_id": {
                        "type": "string",
                        "description": "Review process target ID",
                        "example": "1-3"
                      },
                      "signer_id": {
                        "type": "integer",
                        "description": "Manager access ID who signed the action plan",
                        "example": 5
                      },
                      "reviewer_id": {
                        "type": "integer",
                        "description": "Manager employee ID",
                        "example": 3
                      },
                      "reviewer_access_id": {
                        "type": "integer",
                        "description": "Manager access ID",
                        "example": 6
                      },
                      "manager_signed_at": {
                        "type": "string",
                        "description": "Date when the manager signed the action plan",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "target_signed_at": {
                        "type": "string",
                        "description": "Date when the employee signed the action plan",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "agreement_signed_at": {
                        "type": "string",
                        "description": "Date when the action plan was last signed",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "last_modified_at": {
                        "type": "string",
                        "description": "Date when the action plan was last modified",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "status": {
                        "type": "string",
                        "description": "Action plan status",
                        "enum": [
                          "pending",
                          "signed"
                        ],
                        "example": "signed"
                      },
                      "locked": {
                        "type": "boolean",
                        "description": "When the action plan cannot be edited anymore. Locked when both manager and employee signed it.",
                        "example": true
                      },
                      "conclusions": {
                        "type": "object",
                        "description": "Conclusions of the action plan",
                        "example": {
                          "text": "The employee is doing well.",
                          "last_updated_at": "2024-01-01T00:00:00Z"
                        }
                      },
                      "manager_questionnaire": {
                        "type": "object",
                        "description": "List of questions, answers and their respective comments grouped by sections.",
                        "example": {
                          "content": [
                            {
                              "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                              "type": "section",
                              "section_title": "Performance",
                              "questions": [
                                {
                                  "question": {
                                    "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "mandatory": true,
                                    "with_comment": false,
                                    "title": "Do you think the employee is a team player?",
                                    "answer_type": "multiple_choice",
                                    "max_choices": 1,
                                    "choice_options": [
                                      "Yes",
                                      "No"
                                    ]
                                  },
                                  "answer": {
                                    "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  },
                                  "comments": [
                                    {
                                      "question_uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                      "author_access_id": 5,
                                      "text": "The employee is a team player.",
                                      "updated_at": "2024-01-01T00:00:00Z"
                                    }
                                  ]
                                },
                                {
                                  "question": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "mandatory": true,
                                    "with_comment": true,
                                    "title": "How would you rate the commitment of the employee?",
                                    "answer_type": "rating"
                                  },
                                  "answer": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  },
                                  "comments": [
                                    {
                                      "question_uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                      "author_access_id": 5,
                                      "text": "The employee is doing well.",
                                      "updated_at": "2024-01-01T00:00:00Z"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "self_questionnaire": {
                        "type": "object",
                        "description": "List of questions, answers and their respective comments grouped by sections.",
                        "example": {
                          "content": [
                            {
                              "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                              "type": "section",
                              "section_title": "Performance",
                              "questions": [
                                {
                                  "question": {
                                    "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                    "mandatory": true,
                                    "with_comment": false,
                                    "title": "Do you think you are a team player?",
                                    "answer_type": "multiple_choice",
                                    "max_choices": 1,
                                    "choice_options": [
                                      "Yes",
                                      "No"
                                    ]
                                  },
                                  "answer": {
                                    "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  },
                                  "comments": [
                                    {
                                      "question_uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                      "author_access_id": 8,
                                      "text": "I am a team player.",
                                      "updated_at": "2024-01-01T00:00:00Z"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/agreements/{id}": {
      "get": {
        "tags": [
          "Performance > Agreement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the action plans of review processes.",
        "summary": "Reads a single Agreement",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "process_id",
                    "target_id",
                    "status",
                    "locked"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Action plan ID",
                      "example": "1"
                    },
                    "process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "target_id": {
                      "type": "string",
                      "description": "Review process target ID",
                      "example": "1-3"
                    },
                    "signer_id": {
                      "type": "integer",
                      "description": "Manager access ID who signed the action plan",
                      "example": 5
                    },
                    "reviewer_id": {
                      "type": "integer",
                      "description": "Manager employee ID",
                      "example": 3
                    },
                    "reviewer_access_id": {
                      "type": "integer",
                      "description": "Manager access ID",
                      "example": 6
                    },
                    "manager_signed_at": {
                      "type": "string",
                      "description": "Date when the manager signed the action plan",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "target_signed_at": {
                      "type": "string",
                      "description": "Date when the employee signed the action plan",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "agreement_signed_at": {
                      "type": "string",
                      "description": "Date when the action plan was last signed",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "last_modified_at": {
                      "type": "string",
                      "description": "Date when the action plan was last modified",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Action plan status",
                      "enum": [
                        "pending",
                        "signed"
                      ],
                      "example": "signed"
                    },
                    "locked": {
                      "type": "boolean",
                      "description": "When the action plan cannot be edited anymore. Locked when both manager and employee signed it.",
                      "example": true
                    },
                    "conclusions": {
                      "type": "object",
                      "description": "Conclusions of the action plan",
                      "example": {
                        "text": "The employee is doing well.",
                        "last_updated_at": "2024-01-01T00:00:00Z"
                      }
                    },
                    "manager_questionnaire": {
                      "type": "object",
                      "description": "List of questions, answers and their respective comments grouped by sections.",
                      "example": {
                        "content": [
                          {
                            "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                            "type": "section",
                            "section_title": "Performance",
                            "questions": [
                              {
                                "question": {
                                  "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                  "mandatory": true,
                                  "with_comment": false,
                                  "title": "Do you think the employee is a team player?",
                                  "answer_type": "multiple_choice",
                                  "max_choices": 1,
                                  "choice_options": [
                                    "Yes",
                                    "No"
                                  ]
                                },
                                "answer": {
                                  "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                  "answer_text": "Example answer",
                                  "answer_int": 10,
                                  "answer_float": 10.5,
                                  "answer_choice": [
                                    "Yes"
                                  ],
                                  "answer_rating": {
                                    "value": 3,
                                    "comment": "The employee is doing well."
                                  }
                                },
                                "comments": [
                                  {
                                    "question_uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "author_access_id": 5,
                                    "text": "The employee is a team player.",
                                    "updated_at": "2024-01-01T00:00:00Z"
                                  }
                                ]
                              },
                              {
                                "question": {
                                  "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                  "mandatory": true,
                                  "with_comment": true,
                                  "title": "How would you rate the commitment of the employee?",
                                  "answer_type": "rating"
                                },
                                "answer": {
                                  "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                  "answer_text": "Example answer",
                                  "answer_int": 10,
                                  "answer_float": 10.5,
                                  "answer_choice": [
                                    "Yes"
                                  ],
                                  "answer_rating": {
                                    "value": 3,
                                    "comment": "The employee is doing well."
                                  }
                                },
                                "comments": [
                                  {
                                    "question_uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "author_access_id": 5,
                                    "text": "The employee is doing well.",
                                    "updated_at": "2024-01-01T00:00:00Z"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "self_questionnaire": {
                      "type": "object",
                      "description": "List of questions, answers and their respective comments grouped by sections.",
                      "example": {
                        "content": [
                          {
                            "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                            "type": "section",
                            "section_title": "Performance",
                            "questions": [
                              {
                                "question": {
                                  "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                  "mandatory": true,
                                  "with_comment": false,
                                  "title": "Do you think you are a team player?",
                                  "answer_type": "multiple_choice",
                                  "max_choices": 1,
                                  "choice_options": [
                                    "Yes",
                                    "No"
                                  ]
                                },
                                "answer": {
                                  "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                  "answer_text": "Example answer",
                                  "answer_int": 10,
                                  "answer_float": 10.5,
                                  "answer_choice": [
                                    "Yes"
                                  ],
                                  "answer_rating": {
                                    "value": 3,
                                    "comment": "The employee is doing well."
                                  }
                                },
                                "comments": [
                                  {
                                    "question_uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                    "author_access_id": 8,
                                    "text": "I am a team player.",
                                    "updated_at": "2024-01-01T00:00:00Z"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/agreements/bulk_initiate": {
      "post": {
        "tags": [
          "Performance > Agreement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Initiate the action plan for all your direct reports in a review process. If you are acting as a company, the action plan from all employees in the review process will be initiated.",
        "summary": "Bulk initiates an Agreement",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "process_id",
                      "target_id",
                      "status",
                      "locked"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Action plan ID",
                        "example": "1"
                      },
                      "process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "target_id": {
                        "type": "string",
                        "description": "Review process target ID",
                        "example": "1-3"
                      },
                      "signer_id": {
                        "type": "integer",
                        "description": "Manager access ID who signed the action plan",
                        "example": 5
                      },
                      "reviewer_id": {
                        "type": "integer",
                        "description": "Manager employee ID",
                        "example": 3
                      },
                      "reviewer_access_id": {
                        "type": "integer",
                        "description": "Manager access ID",
                        "example": 6
                      },
                      "manager_signed_at": {
                        "type": "string",
                        "description": "Date when the manager signed the action plan",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "target_signed_at": {
                        "type": "string",
                        "description": "Date when the employee signed the action plan",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "agreement_signed_at": {
                        "type": "string",
                        "description": "Date when the action plan was last signed",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "last_modified_at": {
                        "type": "string",
                        "description": "Date when the action plan was last modified",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "status": {
                        "type": "string",
                        "description": "Action plan status",
                        "enum": [
                          "pending",
                          "signed"
                        ],
                        "example": "signed"
                      },
                      "locked": {
                        "type": "boolean",
                        "description": "When the action plan cannot be edited anymore. Locked when both manager and employee signed it.",
                        "example": true
                      },
                      "conclusions": {
                        "type": "object",
                        "description": "Conclusions of the action plan",
                        "example": {
                          "text": "The employee is doing well.",
                          "last_updated_at": "2024-01-01T00:00:00Z"
                        }
                      },
                      "manager_questionnaire": {
                        "type": "object",
                        "description": "List of questions, answers and their respective comments grouped by sections.",
                        "example": {
                          "content": [
                            {
                              "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                              "type": "section",
                              "section_title": "Performance",
                              "questions": [
                                {
                                  "question": {
                                    "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "mandatory": true,
                                    "with_comment": false,
                                    "title": "Do you think the employee is a team player?",
                                    "answer_type": "multiple_choice",
                                    "max_choices": 1,
                                    "choice_options": [
                                      "Yes",
                                      "No"
                                    ]
                                  },
                                  "answer": {
                                    "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  },
                                  "comments": [
                                    {
                                      "question_uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                      "author_access_id": 5,
                                      "text": "The employee is a team player.",
                                      "updated_at": "2024-01-01T00:00:00Z"
                                    }
                                  ]
                                },
                                {
                                  "question": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "mandatory": true,
                                    "with_comment": true,
                                    "title": "How would you rate the commitment of the employee?",
                                    "answer_type": "rating"
                                  },
                                  "answer": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  },
                                  "comments": [
                                    {
                                      "question_uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                      "author_access_id": 5,
                                      "text": "The employee is doing well.",
                                      "updated_at": "2024-01-01T00:00:00Z"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "self_questionnaire": {
                        "type": "object",
                        "description": "List of questions, answers and their respective comments grouped by sections.",
                        "example": {
                          "content": [
                            {
                              "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                              "type": "section",
                              "section_title": "Performance",
                              "questions": [
                                {
                                  "question": {
                                    "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                    "mandatory": true,
                                    "with_comment": false,
                                    "title": "Do you think you are a team player?",
                                    "answer_type": "multiple_choice",
                                    "max_choices": 1,
                                    "choice_options": [
                                      "Yes",
                                      "No"
                                    ]
                                  },
                                  "answer": {
                                    "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  },
                                  "comments": [
                                    {
                                      "question_uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                      "author_access_id": 8,
                                      "text": "I am a team player.",
                                      "updated_at": "2024-01-01T00:00:00Z"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "process_id"
                ],
                "properties": {
                  "process_id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/agreements/initiate": {
      "post": {
        "tags": [
          "Performance > Agreement"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Initiate the action plan for a review process target ID in a review process.",
        "summary": "Initiates an Agreement",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "process_id",
                    "target_id",
                    "status",
                    "locked"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Action plan ID",
                      "example": "1"
                    },
                    "process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "target_id": {
                      "type": "string",
                      "description": "Review process target ID",
                      "example": "1-3"
                    },
                    "signer_id": {
                      "type": "integer",
                      "description": "Manager access ID who signed the action plan",
                      "example": 5
                    },
                    "reviewer_id": {
                      "type": "integer",
                      "description": "Manager employee ID",
                      "example": 3
                    },
                    "reviewer_access_id": {
                      "type": "integer",
                      "description": "Manager access ID",
                      "example": 6
                    },
                    "manager_signed_at": {
                      "type": "string",
                      "description": "Date when the manager signed the action plan",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "target_signed_at": {
                      "type": "string",
                      "description": "Date when the employee signed the action plan",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "agreement_signed_at": {
                      "type": "string",
                      "description": "Date when the action plan was last signed",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "last_modified_at": {
                      "type": "string",
                      "description": "Date when the action plan was last modified",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Action plan status",
                      "enum": [
                        "pending",
                        "signed"
                      ],
                      "example": "signed"
                    },
                    "locked": {
                      "type": "boolean",
                      "description": "When the action plan cannot be edited anymore. Locked when both manager and employee signed it.",
                      "example": true
                    },
                    "conclusions": {
                      "type": "object",
                      "description": "Conclusions of the action plan",
                      "example": {
                        "text": "The employee is doing well.",
                        "last_updated_at": "2024-01-01T00:00:00Z"
                      }
                    },
                    "manager_questionnaire": {
                      "type": "object",
                      "description": "List of questions, answers and their respective comments grouped by sections.",
                      "example": {
                        "content": [
                          {
                            "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                            "type": "section",
                            "section_title": "Performance",
                            "questions": [
                              {
                                "question": {
                                  "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                  "mandatory": true,
                                  "with_comment": false,
                                  "title": "Do you think the employee is a team player?",
                                  "answer_type": "multiple_choice",
                                  "max_choices": 1,
                                  "choice_options": [
                                    "Yes",
                                    "No"
                                  ]
                                },
                                "answer": {
                                  "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                  "answer_text": "Example answer",
                                  "answer_int": 10,
                                  "answer_float": 10.5,
                                  "answer_choice": [
                                    "Yes"
                                  ],
                                  "answer_rating": {
                                    "value": 3,
                                    "comment": "The employee is doing well."
                                  }
                                },
                                "comments": [
                                  {
                                    "question_uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "author_access_id": 5,
                                    "text": "The employee is a team player.",
                                    "updated_at": "2024-01-01T00:00:00Z"
                                  }
                                ]
                              },
                              {
                                "question": {
                                  "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                  "mandatory": true,
                                  "with_comment": true,
                                  "title": "How would you rate the commitment of the employee?",
                                  "answer_type": "rating"
                                },
                                "answer": {
                                  "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                  "answer_text": "Example answer",
                                  "answer_int": 10,
                                  "answer_float": 10.5,
                                  "answer_choice": [
                                    "Yes"
                                  ],
                                  "answer_rating": {
                                    "value": 3,
                                    "comment": "The employee is doing well."
                                  }
                                },
                                "comments": [
                                  {
                                    "question_uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "author_access_id": 5,
                                    "text": "The employee is doing well.",
                                    "updated_at": "2024-01-01T00:00:00Z"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "self_questionnaire": {
                      "type": "object",
                      "description": "List of questions, answers and their respective comments grouped by sections.",
                      "example": {
                        "content": [
                          {
                            "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                            "type": "section",
                            "section_title": "Performance",
                            "questions": [
                              {
                                "question": {
                                  "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                  "mandatory": true,
                                  "with_comment": false,
                                  "title": "Do you think you are a team player?",
                                  "answer_type": "multiple_choice",
                                  "max_choices": 1,
                                  "choice_options": [
                                    "Yes",
                                    "No"
                                  ]
                                },
                                "answer": {
                                  "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                  "answer_text": "Example answer",
                                  "answer_int": 10,
                                  "answer_float": 10.5,
                                  "answer_choice": [
                                    "Yes"
                                  ],
                                  "answer_rating": {
                                    "value": 3,
                                    "comment": "The employee is doing well."
                                  }
                                },
                                "comments": [
                                  {
                                    "question_uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                                    "author_access_id": 8,
                                    "text": "I am a team player.",
                                    "updated_at": "2024-01-01T00:00:00Z"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "process_id",
                  "target_id"
                ],
                "properties": {
                  "process_id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "target_id": {
                    "type": "string",
                    "description": "Review process target ID",
                    "example": "1-3"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_evaluations": {
      "get": {
        "tags": [
          "Performance > ReviewEvaluation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the pending and published review evaluations. The evaluations are created based on the participants and the review types when the review process is started.\n\nFor example, if the defined review types are \"self-review\" and \"manager\", two evaluations will be created for each participant when the review process starts. One for the self-review containing the participant as target and the manager as reviewer, and another for the manager review containing the participant as target and the participant as reviewer.",
        "summary": "Reads all Review evaluations",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by evaluation IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by evaluation IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "performance_review_process_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by review process IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "published",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Only published or unpublished evaluations",
              "example": true
            },
            "description": "Only published or unpublished evaluations",
            "example": true
          },
          {
            "name": "reviewer_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by reviewer access IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by reviewer access IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "only_peer_type",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Only peers evaluations",
              "example": true
            },
            "description": "Only peers evaluations",
            "example": true
          },
          {
            "name": "target_access_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by participant access IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by participant access IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "review_process_target_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "with_targets_managed_by_filter",
            "in": "query",
            "schema": {
              "type": "object",
              "description": "Only evaluations where the participant is managed by the specified employee ID",
              "example": {
                "manager_employee_id": 1,
                "only_direct_reports": false
              }
            },
            "description": "Only evaluations where the participant is managed by the specified employee ID",
            "example": {
              "manager_employee_id": 1,
              "only_direct_reports": false
            }
          },
          {
            "name": "exclude_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Exclude evaluations by IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Exclude evaluations by IDs",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "published",
                      "status",
                      "review_process_target_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Evaluation ID",
                        "example": 1
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "target_access_id": {
                        "type": "integer",
                        "description": "Participant access ID",
                        "example": 1
                      },
                      "reviewer_access_id": {
                        "type": "integer",
                        "description": "Reviewer access ID",
                        "example": 1
                      },
                      "evaluation_type": {
                        "type": "string",
                        "description": "Evaluation type",
                        "enum": [
                          "self",
                          "manager",
                          "direct_reports",
                          "peers"
                        ],
                        "example": "manager"
                      },
                      "published": {
                        "type": "boolean",
                        "description": "Whether the evaluation is published",
                        "example": true
                      },
                      "status": {
                        "type": "string",
                        "description": "Evaluation status",
                        "enum": [
                          "pending",
                          "published"
                        ],
                        "example": "published"
                      },
                      "review_process_target_id": {
                        "type": "string"
                      },
                      "published_at": {
                        "type": "string",
                        "description": "Date when the evaluation was published",
                        "example": "2024-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_evaluations/{id}": {
      "get": {
        "tags": [
          "Performance > ReviewEvaluation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the pending and published review evaluations. The evaluations are created based on the participants and the review types when the review process is started.\n\nFor example, if the defined review types are \"self-review\" and \"manager\", two evaluations will be created for each participant when the review process starts. One for the self-review containing the participant as target and the manager as reviewer, and another for the manager review containing the participant as target and the participant as reviewer.",
        "summary": "Reads a single Review evaluation",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "published",
                    "status",
                    "review_process_target_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Evaluation ID",
                      "example": 1
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "target_access_id": {
                      "type": "integer",
                      "description": "Participant access ID",
                      "example": 1
                    },
                    "reviewer_access_id": {
                      "type": "integer",
                      "description": "Reviewer access ID",
                      "example": 1
                    },
                    "evaluation_type": {
                      "type": "string",
                      "description": "Evaluation type",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": "manager"
                    },
                    "published": {
                      "type": "boolean",
                      "description": "Whether the evaluation is published",
                      "example": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Evaluation status",
                      "enum": [
                        "pending",
                        "published"
                      ],
                      "example": "published"
                    },
                    "review_process_target_id": {
                      "type": "string"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "Date when the evaluation was published",
                      "example": "2024-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_evaluations/replace_reviewer": {
      "post": {
        "tags": [
          "Performance > ReviewEvaluation"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Define a new reviewer for the evaluation that will only be able to leave feedback about the employee. This can only be done if the process is active, the evaluation is not published and the evaluation type is not \"self\".",
        "summary": "Replace reviewers a Review evaluation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "published",
                    "status",
                    "review_process_target_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Evaluation ID",
                      "example": 1
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "target_access_id": {
                      "type": "integer",
                      "description": "Participant access ID",
                      "example": 1
                    },
                    "reviewer_access_id": {
                      "type": "integer",
                      "description": "Reviewer access ID",
                      "example": 1
                    },
                    "evaluation_type": {
                      "type": "string",
                      "description": "Evaluation type",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": "manager"
                    },
                    "published": {
                      "type": "boolean",
                      "description": "Whether the evaluation is published",
                      "example": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Evaluation status",
                      "enum": [
                        "pending",
                        "published"
                      ],
                      "example": "published"
                    },
                    "review_process_target_id": {
                      "type": "string"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "Date when the evaluation was published",
                      "example": "2024-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "new_reviewer_access_id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Evaluation ID",
                    "example": 1
                  },
                  "new_reviewer_access_id": {
                    "type": "string",
                    "description": "New reviewer access ID",
                    "example": 5
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_evaluation_answers": {
      "get": {
        "tags": [
          "Performance > ReviewEvaluationAnswer"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the questions and answers of review evaluations.",
        "summary": "Reads all Review evaluation answers",
        "parameters": [
          {
            "name": "performance_review_evaluation_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review evaluation IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by review evaluation IDs",
            "example": [
              1,
              2,
              3
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "performance_review_evaluation_id",
                      "answered_questionnaire_with_sections"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Review evaluation ID",
                        "example": 1
                      },
                      "performance_review_evaluation_id": {
                        "type": "integer",
                        "description": "Review evaluation ID",
                        "example": 1
                      },
                      "answered_questionnaire_with_sections": {
                        "type": "object",
                        "description": "List of questions and their respective answers grouped by section.",
                        "example": {
                          "content": [
                            {
                              "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                              "type": "section",
                              "section_title": "Performance",
                              "questions": [
                                {
                                  "question": {
                                    "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "mandatory": true,
                                    "with_comment": false,
                                    "title": "Do you think the employee is a team player?",
                                    "answer_type": "multiple_choice",
                                    "max_choices": 1,
                                    "choice_options": [
                                      "Yes",
                                      "No"
                                    ]
                                  },
                                  "answer": {
                                    "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  }
                                },
                                {
                                  "question": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "mandatory": true,
                                    "with_comment": true,
                                    "title": "How would you rate the commitment of the employee?",
                                    "answer_type": "rating"
                                  },
                                  "answer": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "answered_employee_score_questionnaire": {
                        "type": "object",
                        "description": "Questionnaire for getting employee score.",
                        "example": {
                          "content": [
                            {
                              "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                              "type": "section",
                              "section_title": "Overall performance",
                              "questions": [
                                {
                                  "question": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                    "mandatory": true,
                                    "with_comment": true,
                                    "title": "How would you rate the evarall performance of the employee?",
                                    "answer_type": "rating",
                                    "scale": [
                                      {
                                        "value": 1,
                                        "text": "Unsatisfactory"
                                      },
                                      {
                                        "value": 2,
                                        "text": "Needs Improvement"
                                      },
                                      {
                                        "value": 3,
                                        "text": "Meets Expectations"
                                      },
                                      {
                                        "value": 4,
                                        "text": "Exceeds Expectations"
                                      },
                                      {
                                        "value": 5,
                                        "text": "Outstanding"
                                      }
                                    ]
                                  },
                                  "answer": {
                                    "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63625fb",
                                    "answer_text": "Example answer",
                                    "answer_int": 10,
                                    "answer_float": 10.5,
                                    "answer_choice": [
                                      "Yes"
                                    ],
                                    "answer_rating": {
                                      "value": 3,
                                      "comment": "The employee is doing well."
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_owners": {
      "get": {
        "tags": [
          "Performance > ReviewOwner"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the review owners of review processes (each process has at least one owner). The owners can edit the review process and access its results.",
        "summary": "Reads all Review owners",
        "parameters": [
          {
            "name": "performance_review_process_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by review process IDs",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "performance_review_process_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Review owner ID",
                        "example": 1
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "Review owner access ID",
                        "example": 2
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_owners/{id}": {
      "delete": {
        "tags": [
          "Performance > ReviewOwner"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Remove an owner from a review process. The review process must have at least one owner.",
        "summary": "Deletes a Review owner",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "performance_review_process_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review owner ID",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "Review owner access ID",
                      "example": 2
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_owners/bulk_create": {
      "post": {
        "tags": [
          "Performance > ReviewOwner"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Add multiple owners to a review process.",
        "summary": "Bulk creates a Review owner",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "performance_review_process_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Review owner ID",
                        "example": 1
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "Review owner access ID",
                        "example": 2
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "review_process_id",
                  "owner_access_ids"
                ],
                "properties": {
                  "review_process_id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "owner_access_ids": {
                    "type": "array",
                    "description": "List of access IDs to be added as owners",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes": {
      "get": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Review processes",
        "summary": "Reads all Review processes",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by review process IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Filter by review process name",
              "example": "2024"
            },
            "description": "Filter by review process name",
            "example": "2024"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "status",
                      "start_validation_errors",
                      "archived",
                      "agreements_configuration",
                      "employee_score_configuration"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "description": "Review process name",
                        "example": "Performance Review - Q1 2024"
                      },
                      "description": {
                        "type": "string",
                        "description": "A brief description of the review process",
                        "example": "The performance review for the first quarter of 2024 has started!"
                      },
                      "status": {
                        "type": "string",
                        "description": "Review process status",
                        "enum": [
                          "draft",
                          "scheduled",
                          "active",
                          "finished"
                        ],
                        "example": "draft"
                      },
                      "target_strategy": {
                        "type": "object",
                        "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                        "example": "all_employees"
                      },
                      "reviewer_strategies": {
                        "type": "array",
                        "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                        "enum": [
                          "self",
                          "manager",
                          "direct_reports",
                          "peers"
                        ],
                        "example": [
                          "self",
                          "manager"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "starts_at": {
                        "type": "string",
                        "description": "Date when the review process should start",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "ends_at": {
                        "type": "string",
                        "description": "Date when the review process should end",
                        "example": "2024-04-01T00:00:00Z"
                      },
                      "start_validation_errors": {
                        "type": "array",
                        "description": "Missing or invalid information to be able to start the review process",
                        "enum": [
                          "missing_deadline",
                          "invalid_deadline",
                          "missing_title",
                          "missing_target_strategy",
                          "missing_target_strategy_members",
                          "missing_reviewer_strategy",
                          "missing_questions",
                          "missing_potential_reviewers"
                        ],
                        "example": [
                          "invalid_deadline",
                          "missing_questions"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "archived": {
                        "type": "boolean",
                        "description": "Whether the review process is archived or not"
                      },
                      "agreements_configuration": {
                        "type": "object",
                        "description": "Configuration of the action plans feature"
                      },
                      "employee_score_configuration": {
                        "type": "object"
                      },
                      "last_bulk_reminder": {
                        "type": "string",
                        "description": "Date when the last bulk reminder was sent",
                        "example": "2024-03-01T00:00:00Z"
                      },
                      "cycle_id": {
                        "type": "string",
                        "description": "Performance cycle ID",
                        "example": "5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create a new review process.",
        "summary": "Creates a Review process",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "author_access_id"
                ],
                "properties": {
                  "author_access_id": {
                    "type": "integer",
                    "description": "Access identifier of the author of the review process",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the review process",
                    "example": "Performance Review - Q1 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "target_strategy": {
                    "type": "string",
                    "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                    "enum": [
                      "all_employees",
                      "by_locations",
                      "by_teams",
                      "manual_selection"
                    ],
                    "example": "all_employees"
                  },
                  "arguments": {
                    "type": "array",
                    "description": "IDs of target strategy groups selected",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "Date when the review process should end",
                    "example": "2024-04-01T00:00:00Z"
                  },
                  "agreements_enabled": {
                    "type": "boolean",
                    "description": "Whether the action plans are enabled or not. This will allow initializing and signing action plans for self and manager evaluations",
                    "example": true
                  },
                  "employee_score_enabled": {
                    "type": "boolean",
                    "description": "Whether the review process should generate employee scores or not. This will add a mandatory question at the end of \"Self\" and \"Manager\" questionnaires to evaluate the employee's performance and generate the score.",
                    "example": true
                  },
                  "cycle_id": {
                    "type": "string",
                    "description": "Performance cycle ID",
                    "example": "5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/{id}": {
      "get": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Review process",
        "summary": "Reads a single Review process",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Delete an existing review process. This cannot be done if the process has been finished.",
        "summary": "Deletes a Review process",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/duplicate": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Duplicate an existing review process",
        "summary": "Duplicates a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "author_access_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID to duplicate",
                    "example": 1
                  },
                  "author_access_id": {
                    "type": "integer",
                    "description": "Access ID to be set as author of the new review process",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/remind_in_bulk": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Send bulk reminders to the reviewers that haven't answered their evaluations in a review process.",
        "summary": "Remind in bulks a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/reopen": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reopen a finished review process.",
        "summary": "Reopens a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "ends_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "New deadline of the review process",
                    "example": "2024-04-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/start": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Start a review process. This is only allowed if the process is in draft or scheduled.",
        "summary": "Starts a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/stop": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Stop a review process.",
        "summary": "Stops a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/toggle_archive": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Archive or unarchive a review process",
        "summary": "Toggle archives a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/update_agreements_configuration": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Enable or disable the action plan feature of a review process.",
        "summary": "Update agreements configurations a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "enabled"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable action plans in a review process",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/update_basic_info": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the basic information of an existing review process.",
        "summary": "Update basic infos a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "New name of the review process",
                    "example": "Performance Review - Q2 2024"
                  },
                  "description": {
                    "type": "string",
                    "description": "New description of the review process",
                    "example": "The performance review for the first quarter of 2024 has started!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/update_deadline": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the deadline of a review process.",
        "summary": "Update deadlines a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "ends_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "ends_at": {
                    "type": "string",
                    "description": "New deadline of the review process",
                    "example": "2024-04-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/update_reviewer_strategies": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the review types of a review process. This is only allowed while the process is in draft.",
        "summary": "Update reviewer strategies a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "reviewer_strategies"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "reviewer_strategies": {
                    "type": "array",
                    "description": "New review types to be applied",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": [
                      "self",
                      "manager"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/update_schedule": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the starting date of a scheduled review process. This is only allowed if the process is scheduled.",
        "summary": "Update schedules a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "starts_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Date when the review process should start",
                    "example": "2024-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_processes/update_target_strategy": {
      "post": {
        "tags": [
          "Performance > ReviewProcess"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the criteria for calculating the participants of a review process. This is only allowed while the process is in draft.",
        "summary": "Update target strategies a Review process",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "status",
                    "start_validation_errors",
                    "archived",
                    "agreements_configuration",
                    "employee_score_configuration"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "Review process name",
                      "example": "Performance Review - Q1 2024"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the review process",
                      "example": "The performance review for the first quarter of 2024 has started!"
                    },
                    "status": {
                      "type": "string",
                      "description": "Review process status",
                      "enum": [
                        "draft",
                        "scheduled",
                        "active",
                        "finished"
                      ],
                      "example": "draft"
                    },
                    "target_strategy": {
                      "type": "object",
                      "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
                      "example": "all_employees"
                    },
                    "reviewer_strategies": {
                      "type": "array",
                      "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
                      "enum": [
                        "self",
                        "manager",
                        "direct_reports",
                        "peers"
                      ],
                      "example": [
                        "self",
                        "manager"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "starts_at": {
                      "type": "string",
                      "description": "Date when the review process should start",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "ends_at": {
                      "type": "string",
                      "description": "Date when the review process should end",
                      "example": "2024-04-01T00:00:00Z"
                    },
                    "start_validation_errors": {
                      "type": "array",
                      "description": "Missing or invalid information to be able to start the review process",
                      "enum": [
                        "missing_deadline",
                        "invalid_deadline",
                        "missing_title",
                        "missing_target_strategy",
                        "missing_target_strategy_members",
                        "missing_reviewer_strategy",
                        "missing_questions",
                        "missing_potential_reviewers"
                      ],
                      "example": [
                        "invalid_deadline",
                        "missing_questions"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the review process is archived or not"
                    },
                    "agreements_configuration": {
                      "type": "object",
                      "description": "Configuration of the action plans feature"
                    },
                    "employee_score_configuration": {
                      "type": "object"
                    },
                    "last_bulk_reminder": {
                      "type": "string",
                      "description": "Date when the last bulk reminder was sent",
                      "example": "2024-03-01T00:00:00Z"
                    },
                    "cycle_id": {
                      "type": "string",
                      "description": "Performance cycle ID",
                      "example": "5"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "target_strategy": {
                    "type": "string",
                    "description": "Condition that defines the employees that will be evaluated (participants)",
                    "enum": [
                      "all_employees",
                      "by_locations",
                      "by_teams",
                      "manual_selection"
                    ],
                    "example": "all_employees"
                  },
                  "arguments": {
                    "type": "array",
                    "description": "IDs of target strategy groups selected",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_process_estimated_targets": {
      "get": {
        "tags": [
          "Performance > ReviewProcessEstimatedTarget"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Review process estimated targets",
        "summary": "Reads all Review process estimated targets",
        "parameters": [
          {
            "name": "performance_review_process_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "access_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "performance_review_process_id",
                      "access_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "performance_review_process_id": {
                        "type": "integer"
                      },
                      "access_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_process_targets": {
      "get": {
        "tags": [
          "Performance > ReviewProcessTarget"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the participants of active review processes.",
        "summary": "Reads all Review process targets",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process target IDs",
              "example": [
                "1-1",
                "1-2",
                "1-3"
              ],
              "items": {
                "type": "string"
              }
            },
            "description": "Filter by review process target IDs",
            "example": [
              "1-1",
              "1-2",
              "1-3"
            ]
          },
          {
            "name": "access_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by access IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by access IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "only_for_peer_assignment",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Only participants for peer assignment"
            },
            "description": "Only participants for peer assignment"
          },
          {
            "name": "without_manager",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Only participants with no manager assigned"
            },
            "description": "Only participants with no manager assigned"
          },
          {
            "name": "performance_review_process_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by reviewer process IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by reviewer process IDs",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "agreement_completion_status",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Filter by agreement status",
              "enum": [
                "canbeinitiated",
                "haspendingagreement",
                "hassignedagreement"
              ],
              "example": "canbeinitiated"
            },
            "description": "Filter by agreement status",
            "example": "canbeinitiated"
          },
          {
            "name": "pending_peer_evaluations",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Only participants with no peer evaluations"
            },
            "description": "Only participants with no peer evaluations"
          },
          {
            "name": "managed_by_filter",
            "in": "query",
            "schema": {
              "type": "object",
              "description": "Only participants managed by the specified employee ID",
              "example": {
                "manager_employee_id": 1,
                "only_direct_reports": false
              }
            },
            "description": "Only participants managed by the specified employee ID",
            "example": {
              "manager_employee_id": 1,
              "only_direct_reports": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "performance_review_process_id",
                      "materialized_process_target_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Review process target ID",
                        "example": "1-3"
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "Participant access ID",
                        "example": 3
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "materialized_process_target_id": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_process_targets/{id}": {
      "get": {
        "tags": [
          "Performance > ReviewProcessTarget"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the participants of active review processes.",
        "summary": "Reads a single Review process target",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "performance_review_process_id",
                    "materialized_process_target_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Review process target ID",
                      "example": "1-3"
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "Participant access ID",
                      "example": 3
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "materialized_process_target_id": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Performance > ReviewProcessTarget"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Delete a participant from the active review process. This will also remove all previously submitted evaluations about the participant.",
        "summary": "Deletes a Review process target",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "performance_review_process_id",
                    "materialized_process_target_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Review process target ID",
                      "example": "1-3"
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "Participant access ID",
                      "example": 3
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "materialized_process_target_id": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_process_targets/add_peers": {
      "post": {
        "tags": [
          "Performance > ReviewProcessTarget"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Assign peers to evaluate a specific participant.",
        "summary": "Add peers a Review process target",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "performance_review_process_id",
                    "materialized_process_target_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Review process target ID",
                      "example": "1-3"
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "Participant access ID",
                      "example": 3
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "materialized_process_target_id": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "peer_access_ids"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Review process target ID",
                    "example": "1-3"
                  },
                  "peer_access_ids": {
                    "type": "array",
                    "description": "List of access IDs to be added as peers for the participant",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_process_targets/bulk_create": {
      "post": {
        "tags": [
          "Performance > ReviewProcessTarget"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Add multiple participants to the active review process and create the evaluations for them.",
        "summary": "Bulk creates a Review process target",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "performance_review_process_id",
                      "materialized_process_target_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Review process target ID",
                        "example": "1-3"
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "Participant access ID",
                        "example": 3
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "materialized_process_target_id": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "performance_review_process_id",
                  "targets_access_ids"
                ],
                "properties": {
                  "performance_review_process_id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "targets_access_ids": {
                    "type": "array",
                    "description": "List of access IDs to be added as participants",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_process_targets/remove_peer_evaluations": {
      "post": {
        "tags": [
          "Performance > ReviewProcessTarget"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Remove peers and their evaluations from a specific participant.",
        "summary": "Remove peer evaluations a Review process target",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "performance_review_process_id",
                    "materialized_process_target_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Review process target ID",
                      "example": "1-3"
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "Participant access ID",
                      "example": 3
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "materialized_process_target_id": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "evaluation_ids"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "evaluation_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_questionnaire_by_strategies": {
      "get": {
        "tags": [
          "Performance > ReviewQuestionnaireByStrategy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the questionnaires by reviewer strategy for review processes.",
        "summary": "Reads all Review questionnaire by strategies",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by review process IDs",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "performance_review_process_id",
                      "default_rating_scale"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "default_rating_scale": {
                        "type": "array",
                        "description": "Scoring range used in rating questions",
                        "example": [
                          {
                            "value": 1,
                            "text": "Poor"
                          },
                          {
                            "value": 2,
                            "text": "Inconsistent"
                          },
                          {
                            "value": 3,
                            "text": "Meets expectations"
                          },
                          {
                            "value": 4,
                            "text": "Exceeds expectations"
                          },
                          {
                            "value": 5,
                            "text": "Exceptional"
                          }
                        ],
                        "items": {}
                      },
                      "self_questionnaire": {
                        "type": "object",
                        "description": "Questionnaire for self evaluation",
                        "example": {
                          "reviewer_strategy": "self",
                          "content": [
                            {
                              "uuid": "26f26623-043f-4110-a5cb-1fd54a69626f",
                              "type": "question",
                              "questions": [
                                {
                                  "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                  "mandatory": true,
                                  "with_comment": false,
                                  "title": "Do you think you are a team player?",
                                  "answer_type": "single_choice",
                                  "choice_options": [
                                    "Yes",
                                    "No"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "manager_questionnaire": {
                        "type": "object",
                        "description": "Questionnaire for manager evaluation",
                        "example": {
                          "reviewer_strategy": "manager",
                          "content": [
                            {
                              "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                              "type": "section",
                              "section_title": "Performance",
                              "questions": [
                                {
                                  "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                  "mandatory": true,
                                  "with_comment": true,
                                  "title": "How would you rate the commitment of the employee?",
                                  "answer_type": "rating"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "direct_report_questionnaire": {
                        "type": "object",
                        "description": "Questionnaire for direct report evaluation"
                      },
                      "peers_questionnaire": {
                        "type": "object",
                        "description": "Questionnaire for peers evaluation"
                      },
                      "employee_score_self_questionnaire": {
                        "type": "object",
                        "description": "Questionnaire included in the end of self evaluation to evaluate the employee performance"
                      },
                      "employee_score_manager_questionnaire": {
                        "type": "object",
                        "description": "Questionnaire included in the end of manager evaluation to evaluate the employee performance"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_questionnaire_by_strategies/{id}": {
      "get": {
        "tags": [
          "Performance > ReviewQuestionnaireByStrategy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the questionnaires by reviewer strategy for review processes.",
        "summary": "Reads a single Review questionnaire by strategy",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "performance_review_process_id",
                    "default_rating_scale"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "default_rating_scale": {
                      "type": "array",
                      "description": "Scoring range used in rating questions",
                      "example": [
                        {
                          "value": 1,
                          "text": "Poor"
                        },
                        {
                          "value": 2,
                          "text": "Inconsistent"
                        },
                        {
                          "value": 3,
                          "text": "Meets expectations"
                        },
                        {
                          "value": 4,
                          "text": "Exceeds expectations"
                        },
                        {
                          "value": 5,
                          "text": "Exceptional"
                        }
                      ],
                      "items": {}
                    },
                    "self_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for self evaluation",
                      "example": {
                        "reviewer_strategy": "self",
                        "content": [
                          {
                            "uuid": "26f26623-043f-4110-a5cb-1fd54a69626f",
                            "type": "question",
                            "questions": [
                              {
                                "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                "mandatory": true,
                                "with_comment": false,
                                "title": "Do you think you are a team player?",
                                "answer_type": "single_choice",
                                "choice_options": [
                                  "Yes",
                                  "No"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "manager_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for manager evaluation",
                      "example": {
                        "reviewer_strategy": "manager",
                        "content": [
                          {
                            "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                            "type": "section",
                            "section_title": "Performance",
                            "questions": [
                              {
                                "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                "mandatory": true,
                                "with_comment": true,
                                "title": "How would you rate the commitment of the employee?",
                                "answer_type": "rating"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "direct_report_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for direct report evaluation"
                    },
                    "peers_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for peers evaluation"
                    },
                    "employee_score_self_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire included in the end of self evaluation to evaluate the employee performance"
                    },
                    "employee_score_manager_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire included in the end of manager evaluation to evaluate the employee performance"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_questionnaire_by_strategies/update_default_rating_scale": {
      "post": {
        "tags": [
          "Performance > ReviewQuestionnaireByStrategy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the scoring range used in rating questions for all reviewer strategies.",
        "summary": "Update default rating scales a Review questionnaire by strategy",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "performance_review_process_id",
                    "default_rating_scale"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "default_rating_scale": {
                      "type": "array",
                      "description": "Scoring range used in rating questions",
                      "example": [
                        {
                          "value": 1,
                          "text": "Poor"
                        },
                        {
                          "value": 2,
                          "text": "Inconsistent"
                        },
                        {
                          "value": 3,
                          "text": "Meets expectations"
                        },
                        {
                          "value": 4,
                          "text": "Exceeds expectations"
                        },
                        {
                          "value": 5,
                          "text": "Exceptional"
                        }
                      ],
                      "items": {}
                    },
                    "self_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for self evaluation",
                      "example": {
                        "reviewer_strategy": "self",
                        "content": [
                          {
                            "uuid": "26f26623-043f-4110-a5cb-1fd54a69626f",
                            "type": "question",
                            "questions": [
                              {
                                "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                "mandatory": true,
                                "with_comment": false,
                                "title": "Do you think you are a team player?",
                                "answer_type": "single_choice",
                                "choice_options": [
                                  "Yes",
                                  "No"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "manager_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for manager evaluation",
                      "example": {
                        "reviewer_strategy": "manager",
                        "content": [
                          {
                            "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                            "type": "section",
                            "section_title": "Performance",
                            "questions": [
                              {
                                "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                "mandatory": true,
                                "with_comment": true,
                                "title": "How would you rate the commitment of the employee?",
                                "answer_type": "rating"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "direct_report_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for direct report evaluation"
                    },
                    "peers_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for peers evaluation"
                    },
                    "employee_score_self_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire included in the end of self evaluation to evaluate the employee performance"
                    },
                    "employee_score_manager_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire included in the end of manager evaluation to evaluate the employee performance"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "performance_review_process_id",
                  "default_rating_scale"
                ],
                "properties": {
                  "performance_review_process_id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "default_rating_scale": {
                    "type": "array",
                    "description": "###### **What should each range object look like?**\n\n  - `value`: Range value (0 to 10)\n  - `text`: Range description",
                    "example": [
                      {
                        "value": 1,
                        "text": "Poor"
                      },
                      {
                        "value": 2,
                        "text": "Inconsistent"
                      },
                      {
                        "value": 3,
                        "text": "Meets expectations"
                      },
                      {
                        "value": 4,
                        "text": "Exceeds expectations"
                      },
                      {
                        "value": 5,
                        "text": "Exceptional"
                      }
                    ],
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_questionnaire_by_strategies/update_questionnaire_for_strategy": {
      "post": {
        "tags": [
          "Performance > ReviewQuestionnaireByStrategy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the review process questionnaire for a specific reviewer strategy (review type). It can be used to add, edit or delete questions from a draft review process.",
        "summary": "Update questionnaire for strategies a Review questionnaire by strategy",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "performance_review_process_id",
                    "default_rating_scale"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "default_rating_scale": {
                      "type": "array",
                      "description": "Scoring range used in rating questions",
                      "example": [
                        {
                          "value": 1,
                          "text": "Poor"
                        },
                        {
                          "value": 2,
                          "text": "Inconsistent"
                        },
                        {
                          "value": 3,
                          "text": "Meets expectations"
                        },
                        {
                          "value": 4,
                          "text": "Exceeds expectations"
                        },
                        {
                          "value": 5,
                          "text": "Exceptional"
                        }
                      ],
                      "items": {}
                    },
                    "self_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for self evaluation",
                      "example": {
                        "reviewer_strategy": "self",
                        "content": [
                          {
                            "uuid": "26f26623-043f-4110-a5cb-1fd54a69626f",
                            "type": "question",
                            "questions": [
                              {
                                "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                                "mandatory": true,
                                "with_comment": false,
                                "title": "Do you think you are a team player?",
                                "answer_type": "single_choice",
                                "choice_options": [
                                  "Yes",
                                  "No"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "manager_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for manager evaluation",
                      "example": {
                        "reviewer_strategy": "manager",
                        "content": [
                          {
                            "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                            "type": "section",
                            "section_title": "Performance",
                            "questions": [
                              {
                                "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                                "mandatory": true,
                                "with_comment": true,
                                "title": "How would you rate the commitment of the employee?",
                                "answer_type": "rating"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "direct_report_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for direct report evaluation"
                    },
                    "peers_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire for peers evaluation"
                    },
                    "employee_score_self_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire included in the end of self evaluation to evaluate the employee performance"
                    },
                    "employee_score_manager_questionnaire": {
                      "type": "object",
                      "description": "Questionnaire included in the end of manager evaluation to evaluate the employee performance"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "performance_review_process_id",
                  "strategy",
                  "questionnaire_content"
                ],
                "properties": {
                  "performance_review_process_id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "strategy": {
                    "type": "string",
                    "description": "Reviewer strategy to update the questionnaire for",
                    "enum": [
                      "self",
                      "manager",
                      "direct_reports",
                      "peers"
                    ],
                    "example": "manager"
                  },
                  "questionnaire_content": {
                    "type": "array",
                    "description": "List of grouped questions to be evaluated by the reviewer.\n###### **What should each group object look like?**\n\n  - `uuid`: Unique identifier for the group\n  - `type`: Group type (`section` or `question`). If it's `section`, the questions will be grouped under a section with a given title\n  - `section_title`: Title of the section (optional)\n  - `questions`: List of questions\n\n###### **What should each question object look like?**\n\n  - `uuid`: Unique identifier for the question\n  - `mandatory`: Whether the question is mandatory or not\n  - `with_comment`: Whether the reviewer can add a comment or not\n  - `title`: Question\n  - `answer_type`: Answer type (`text`, `rating`, `number` or `multiple_choice`)\n  - `max_choices`: Maximum number of choices. If `1`, it'll be a single choice question\n  - `choice_options`: List of options for single and multiple choice questions",
                    "example": [
                      {
                        "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                        "type": "section",
                        "section_title": "Performance",
                        "questions": [
                          {
                            "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                            "mandatory": true,
                            "with_comment": true,
                            "title": "How would you rate the commitment of the employee?",
                            "answer_type": "rating"
                          },
                          {
                            "uuid": "a922bd33-e9c8-4856-87c6-92eb895f4271",
                            "mandatory": true,
                            "with_comment": false,
                            "title": "What are the strengths of the employee?",
                            "answer_type": "text"
                          }
                        ]
                      },
                      {
                        "uuid": "26f26623-043f-4110-a5cb-1fd54a69626f",
                        "type": "question",
                        "questions": [
                          {
                            "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                            "mandatory": true,
                            "with_comment": false,
                            "title": "Do you think the employee is a team player?",
                            "answer_type": "multiple_choice",
                            "max_choices": 1,
                            "choice_options": [
                              "Yes",
                              "No"
                            ]
                          }
                        ]
                      }
                    ],
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_visibility_settings": {
      "get": {
        "tags": [
          "Performance > ReviewVisibilitySetting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the visibility settings of review processes.",
        "summary": "Reads all Review visibility settings",
        "parameters": [
          {
            "name": "performance_review_process_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Filter by review process IDs",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by review process IDs",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "performance_review_process_id",
                      "restrict_answers_visibility_to_reportees",
                      "early_access_to_answers_for_managers",
                      "anonymous_peer_evaluation_for_target"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "restrict_answers_visibility_to_reportees": {
                        "type": "boolean",
                        "description": "Employees don't have access to their results when enabled"
                      },
                      "early_access_to_answers_for_managers": {
                        "type": "boolean",
                        "description": "Managers can access the results of their reports before deadline when enabled",
                        "example": true
                      },
                      "anonymous_peer_evaluation_for_target": {
                        "type": "boolean",
                        "description": "Peer evaluations are anonymous when enabled, so employees don't know who reviewed them"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/review_visibility_settings/{id}": {
      "put": {
        "tags": [
          "Performance > ReviewVisibilitySetting"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Modifiy the visibility settings of the review process.",
        "summary": "Updates a Review visibility setting",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "performance_review_process_id",
                    "restrict_answers_visibility_to_reportees",
                    "early_access_to_answers_for_managers",
                    "anonymous_peer_evaluation_for_target"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "restrict_answers_visibility_to_reportees": {
                      "type": "boolean",
                      "description": "Employees don't have access to their results when enabled"
                    },
                    "early_access_to_answers_for_managers": {
                      "type": "boolean",
                      "description": "Managers can access the results of their reports before deadline when enabled",
                      "example": true
                    },
                    "anonymous_peer_evaluation_for_target": {
                      "type": "boolean",
                      "description": "Peer evaluations are anonymous when enabled, so employees don't know who reviewed them"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "performance_review_process_id",
                  "restrict_answers_visibility_to_reportees",
                  "early_access_to_answers_for_managers",
                  "anonymous_peer_evaluation_for_target"
                ],
                "properties": {
                  "performance_review_process_id": {
                    "type": "integer",
                    "description": "Review process ID",
                    "example": 1
                  },
                  "restrict_answers_visibility_to_reportees": {
                    "type": "boolean",
                    "description": "When enabled, employees don't have access to their results"
                  },
                  "early_access_to_answers_for_managers": {
                    "type": "boolean",
                    "description": "When enabled, managers can access the results of their reports before deadline",
                    "example": true
                  },
                  "anonymous_peer_evaluation_for_target": {
                    "type": "boolean",
                    "description": "When enabled, peer evaluations are anonymous so employees don't know who reviewed them"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/target_managers": {
      "get": {
        "tags": [
          "Performance > TargetManager"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the participants' managers of a review process.",
        "summary": "Reads all Target managers",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "performance_review_process_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Review process ID (only one ID is allowed)",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Review process ID (only one ID is allowed)",
            "example": [
              1
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "performance_review_process_id",
                      "manager_access_id",
                      "manager_full_name"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Manager employee ID",
                        "example": 1
                      },
                      "performance_review_process_id": {
                        "type": "integer",
                        "description": "Review process ID",
                        "example": 1
                      },
                      "manager_access_id": {
                        "type": "integer",
                        "description": "Manager access ID",
                        "example": 3
                      },
                      "manager_full_name": {
                        "type": "string",
                        "description": "Manager full name",
                        "example": "John Doe"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/performance/target_managers/{id}": {
      "get": {
        "tags": [
          "Performance > TargetManager"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves the participants' managers of a review process.",
        "summary": "Reads a single Target manager",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "performance_review_process_id",
                    "manager_access_id",
                    "manager_full_name"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Manager employee ID",
                      "example": 1
                    },
                    "performance_review_process_id": {
                      "type": "integer",
                      "description": "Review process ID",
                      "example": 1
                    },
                    "manager_access_id": {
                      "type": "integer",
                      "description": "Manager access ID",
                      "example": 3
                    },
                    "manager_full_name": {
                      "type": "string",
                      "description": "Manager full name",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/posts/comments": {
      "get": {
        "tags": [
          "Posts > Comment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Comments",
        "summary": "Reads all Comments",
        "parameters": [
          {
            "name": "post_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "identifiers of the post",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "identifiers of the post",
            "example": [
              1,
              2,
              3
            ],
            "required": true
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "identifiers of the comment",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "identifiers of the comment",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "post_id",
                      "author_id",
                      "text",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier of the comment",
                        "example": 1
                      },
                      "post_id": {
                        "type": "integer",
                        "description": "identifier of the post",
                        "example": 1
                      },
                      "author_id": {
                        "type": "integer",
                        "description": "author identifier refers to the employee access, you can get the employee from the employee endpoint",
                        "example": 1
                      },
                      "text": {
                        "type": "string",
                        "description": "text of the comment",
                        "example": "How is the week going Ana?"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "date of the comment",
                        "example": "2024-07-17T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Posts > Comment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Comment",
        "summary": "Creates a Comment",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "post_id",
                    "author_id",
                    "text",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the comment",
                      "example": 1
                    },
                    "post_id": {
                      "type": "integer",
                      "description": "identifier of the post",
                      "example": 1
                    },
                    "author_id": {
                      "type": "integer",
                      "description": "author identifier refers to the employee access, you can get the employee from the employee endpoint",
                      "example": 1
                    },
                    "text": {
                      "type": "string",
                      "description": "text of the comment",
                      "example": "How is the week going Ana?"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date of the comment",
                      "example": "2024-07-17T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "post_id",
                  "text"
                ],
                "properties": {
                  "post_id": {
                    "type": "integer",
                    "description": "identifier of the post",
                    "example": 1
                  },
                  "text": {
                    "type": "string",
                    "description": "Text of the comment",
                    "example": "How is the week going Ana?"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/posts/comments/{id}": {
      "get": {
        "tags": [
          "Posts > Comment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Comment",
        "summary": "Reads a single Comment",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "post_id",
                    "author_id",
                    "text",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the comment",
                      "example": 1
                    },
                    "post_id": {
                      "type": "integer",
                      "description": "identifier of the post",
                      "example": 1
                    },
                    "author_id": {
                      "type": "integer",
                      "description": "author identifier refers to the employee access, you can get the employee from the employee endpoint",
                      "example": 1
                    },
                    "text": {
                      "type": "string",
                      "description": "text of the comment",
                      "example": "How is the week going Ana?"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date of the comment",
                      "example": "2024-07-17T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Posts > Comment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Comment",
        "summary": "Updates a Comment",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "post_id",
                    "author_id",
                    "text",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the comment",
                      "example": 1
                    },
                    "post_id": {
                      "type": "integer",
                      "description": "identifier of the post",
                      "example": 1
                    },
                    "author_id": {
                      "type": "integer",
                      "description": "author identifier refers to the employee access, you can get the employee from the employee endpoint",
                      "example": 1
                    },
                    "text": {
                      "type": "string",
                      "description": "text of the comment",
                      "example": "How is the week going Ana?"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date of the comment",
                      "example": "2024-07-17T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "post_id",
                  "text"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the comment",
                    "example": 1
                  },
                  "post_id": {
                    "type": "integer",
                    "description": "identifier of the post",
                    "example": 1
                  },
                  "text": {
                    "type": "string",
                    "description": "Text of the comment",
                    "example": "How is the week going Ana?"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts > Comment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Comment",
        "summary": "Deletes a Comment",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "post_id",
                    "author_id",
                    "text",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the comment",
                      "example": 1
                    },
                    "post_id": {
                      "type": "integer",
                      "description": "identifier of the post",
                      "example": 1
                    },
                    "author_id": {
                      "type": "integer",
                      "description": "author identifier refers to the employee access, you can get the employee from the employee endpoint",
                      "example": 1
                    },
                    "text": {
                      "type": "string",
                      "description": "text of the comment",
                      "example": "How is the week going Ana?"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date of the comment",
                      "example": "2024-07-17T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/posts/groups": {
      "get": {
        "tags": [
          "Posts > Group"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "> ###### **What does it do?**\n> These endpoints will allow you to retrieve groups\n> ###### **What can you do with groups?**\n> Increase visibility and communication within the company by creating events and announcements. You can create groups for different departments, teams, or projects.\n> ###### **Who can use it?**\n> For having this funcionality available, you need to have Communities V2 feature enabled.",
        "summary": "Reads all Groups",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "identifier of the group.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "identifier of the group.",
            "example": [
              1,
              2,
              3
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "title"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier of the group.",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "description": "title of the group.",
                        "example": "Company announcements"
                      },
                      "description": {
                        "type": "string",
                        "description": "description of the group.",
                        "example": "The place to find all company announcements."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Posts > Group"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Group",
        "summary": "Creates a Group",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "title"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the group.",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the group.",
                      "example": "Company announcements"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the group.",
                      "example": "The place to find all company announcements."
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "company_id"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "title of the group.",
                    "example": "Company announcements"
                  },
                  "description": {
                    "type": "string",
                    "description": "description of the group.",
                    "example": "The place to find all company announcements."
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier of the company, this value can be retrieved from core/me endpoint",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/posts/groups/{id}": {
      "get": {
        "tags": [
          "Posts > Group"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "> ###### **What does it do?**\n> These endpoints will allow you to retrieve groups\n> ###### **What can you do with groups?**\n> Increase visibility and communication within the company by creating events and announcements. You can create groups for different departments, teams, or projects.\n> ###### **Who can use it?**\n> For having this funcionality available, you need to have Communities V2 feature enabled.",
        "summary": "Reads a single Group",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "title"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the group.",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the group.",
                      "example": "Company announcements"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the group.",
                      "example": "The place to find all company announcements."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Posts > Group"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Group",
        "summary": "Updates a Group",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "title"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the group.",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the group.",
                      "example": "Company announcements"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the group.",
                      "example": "The place to find all company announcements."
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the group.",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "description": "title of the group.",
                    "example": "Company announcements"
                  },
                  "description": {
                    "type": "string",
                    "description": "description of the group.",
                    "example": "The place to find all company announcements."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts > Group"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Group",
        "summary": "Deletes a Group",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "title"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the group.",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the group.",
                      "example": "Company announcements"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the group.",
                      "example": "The place to find all company announcements."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/posts/groups/archive": {
      "post": {
        "tags": [
          "Posts > Group"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Archives a group but keeps the data.",
        "summary": "Archives a Group",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "title"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the group.",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the group.",
                      "example": "Company announcements"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the group.",
                      "example": "The place to find all company announcements."
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the group.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/posts/posts": {
      "get": {
        "tags": [
          "Posts > Post"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThese endpoints allow you to retrieve posts of a community\n###### **What can you do with groups?**\nIncrease visibility and communication within the company by creating interaction and community within your company.\n###### **Who can use it?**\nFor having this funcionality available, you need to have Communities V2 feature available",
        "summary": "Reads all Posts",
        "parameters": [
          {
            "name": "groups[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "group identifiers of the posts",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "group identifiers of the posts",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "date from which posts will be retrieved",
              "example": "2024-05-02"
            },
            "description": "date from which posts will be retrieved",
            "example": "2024-05-02"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "date until which the posts will be retrieved",
              "example": "2024-08-01"
            },
            "description": "date until which the posts will be retrieved",
            "example": "2024-08-01"
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "identifiers of the post",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "identifiers of the post",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "allow_comments_and_reactions",
                      "published_at",
                      "created_at",
                      "updated_at",
                      "visits_count",
                      "comments_count"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifiers of the post",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "description": "title of the post",
                        "example": "Are you ready for the perfomance review?"
                      },
                      "description": {
                        "type": "string",
                        "description": "description of the post",
                        "example": "As you know today we start the performance review process."
                      },
                      "allow_comments_and_reactions": {
                        "type": "boolean",
                        "description": "allow comments and reactions on the post",
                        "example": true
                      },
                      "published_at": {
                        "type": "string",
                        "description": "date when the post has been published",
                        "example": "2024-07-17T00:00:00Z"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "date when the post has been created",
                        "example": "2024-07-17T00:00:00Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "date when the post has been updated",
                        "example": "2024-07-17T00:00:00Z"
                      },
                      "visits_count": {
                        "type": "integer",
                        "description": "number of visits of the post",
                        "example": 10
                      },
                      "cover_image_url": {
                        "type": "string",
                        "description": "url of the cover image",
                        "example": "https://example.com/image.jpg"
                      },
                      "posts_group_id": {
                        "type": "integer",
                        "description": "group identifier of the post, references to posts/groups endpoint",
                        "example": 1
                      },
                      "comments_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Posts > Post"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Post",
        "summary": "Creates a Post",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allow_comments_and_reactions",
                    "published_at",
                    "created_at",
                    "updated_at",
                    "visits_count",
                    "comments_count"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifiers of the post",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the post",
                      "example": "Are you ready for the perfomance review?"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the post",
                      "example": "As you know today we start the performance review process."
                    },
                    "allow_comments_and_reactions": {
                      "type": "boolean",
                      "description": "allow comments and reactions on the post",
                      "example": true
                    },
                    "published_at": {
                      "type": "string",
                      "description": "date when the post has been published",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date when the post has been created",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date when the post has been updated",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "visits_count": {
                      "type": "integer",
                      "description": "number of visits of the post",
                      "example": 10
                    },
                    "cover_image_url": {
                      "type": "string",
                      "description": "url of the cover image",
                      "example": "https://example.com/image.jpg"
                    },
                    "posts_group_id": {
                      "type": "integer",
                      "description": "group identifier of the post, references to posts/groups endpoint",
                      "example": 1
                    },
                    "comments_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "post_group_id"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "title of the post",
                    "example": "Are you ready for the perfomance review?"
                  },
                  "description": {
                    "type": "string",
                    "description": "description of the post",
                    "example": "As you know today we start the performance review process."
                  },
                  "post_group_id": {
                    "type": "integer",
                    "description": "group identifier of the post, references to posts/groups endpoint",
                    "example": 1
                  },
                  "allow_comments_and_reactions": {
                    "type": "boolean",
                    "description": "allow comments and reactions on the post",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/posts/posts/{id}": {
      "get": {
        "tags": [
          "Posts > Post"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThese endpoints allow you to retrieve posts of a community\n###### **What can you do with groups?**\nIncrease visibility and communication within the company by creating interaction and community within your company.\n###### **Who can use it?**\nFor having this funcionality available, you need to have Communities V2 feature available",
        "summary": "Reads a single Post",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allow_comments_and_reactions",
                    "published_at",
                    "created_at",
                    "updated_at",
                    "visits_count",
                    "comments_count"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifiers of the post",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the post",
                      "example": "Are you ready for the perfomance review?"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the post",
                      "example": "As you know today we start the performance review process."
                    },
                    "allow_comments_and_reactions": {
                      "type": "boolean",
                      "description": "allow comments and reactions on the post",
                      "example": true
                    },
                    "published_at": {
                      "type": "string",
                      "description": "date when the post has been published",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date when the post has been created",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date when the post has been updated",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "visits_count": {
                      "type": "integer",
                      "description": "number of visits of the post",
                      "example": 10
                    },
                    "cover_image_url": {
                      "type": "string",
                      "description": "url of the cover image",
                      "example": "https://example.com/image.jpg"
                    },
                    "posts_group_id": {
                      "type": "integer",
                      "description": "group identifier of the post, references to posts/groups endpoint",
                      "example": 1
                    },
                    "comments_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Posts > Post"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Post",
        "summary": "Updates a Post",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allow_comments_and_reactions",
                    "published_at",
                    "created_at",
                    "updated_at",
                    "visits_count",
                    "comments_count"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifiers of the post",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the post",
                      "example": "Are you ready for the perfomance review?"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the post",
                      "example": "As you know today we start the performance review process."
                    },
                    "allow_comments_and_reactions": {
                      "type": "boolean",
                      "description": "allow comments and reactions on the post",
                      "example": true
                    },
                    "published_at": {
                      "type": "string",
                      "description": "date when the post has been published",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date when the post has been created",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date when the post has been updated",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "visits_count": {
                      "type": "integer",
                      "description": "number of visits of the post",
                      "example": 10
                    },
                    "cover_image_url": {
                      "type": "string",
                      "description": "url of the cover image",
                      "example": "https://example.com/image.jpg"
                    },
                    "posts_group_id": {
                      "type": "integer",
                      "description": "group identifier of the post, references to posts/groups endpoint",
                      "example": 1
                    },
                    "comments_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier of the post",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "description": "title of the post",
                    "example": "Are you ready for the perfomance review?"
                  },
                  "description": {
                    "type": "string",
                    "description": "description of the post",
                    "example": "As you know today we start the performance review process."
                  },
                  "post_group_id": {
                    "type": "integer",
                    "description": "group identifier of the post, references to posts/groups endpoint",
                    "example": 1
                  },
                  "allow_comments_and_reactions": {
                    "type": "boolean",
                    "description": "allow comments and reactions on the post",
                    "example": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts > Post"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Post",
        "summary": "Deletes a Post",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allow_comments_and_reactions",
                    "published_at",
                    "created_at",
                    "updated_at",
                    "visits_count",
                    "comments_count"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifiers of the post",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "description": "title of the post",
                      "example": "Are you ready for the perfomance review?"
                    },
                    "description": {
                      "type": "string",
                      "description": "description of the post",
                      "example": "As you know today we start the performance review process."
                    },
                    "allow_comments_and_reactions": {
                      "type": "boolean",
                      "description": "allow comments and reactions on the post",
                      "example": true
                    },
                    "published_at": {
                      "type": "string",
                      "description": "date when the post has been published",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "date when the post has been created",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "date when the post has been updated",
                      "example": "2024-07-17T00:00:00Z"
                    },
                    "visits_count": {
                      "type": "integer",
                      "description": "number of visits of the post",
                      "example": 10
                    },
                    "cover_image_url": {
                      "type": "string",
                      "description": "url of the cover image",
                      "example": "https://example.com/image.jpg"
                    },
                    "posts_group_id": {
                      "type": "integer",
                      "description": "group identifier of the post, references to posts/groups endpoint",
                      "example": 1
                    },
                    "comments_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/expense_records": {
      "get": {
        "tags": [
          "ProjectManagement > ExpenseRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint reads and retrieves a list of expense records. You can utilize URL parameters to filter the results.\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the expenses records that matches the `ids` passed in the request.\n  - `project_ids`: Retrieve only the expenses records related to any `project_ids` passed in the request.\n  - `subproject_ids`: retrieve only the expenses records related with any `subproject_ids` passed in the request.\n  - `expense_ids`: retrieve only the expenses records related with any `expense_ids` passed in the request.\n  - `start_date` and `end_date`: this parameter is needed to filter expenses records created in a particular time range.\n  - `updated_after`: this parameter is needed to filter expense records updated after the given date.\n\n###### **Is it related to other entities?**\nA `expense_record` is related to a `project_worker` and a `expense`. Optionally, it can be related to a `subproject`.\n###### **Who can use it?**\nOnly companies who have enabled `projects_management` feature, `expenses` bundle and users with the permission to read `expense_record`.",
        "summary": "Reads all Expense records",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expense_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "project_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "subproject_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employee_user_name_like",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_worker_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_worker_id",
                      "expense_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_worker_id": {
                        "type": "integer"
                      },
                      "expense_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      },
                      "original_amount_currency": {
                        "type": "string"
                      },
                      "original_amount_cents": {
                        "type": "integer"
                      },
                      "legal_entity_amount_currency": {
                        "type": "string"
                      },
                      "legal_entity_amount_cents": {
                        "type": "string"
                      },
                      "effective_on": {
                        "type": "string"
                      },
                      "exchange_rate": {
                        "type": "number"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/expense_records/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > ExpenseRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint reads and retrieves a list of expense records. You can utilize URL parameters to filter the results.\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the expenses records that matches the `ids` passed in the request.\n  - `project_ids`: Retrieve only the expenses records related to any `project_ids` passed in the request.\n  - `subproject_ids`: retrieve only the expenses records related with any `subproject_ids` passed in the request.\n  - `expense_ids`: retrieve only the expenses records related with any `expense_ids` passed in the request.\n  - `start_date` and `end_date`: this parameter is needed to filter expenses records created in a particular time range.\n  - `updated_after`: this parameter is needed to filter expense records updated after the given date.\n\n###### **Is it related to other entities?**\nA `expense_record` is related to a `project_worker` and a `expense`. Optionally, it can be related to a `subproject`.\n###### **Who can use it?**\nOnly companies who have enabled `projects_management` feature, `expenses` bundle and users with the permission to read `expense_record`.",
        "summary": "Reads a single Expense record",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_worker_id",
                    "expense_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "expense_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    },
                    "original_amount_currency": {
                      "type": "string"
                    },
                    "original_amount_cents": {
                      "type": "integer"
                    },
                    "legal_entity_amount_currency": {
                      "type": "string"
                    },
                    "legal_entity_amount_cents": {
                      "type": "string"
                    },
                    "effective_on": {
                      "type": "string"
                    },
                    "exchange_rate": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/exportable_expenses": {
      "get": {
        "tags": [
          "ProjectManagement > ExportableExpense"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\n\n  This will generate an export of the type **\"Project's expenses\"**. You will have to pass the start and end date to determine the range for which htis information will be exported; as well as the projects ids to get the information of specifically given projects.\n\n###### **What params does it accept?**\n  - `start_date`: It's mandatory to pass this data, being start date to delimit the range of information exported.\n  - `end_date`: It's mandatory to pass this data, corresponding to an end date for the date range of data to be exported.\n  - `project_ids`: Mandatory data to pass to the export, specifying the projects to be exported from.\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Reads all Exportable expenses",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "project_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "employee_name"
                    ],
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "project_name": {
                        "type": "string"
                      },
                      "subproject_name": {
                        "type": "string"
                      },
                      "employee_name": {
                        "type": "string"
                      },
                      "preferred_name": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "expense_category": {
                        "type": "string"
                      },
                      "expense_subcategory": {
                        "type": "string"
                      },
                      "expense_status": {
                        "type": "string"
                      },
                      "expense_link": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/exportable_projects": {
      "get": {
        "tags": [
          "ProjectManagement > ExportableProject"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\n\n  This generates the exports type **\"Project's total time tracked\"** or the **\"Project's total time tracked by date\"** depending on the params passed in the request. You can can select which projects' info to export or to export all the projects, also you will be able to select in which `time_format` you want to present the minutes worked on projects. Take into account that It's mandatory to pass `start_date` and `end_date` to defined a date range from which the information will be exported.\n\n###### **What params does it accept?**\n  - `start_date`: is mandatory to pass a start date to generate export.\n  - `end_date`: is mandatory to pass an end date to generate export.\n  - `project_ids`: optional. It will generate an export only with the info of the projects required.\n  - `time_format`: optional, we can pass the format of time the export will be showing. The values accepted have to be:\n    - `'minutes'`: The export will be generated in `CSV`, and the hours will be render in **minutes**. Example: **10.5667** (mm).\n    - `'hours and minutes'`: The export will be generated in `Excel`, and the hours will be render **hours with decimals**. Example: **14:35:00** (hh:mm:ss).\n    - `'hours'`: The export will be generated in `Excel`, and the hours will be render in **hours with decimals**. Example: **8.17**\n  - `include_date`: optional.\n    - If `true`: Will be equal to choose: **Project's total time tracked by date** export type in the UI. Which means that the information exported will include every date which is contained in the date range passed in the request.\n    - If `false`: Will be equal to choose: **Project's total time tracked** export type in the UI.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Reads all Exportable projects",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "project_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "time_format",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_date",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_name",
                      "project_status",
                      "inputed_time"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "project_name": {
                        "type": "string"
                      },
                      "project_code": {
                        "type": "string"
                      },
                      "project_start_date": {
                        "type": "string"
                      },
                      "project_due_date": {
                        "type": "string"
                      },
                      "project_status": {
                        "type": "string"
                      },
                      "subproject_name": {
                        "type": "string"
                      },
                      "employee_name": {
                        "type": "string"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "inputed_time": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/flexible_time_records": {
      "get": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to retrieve a list of `flexible time records`. To fetch *flexible time record comments*, you have to use this [endpoint](https://apidoc.factorialhr.com/v2.0/reference/get_api-v2-resources-project-management-flexible-time-record-comments) and pass the `flexible_time_record_id` as a param.\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the `flexible time records` that matches the `ids` passed in the request.\n  - `project_worker_ids`: retrieve only the `flexible time records` assigned to any `project_worker` specified in the request.\n  - `starts_on`: filter `flexible time records` that started **later** the given param.\n  - `ends_on`: filter `flexible time records` that started **before** the given param.\n  - `updated_after`: this parameter is needed to filter flexible time records created or updated after a date.\n\n###### **Is it related to other entities?**\nA `flexible time record` is always related to a `project worker` and can optionally be related to a `subproject`.\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature and users with the permission to read flexible time records.",
        "summary": "Reads all Flexible time records",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true
          },
          {
            "name": "project_worker_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true
          },
          {
            "name": "starts_on",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ends_on",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "date",
                      "imputed_minutes",
                      "project_worker_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "date": {
                        "type": "string"
                      },
                      "imputed_minutes": {
                        "type": "integer"
                      },
                      "project_worker_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint allows the creation of a new `flexible time record` with the given params. A flexible time record is used to impute time to a project, without having an strict relation with an attendance's shift. For a successful creation; the given `project` must be `active` and the given `project worker` must be `assigned`.\n###### **What params does it accept?**\n\n  - `project_worker_id`: the `project worker` that will be related to the `flexible time record`.\n  - `date`: the date that occured the `flexible time record`.\n  - `imputed minutes`: the amount of time that has to be imputed, in minutes.\n  - `subproject_id`: optionally, the id of the `subproject` worked on.\n\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature and users with the permission to create flexible time records.",
        "summary": "Creates a Flexible time record",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "date",
                    "imputed_minutes",
                    "project_worker_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string"
                    },
                    "imputed_minutes": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "project_worker_id",
                  "date",
                  "imputed_minutes"
                ],
                "properties": {
                  "project_worker_id": {
                    "type": "integer"
                  },
                  "date": {
                    "type": "string"
                  },
                  "imputed_minutes": {
                    "type": "integer"
                  },
                  "subproject_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/flexible_time_records/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to retrieve a list of `flexible time records`. To fetch *flexible time record comments*, you have to use this [endpoint](https://apidoc.factorialhr.com/v2.0/reference/get_api-v2-resources-project-management-flexible-time-record-comments) and pass the `flexible_time_record_id` as a param.\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the `flexible time records` that matches the `ids` passed in the request.\n  - `project_worker_ids`: retrieve only the `flexible time records` assigned to any `project_worker` specified in the request.\n  - `starts_on`: filter `flexible time records` that started **later** the given param.\n  - `ends_on`: filter `flexible time records` that started **before** the given param.\n  - `updated_after`: this parameter is needed to filter flexible time records created or updated after a date.\n\n###### **Is it related to other entities?**\nA `flexible time record` is always related to a `project worker` and can optionally be related to a `subproject`.\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature and users with the permission to read flexible time records.",
        "summary": "Reads a single Flexible time record",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "date",
                    "imputed_minutes",
                    "project_worker_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string"
                    },
                    "imputed_minutes": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint is used to update the amount of time that has been imputed for the `flexible time record`.\n###### **What params does it accept?**\n\n  - `imputed minutes`: the new amount of time that has to be imputed, in minutes.\n\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature and users with the permission to update flexible time records.",
        "summary": "Updates a Flexible time record",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "date",
                    "imputed_minutes",
                    "project_worker_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string"
                    },
                    "imputed_minutes": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "imputed_minutes"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "imputed_minutes": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint is used to delete a `flexible time record`.\n###### **What params does it accept?**\n\n  - `id`: the id of the `flexible time record` willing to be deleted.\n\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature and users with the permission to delete flexible time records.",
        "summary": "Deletes a Flexible time record",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "date",
                    "imputed_minutes",
                    "project_worker_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string"
                    },
                    "imputed_minutes": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/flexible_time_record_comments": {
      "get": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecordComment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to read a 'flexible time record comment'\n###### **What params does it accept?**\n\n  - 'flexible_time_record_id':  the `flexible time record` to which the comment to be read is associated. Must be an integer.\n  - 'ids': the comment id to be fetched. Has to be an array of integers.\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature.",
        "summary": "Reads all Flexible time record comments",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "flexible_time_record_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "content",
                      "flexible_time_record_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "content": {
                        "type": "string"
                      },
                      "flexible_time_record_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecordComment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to create a comment for an already existing `flexible time record`. In order to retrieve the comment, you can use the `read` endpoint for `flexible time records`.\n###### **What params does it accept?**\n\n  - `content`: the content itself for the comment to be created.\n  - `flexible_time_record_id`: the `flexible time record` to which the comment should be associated.\n\n###### **Is it related to other entities?**\nA `flexible time record comment` is always related to a `flexible time record`.\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature.",
        "summary": "Creates a Flexible time record comment",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "content",
                    "flexible_time_record_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "content": {
                      "type": "string"
                    },
                    "flexible_time_record_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content",
                  "flexible_time_record_id"
                ],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "flexible_time_record_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/flexible_time_record_comments/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecordComment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to read a 'flexible time record comment'\n###### **What params does it accept?**\n\n  - 'flexible_time_record_id':  the `flexible time record` to which the comment to be read is associated. Must be an integer.\n  - 'ids': the comment id to be fetched. Has to be an array of integers.\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature.",
        "summary": "Reads a single Flexible time record comment",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "content",
                    "flexible_time_record_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "content": {
                      "type": "string"
                    },
                    "flexible_time_record_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/flexible_time_record_comments/delete_by_flexible_time_record": {
      "post": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecordComment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to delete a `flexible time record comment`.\n###### **What params does it accept?**\n\n  - `flexible_time_record_id`: the `flexible time record` to which the comment to be deleted is associated.\n\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature.",
        "summary": "Delete by flexible time records a Flexible time record comment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "content",
                    "flexible_time_record_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "content": {
                      "type": "string"
                    },
                    "flexible_time_record_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "flexible_time_record_id"
                ],
                "properties": {
                  "flexible_time_record_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/flexible_time_record_comments/update_by_flexible_time_record": {
      "post": {
        "tags": [
          "ProjectManagement > FlexibleTimeRecordComment"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to update the content for a `flexible time record comment`.\n###### **What params does it accept?**\n\n  - `content`: the new content for the comment.\n  - `flexible_time_record_id`: the `flexible time record` to which the comment to be updated is associated.\n\n###### **Who can use it?**\nOnly companies who have enabled `projects_flexible_tracking` feature.",
        "summary": "Update by flexible time records a Flexible time record comment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "content",
                    "flexible_time_record_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "content": {
                      "type": "string"
                    },
                    "flexible_time_record_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "flexible_time_record_id",
                  "content"
                ],
                "properties": {
                  "flexible_time_record_id": {
                    "type": "integer"
                  },
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/projects": {
      "get": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?** This reads the data of projects, and retrieves the information based on the permissions:\n\n  - If the user has the `team_leader` permission, he will only be able to read the projects that he is the team leader.\n  - If the user has the `reportees` permission, he will only be able to read the projects that he is the team leader or the projects that he is a team member.\n  - If the user has `everyone` permission, he will be able to read all projects.\n  - If the user has the `owned` permission, he will only be able to read the projects that he is the assigned.\n\n###### **Is it related to other entities?** A project is always related to a company, so you can use the query params to list only the projects that are related to a specific company. ###### **Who can use it?** Only companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Reads all Projects",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Retrieve only the projects that matches the ids provided in the request.",
              "example": [
                314159,
                271828
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Retrieve only the projects that matches the ids provided in the request.",
            "example": [
              314159,
              271828
            ]
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name_or_code",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Retrieve only the projects that match the name or coded passed in the request.",
              "example": "Project Name"
            },
            "description": "Retrieve only the projects that match the name or coded passed in the request.",
            "example": "Project Name"
          },
          {
            "name": "include_inputed_minutes",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "If true we will perform the minutes calculations and will be return the total inputed_minutes. If false, 0 will be returned and no minutes calculations will be performed.",
              "example": true
            },
            "description": "If true we will perform the minutes calculations and will be return the total inputed_minutes. If false, 0 will be returned and no minutes calculations will be performed.",
            "example": true,
            "required": true
          },
          {
            "name": "updated_after",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Retrieve only the projects that were created or updated after the date provided in the request.",
              "example": "1993-08-23"
            },
            "description": "Retrieve only the projects that were created or updated after the date provided in the request.",
            "example": "1993-08-23"
          },
          {
            "name": "legal_entity_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Retrieve only the projects that are related to the legal entity passed in the request.",
              "example": 314159
            },
            "description": "Retrieve only the projects that are related to the legal entity passed in the request.",
            "example": 314159
          },
          {
            "name": "client_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Retrieve only the projects that are related to the client passed in the request.",
              "example": [
                314159,
                271828
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Retrieve only the projects that are related to the client passed in the request.",
            "example": [
              314159,
              271828
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "status",
                      "employees_assignment",
                      "is_billable",
                      "legal_entity_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "start_date": {
                        "type": "string"
                      },
                      "due_date": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "active",
                          "closed",
                          "processing"
                        ]
                      },
                      "employees_assignment": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "company"
                        ]
                      },
                      "inputed_minutes": {
                        "type": "integer"
                      },
                      "is_billable": {
                        "type": "boolean"
                      },
                      "fixed_cost_cents": {
                        "type": "integer"
                      },
                      "labor_cost_cents": {
                        "type": "integer"
                      },
                      "legal_entity_id": {
                        "type": "integer"
                      },
                      "spending_cost_cents": {
                        "type": "integer"
                      },
                      "client_id": {
                        "type": "integer",
                        "description": "The client id of the project",
                        "example": 123
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis creates a new project. By default, the project will be created with the status `active`.\n###### **What body params do you need?**\n\n  - `name`: is mandatory to pass a name of the project.\n  - `code`: optional unique code for the project to be identifiable and searchable.\n  - `start_date`: optional start date for the project. If given must be in iso-8601 format (YYYY-MM-DD).\n  - `due_date`: optional due date for the project. If given must be in iso-8601 format (YYYY-MM-DD).\n  - `status`: a project can have the status `active` or `closed`. By default, the project will be created with the status `active`.\n  - `employees_assignment`: optional param to define the kind of assignation the project has. Its possible values are: [`manual`, `company`]. A project can have `manual` assignation or can be defined to be assigned to the whole `company`. Defaults to `manual`.\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of create projects.",
        "summary": "Creates a Project",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "employees_assignment",
                    "is_billable",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "closed",
                        "processing"
                      ]
                    },
                    "employees_assignment": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "company"
                      ]
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "is_billable": {
                      "type": "boolean"
                    },
                    "fixed_cost_cents": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "client_id": {
                      "type": "integer",
                      "description": "The client id of the project",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "due_date": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "employees_assignment": {
                    "type": "string"
                  },
                  "project_admins": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "project_managers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "is_billable": {
                    "type": "boolean"
                  },
                  "fixed_cost_cents": {
                    "type": "integer"
                  },
                  "budget_allocation": {
                    "type": "integer"
                  },
                  "legal_entity_id": {
                    "type": "integer"
                  },
                  "budget_allocation_cents": {
                    "type": "integer"
                  },
                  "fee_amount_cents": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/projects/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?** This reads the data of projects, and retrieves the information based on the permissions:\n\n  - If the user has the `team_leader` permission, he will only be able to read the projects that he is the team leader.\n  - If the user has the `reportees` permission, he will only be able to read the projects that he is the team leader or the projects that he is a team member.\n  - If the user has `everyone` permission, he will be able to read all projects.\n  - If the user has the `owned` permission, he will only be able to read the projects that he is the assigned.\n\n###### **Is it related to other entities?** A project is always related to a company, so you can use the query params to list only the projects that are related to a specific company. ###### **Who can use it?** Only companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Reads a single Project",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "employees_assignment",
                    "is_billable",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "closed",
                        "processing"
                      ]
                    },
                    "employees_assignment": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "company"
                      ]
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "is_billable": {
                      "type": "boolean"
                    },
                    "fixed_cost_cents": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "client_id": {
                      "type": "integer",
                      "description": "The client id of the project",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis updates a project with the given params.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with a role in the project.",
        "summary": "Updates a Project",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "employees_assignment",
                    "is_billable",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "closed",
                        "processing"
                      ]
                    },
                    "employees_assignment": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "company"
                      ]
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "is_billable": {
                      "type": "boolean"
                    },
                    "fixed_cost_cents": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "client_id": {
                      "type": "integer",
                      "description": "The client id of the project",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "due_date": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/projects/activate": {
      "post": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to set a project as `Active`.\n###### **What body params do you need?**\n  - `id`: mandatory. The id of the project aimed to be activated.\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with a role in the project.",
        "summary": "Activates a Project",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "employees_assignment",
                    "is_billable",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "closed",
                        "processing"
                      ]
                    },
                    "employees_assignment": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "company"
                      ]
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "is_billable": {
                      "type": "boolean"
                    },
                    "fixed_cost_cents": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "client_id": {
                      "type": "integer",
                      "description": "The client id of the project",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/projects/change_assignment": {
      "post": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?** **DEPRECATED**; this endpoint will be removed soon.\nThis changes assignment type to a project.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of assign employees.",
        "summary": "Change assignments a Project",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "employees_assignment",
                    "is_billable",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "closed",
                        "processing"
                      ]
                    },
                    "employees_assignment": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "company"
                      ]
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "is_billable": {
                      "type": "boolean"
                    },
                    "fixed_cost_cents": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "client_id": {
                      "type": "integer",
                      "description": "The client id of the project",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "employees_assignment"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "employees_assignment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/projects/close": {
      "post": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint can be used to set a project as `Closed`.\n###### **What body params do you need?**\n  - `id`: mandatory. The id of the project aimed to be closed.\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with a role in the project.",
        "summary": "Closes a Project",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "employees_assignment",
                    "is_billable",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "closed",
                        "processing"
                      ]
                    },
                    "employees_assignment": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "company"
                      ]
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "is_billable": {
                      "type": "boolean"
                    },
                    "fixed_cost_cents": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "client_id": {
                      "type": "integer",
                      "description": "The client id of the project",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/projects/soft_delete": {
      "post": {
        "tags": [
          "ProjectManagement > Project"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis soft deletes a project.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of delete projects.",
        "summary": "Soft deletes a Project",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "status",
                    "employees_assignment",
                    "is_billable",
                    "legal_entity_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "closed",
                        "processing"
                      ]
                    },
                    "employees_assignment": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "company"
                      ]
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "is_billable": {
                      "type": "boolean"
                    },
                    "fixed_cost_cents": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "legal_entity_id": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "client_id": {
                      "type": "integer",
                      "description": "The client id of the project",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_tasks": {
      "get": {
        "tags": [
          "ProjectManagement > ProjectTask"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis reads the data of projects tasks, and retrieves the information based on permissions:\n\n  - If the user can see all company projects for everybody, the endpoint will return a list with the tasks from the related projects.\n  - If the user can create projects for everybody, the endpoint will return a list with the tasks from the related projects.\n  - If the user has any role (editor or owner) on the project, the endpoint will return a list with the tasks from the related projects where the user has that role.\n  - If those conditions are not matched, the endpoint will return an empty list.\n\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the projects tasks that matches the ids passed in the request.\n  - `project_ids`: retrieve only the projects tasks from the projects that matched the ids passed in the request.\n  - `subproject_ids`: retrieve only the projects tasks from the subprojects that matched the ids passed in the request.\n  - `completed`: boolean - retrieve only the projects tasks with the status completed.\n  - `overdue`: boolean - retrieve only the projects tasks that are overdue.\n  - `search`:  retrieve only the projects tasks that their name match with the content passed as argument.\n\n###### **Who can use it?**\n\n  Only companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Reads all Project tasks",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "project_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "subproject_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "task_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "completed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "overdue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_id",
                      "task_id",
                      "follow_up"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      },
                      "task_id": {
                        "type": "integer"
                      },
                      "follow_up": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectManagement > ProjectTask"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis creates a new project task. It will also create a new normal task in the system linked with the project task.\n###### **What body params do you need?**\n\n  - `name`: is mandatory to pass a name of the project task.\n  - `project_id`: is mandatory to pass the project_id where the task belongs.\n  - `status`: project task status. 'To do' by default.\n  - `content`: (optional) content of the project task.\n  - `starts_on`: (optional) date when starts the project task.\n  - `follow_up`: (optional) boolean - if true, status changes related to the project will notify the author.\n  - `due_on`: (optional) the date when the project task will be due.\n  - `assignee_ids`: (optional) array of ids of the assignees to the project task.\n  - `subproject_id`: (optional) the id from the subproject where the project task belongs.\n  - `files`: (optional) array of files that will be attached to the project task\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of create projects.",
        "summary": "Creates a Project task",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_id",
                    "task_id",
                    "follow_up"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    },
                    "task_id": {
                      "type": "integer"
                    },
                    "follow_up": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "project_id",
                  "status"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "starts_on": {
                    "type": "string"
                  },
                  "follow_up": {
                    "type": "boolean"
                  },
                  "due_on": {
                    "type": "string"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "project_id": {
                    "type": "integer"
                  },
                  "subproject_id": {
                    "type": "integer"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_tasks/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > ProjectTask"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis reads the data of projects tasks, and retrieves the information based on permissions:\n\n  - If the user can see all company projects for everybody, the endpoint will return a list with the tasks from the related projects.\n  - If the user can create projects for everybody, the endpoint will return a list with the tasks from the related projects.\n  - If the user has any role (editor or owner) on the project, the endpoint will return a list with the tasks from the related projects where the user has that role.\n  - If those conditions are not matched, the endpoint will return an empty list.\n\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the projects tasks that matches the ids passed in the request.\n  - `project_ids`: retrieve only the projects tasks from the projects that matched the ids passed in the request.\n  - `subproject_ids`: retrieve only the projects tasks from the subprojects that matched the ids passed in the request.\n  - `completed`: boolean - retrieve only the projects tasks with the status completed.\n  - `overdue`: boolean - retrieve only the projects tasks that are overdue.\n  - `search`:  retrieve only the projects tasks that their name match with the content passed as argument.\n\n###### **Who can use it?**\n\n  Only companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Reads a single Project task",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_id",
                    "task_id",
                    "follow_up"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    },
                    "task_id": {
                      "type": "integer"
                    },
                    "follow_up": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectManagement > ProjectTask"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis update a project task.\n###### **What body params do you need?**\n  - `id`: is mandatory to pass the id from the project task.\n  - `name`: is mandatory to pass a name of the project task.\n  - `project_id`: is mandatory to pass the project_id where the task belongs.\n  - `content`: (optional) content of the project task.\n  - `starts_on`: (optional) date when starts the project task.\n  - `follow_up`: (optional) boolean - if true, status changes related to the project will notify the author.\n  - `due_on`: (optional) the date when the project task will be due.\n  - `assignee_ids`: (optional) array of ids of the assignees to the project task.\n  - `subproject_id`: (optional) the id from the subproject where the project task belongs.\n  - `files`: (optional) array of files that will be attached to the project task\n  - `status`: (optional) project task status. 'To do' by default.\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of create projects.",
        "summary": "Updates a Project task",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_id",
                    "task_id",
                    "follow_up"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    },
                    "task_id": {
                      "type": "integer"
                    },
                    "follow_up": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "follow_up",
                  "project_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "starts_on": {
                    "type": "string"
                  },
                  "follow_up": {
                    "type": "boolean"
                  },
                  "due_on": {
                    "type": "string"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "project_id": {
                    "type": "integer"
                  },
                  "subproject_id": {
                    "type": "integer"
                  },
                  "files_to_add": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "files_to_remove": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_tasks/bulk_destroy": {
      "post": {
        "tags": [
          "ProjectManagement > ProjectTask"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis will delete the project tasks with the ids passed as an argument.\n###### **What params does it accept?**\n\n  - `ids`: Project task ids\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Bulk destroys a Project task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_id",
                      "task_id",
                      "follow_up"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      },
                      "task_id": {
                        "type": "integer"
                      },
                      "follow_up": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_tasks/bulk_duplicate": {
      "post": {
        "tags": [
          "ProjectManagement > ProjectTask"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis will create new project tasks with the same attributes as the project task ids passed as an argument.\n###### **What params does it accept?**\n\n  - `ids`: Project task ids\n\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission of read projects.",
        "summary": "Bulk duplicates a Project task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_id",
                      "task_id",
                      "follow_up"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      },
                      "task_id": {
                        "type": "integer"
                      },
                      "follow_up": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids"
                ],
                "properties": {
                  "project_id": {
                    "type": "integer"
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_workers": {
      "get": {
        "tags": [
          "ProjectManagement > ProjectWorker"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint reads and retrieves a list of project workers. You can utilize URL parameters to filter the results.\n###### **Is it related to other entities?**\nA project_worker is always related to a project and a employee. Only a `project worker` is able to add time to a project using the `time_record` entity.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission to read project workers.",
        "summary": "Reads all Project workers",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Retrieve only the project workers that matches the ids provided in the request.",
              "example": [
                314159,
                271828
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Retrieve only the project workers that matches the ids provided in the request.",
            "example": [
              314159,
              271828
            ]
          },
          {
            "name": "project_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Retrieve only the project workers that matches the project_ids provided in the request.",
              "example": [
                314159,
                271828
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Retrieve only the project workers that matches the project_ids provided in the request.",
            "example": [
              314159,
              271828
            ]
          },
          {
            "name": "subproject_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Retrieve only the project workers that matches the subproject_ids provided in the request.",
              "example": [
                314159,
                271828
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Retrieve only the project workers that matches the subproject_ids provided in the request.",
            "example": [
              314159,
              271828
            ]
          },
          {
            "name": "no_subproject",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve the project workers that are not assigned to any subproject (can be combined with subproject_ids)."
            },
            "description": "Retrieve the project workers that are not assigned to any subproject (can be combined with subproject_ids)."
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Retrieve only the project workers that are related to the employee_ids provided in the request.",
              "example": [
                314159,
                271828
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Retrieve only the project workers that are related to the employee_ids provided in the request.",
            "example": [
              314159,
              271828
            ]
          },
          {
            "name": "assigned",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve project workers that are assigned if true or in not-assigned status if false.",
              "example": true
            },
            "description": "Retrieve project workers that are assigned if true or in not-assigned status if false.",
            "example": true
          },
          {
            "name": "project_active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve the project workers that are assigned to active projects if turew or closed projects if false.",
              "example": true
            },
            "description": "Retrieve the project workers that are assigned to active projects if turew or closed projects if false.",
            "example": true
          },
          {
            "name": "employee_name",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Retrieve only the project workers that matches the given employee's name provided in the request.",
              "example": "John D"
            },
            "description": "Retrieve only the project workers that matches the given employee's name provided in the request.",
            "example": "John D"
          },
          {
            "name": "include_inputed_minutes",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "If true we will perform the minutes calculations and will be return the total inputed_minutes. If false, 0 will be returned and no minutes calculations will be performed.",
              "example": true
            },
            "description": "If true we will perform the minutes calculations and will be return the total inputed_minutes. If false, 0 will be returned and no minutes calculations will be performed.",
            "example": true
          },
          {
            "name": "include_cost",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Retrieve only the project workers that were created or updated after the date provided in the request.",
              "example": "1993-08-23"
            },
            "description": "Retrieve only the project workers that were created or updated after the date provided in the request.",
            "example": "1993-08-23"
          },
          {
            "name": "include_labor_cost",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_id",
                      "employee_id",
                      "assigned"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "assigned": {
                        "type": "boolean"
                      },
                      "inputed_minutes": {
                        "type": "integer"
                      },
                      "labor_cost_cents": {
                        "type": "integer"
                      },
                      "spending_cost_cents": {
                        "type": "integer"
                      },
                      "full_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectManagement > ProjectWorker"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis creates a new project worker. By default, the project worker will be created with the status `assigned`.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with a role in the given project.",
        "summary": "Creates a Project worker",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_id",
                    "employee_id",
                    "assigned"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "assigned": {
                      "type": "boolean"
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "full_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "project_id",
                  "employee_id"
                ],
                "properties": {
                  "project_id": {
                    "type": "integer",
                    "description": "The id of the project to assign the employee project worker.",
                    "example": 314
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "The id of the employee to be assigned to the project.",
                    "example": 678
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_workers/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > ProjectWorker"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint reads and retrieves a list of project workers. You can utilize URL parameters to filter the results.\n###### **Is it related to other entities?**\nA project_worker is always related to a project and a employee. Only a `project worker` is able to add time to a project using the `time_record` entity.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission to read project workers.",
        "summary": "Reads a single Project worker",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_id",
                    "employee_id",
                    "assigned"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "assigned": {
                      "type": "boolean"
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "full_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_workers/bulk_assign": {
      "post": {
        "tags": [
          "ProjectManagement > ProjectWorker"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis method is used to specify a set of employees that should be assigned as a result of the execution. All the employees in the list will be assigned and all others will be unassigned.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with a role in the given project.",
        "summary": "Bulk assigns a Project worker",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_id",
                      "employee_id",
                      "assigned"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "assigned": {
                        "type": "boolean"
                      },
                      "inputed_minutes": {
                        "type": "integer"
                      },
                      "labor_cost_cents": {
                        "type": "integer"
                      },
                      "spending_cost_cents": {
                        "type": "integer"
                      },
                      "full_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_ids"
                ],
                "properties": {
                  "project_id": {
                    "type": "integer",
                    "description": "**DEPRECATED** in favor of `project_ids`. Please use `project_ids` instead",
                    "example": 314
                  },
                  "project_ids": {
                    "type": "array",
                    "description": "Set of project_ids to assign to the employees specified in the next param.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "employee_ids": {
                    "type": "array",
                    "description": "Set of a employee_ids that must be **assigned** after execution.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_workers/bulk_create": {
      "post": {
        "tags": [
          "ProjectManagement > ProjectWorker"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk creates a Project worker",
        "summary": "Bulk creates a Project worker",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_id",
                      "employee_id",
                      "assigned"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "assigned": {
                        "type": "boolean"
                      },
                      "inputed_minutes": {
                        "type": "integer"
                      },
                      "labor_cost_cents": {
                        "type": "integer"
                      },
                      "spending_cost_cents": {
                        "type": "integer"
                      },
                      "full_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "project_id",
                  "employee_ids"
                ],
                "properties": {
                  "project_id": {
                    "type": "integer",
                    "description": "The id of the project to assign the given employees.",
                    "example": 314
                  },
                  "employee_ids": {
                    "type": "array",
                    "description": "The id of the employee to be assigned to the projects.",
                    "example": [
                      678,
                      679
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/project_workers/unassign": {
      "post": {
        "tags": [
          "ProjectManagement > ProjectWorker"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Unassigns a Project worker",
        "summary": "Unassigns a Project worker",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_id",
                    "employee_id",
                    "assigned"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "assigned": {
                      "type": "boolean"
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    },
                    "spending_cost_cents": {
                      "type": "integer"
                    },
                    "full_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The id of the project worker to be unassigned.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/subprojects": {
      "get": {
        "tags": [
          "ProjectManagement > Subproject"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis reads all subprojects created\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the subprojects that matches the ids passed in the request.\\n\n  - `include_inputed_minutes`: if `true` we will perform the minutes calculations and will be return the total `inputed_minutes`. If the param is not passed in the request, its default value is `FALSE` so it will return `inputed_minutes: 0` and no minutes calculations will be performed.\n  - `updated_after`: this parameter is needed to filter subprojects created or updated after a date.\n\n###### **Is it related to other entities?**\nA subproject is always related to a project, so you can use the query params to list only the subprojects that are related to a specific project.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_with_subprojects` feature and users with the permission of read subprojects.",
        "summary": "Reads all Subprojects",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "project_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_no_subproject",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_inputed_minutes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_cost",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "project_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "integer"
                      },
                      "inputed_minutes": {
                        "type": "integer"
                      },
                      "labor_cost_cents": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectManagement > Subproject"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis creates a new subproject.\n###### **Is it related to other entities?**\nA subproject is always related to a project.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_with_subprojects` feature and users with a role in the project owning the subproject.",
        "summary": "Creates a Subproject",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "project_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "project_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/subprojects/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > Subproject"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis reads all subprojects created\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the subprojects that matches the ids passed in the request.\\n\n  - `include_inputed_minutes`: if `true` we will perform the minutes calculations and will be return the total `inputed_minutes`. If the param is not passed in the request, its default value is `FALSE` so it will return `inputed_minutes: 0` and no minutes calculations will be performed.\n  - `updated_after`: this parameter is needed to filter subprojects created or updated after a date.\n\n###### **Is it related to other entities?**\nA subproject is always related to a project, so you can use the query params to list only the subprojects that are related to a specific project.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_with_subprojects` feature and users with the permission of read subprojects.",
        "summary": "Reads a single Subproject",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "project_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectManagement > Subproject"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis deletes a subproject.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_with_subprojects` feature and users with a role in the project owning the subproject.",
        "summary": "Deletes a Subproject",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "project_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/subprojects/rename": {
      "post": {
        "tags": [
          "ProjectManagement > Subproject"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis renames a subproject.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_with_subprojects` feature and users with a role in the project owning the subproject.",
        "summary": "Renames a Subproject",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "project_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "integer"
                    },
                    "inputed_minutes": {
                      "type": "integer"
                    },
                    "labor_cost_cents": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/time_records": {
      "get": {
        "tags": [
          "ProjectManagement > TimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint reads and retrieves a list of time records. You can utilize URL parameters to filter the results.\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the time records that matches the `ids` passed in the request.\n  - `project_workers_ids`: Retrieve only the time records assigned to any `project_workers_ids` passed in the request.\n  - `subproject_ids`: retrieve only the time records related with any `subproject_ids` passed in the request.\n  - `attendance_shift_ids`: retrieve only the time records related with any `attendance_shift_ids` passed in the request.\n  - `employee_ids`: ⚠️ This param, will be deprecated soon. **Please use `project_worker_ids` param instead.**\n  - `month`: Filter time records created in a specific month of the year.\n  - `year`: To be used with the `month` parameter to filter time records created in a particular period.\n  - `updated_after`: this parameter is needed to filter time records created or updated after a date.\n\n###### **Is it related to other entities?**\nA `time_record` is mandatory related to a `project_worker_id` and an `attendance_shift_id`. Optionally, it can be related to a subproject.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission to read time_records.",
        "summary": "Reads all Time records",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "project_worker_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "subproject_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "attendance_shift_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_worker_id",
                      "attendance_shift_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_worker_id": {
                        "type": "integer"
                      },
                      "attendance_shift_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectManagement > TimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\n\"This endpoint is used to create time records. A time record is an entity that establishes a mandatory relationship between `project_worker` and `attendance_shift_id`, and optionally with `subproject`. For a successful creation of a `time_record`, the `project_worker` must be **assigned**, and the associated `project` must be **active**.\"\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission to create `time_records`.",
        "summary": "Creates a Time record",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_worker_id",
                    "attendance_shift_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "attendance_shift_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "project_worker_id",
                  "attendance_shift_id"
                ],
                "properties": {
                  "project_worker_id": {
                    "type": "integer"
                  },
                  "attendance_shift_id": {
                    "type": "integer"
                  },
                  "subproject_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/time_records/{id}": {
      "get": {
        "tags": [
          "ProjectManagement > TimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint reads and retrieves a list of time records. You can utilize URL parameters to filter the results.\n###### **What params does it accept?**\n\n  - `ids`: retrieve only the time records that matches the `ids` passed in the request.\n  - `project_workers_ids`: Retrieve only the time records assigned to any `project_workers_ids` passed in the request.\n  - `subproject_ids`: retrieve only the time records related with any `subproject_ids` passed in the request.\n  - `attendance_shift_ids`: retrieve only the time records related with any `attendance_shift_ids` passed in the request.\n  - `employee_ids`: ⚠️ This param, will be deprecated soon. **Please use `project_worker_ids` param instead.**\n  - `month`: Filter time records created in a specific month of the year.\n  - `year`: To be used with the `month` parameter to filter time records created in a particular period.\n  - `updated_after`: this parameter is needed to filter time records created or updated after a date.\n\n###### **Is it related to other entities?**\nA `time_record` is mandatory related to a `project_worker_id` and an `attendance_shift_id`. Optionally, it can be related to a subproject.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature and users with the permission to read time_records.",
        "summary": "Reads a single Time record",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_worker_id",
                    "attendance_shift_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "attendance_shift_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectManagement > TimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Time record",
        "summary": "Deletes a Time record",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_worker_id",
                    "attendance_shift_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "attendance_shift_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/time_records/bulk_delete": {
      "post": {
        "tags": [
          "ProjectManagement > TimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint is used to bulk delete all the time records in a particular `date` for a specific `project_worker_id`.",
        "summary": "Bulk deletes a Time record",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_worker_id",
                      "attendance_shift_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_worker_id": {
                        "type": "integer"
                      },
                      "attendance_shift_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "project_worker_id"
                ],
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "project_worker_id": {
                    "type": "integer"
                  },
                  "subproject_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/time_records/bulk_process": {
      "post": {
        "tags": [
          "ProjectManagement > TimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis versatile endpoint allows for the creation, update, or deletion of a time record associated with an `attendance_shift_id`. To achieve this, provide an array of items with the following structure:\n\n  ```json\n    [{\n      \"time_record_id\": number | null,\n      \"attendance_shift_id\": number | null,\n      \"project_worker_id\": number | null,\n      \"subproject_id\": number | null\n    }]\n  ```\n\n  - If no `time_record_id` provided, a created will be performed with the other data that will be required (except for `subproject_id`, that is always optional).\n  - If `time_record_id but no other data provided, then the action will be a **delete**.\n  - If `time_record_id` and more data, then it's an **update**.\n\nPlease note: The relationship between `time_record` and `attendance_shift` is unique. In the provided array of items, if two items have exactly the same `attendance_shift_id`, only the last action specified will be executed, **unless the first action is a delete and the second one an update**.\n###### **Who can use it?**\nOnly companies who have enabled the `projects_management` feature.",
        "summary": "Bulk processes a Time record",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "project_worker_id",
                      "attendance_shift_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "project_worker_id": {
                        "type": "integer"
                      },
                      "attendance_shift_id": {
                        "type": "integer"
                      },
                      "subproject_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/project_management/time_records/update_project_worker": {
      "post": {
        "tags": [
          "ProjectManagement > TimeRecord"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint is used to change the project that an employee (`project_worker`) has assigned to an `attendance_shift`.",
        "summary": "Update project workers a Time record",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "project_worker_id",
                    "attendance_shift_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "project_worker_id": {
                      "type": "integer"
                    },
                    "attendance_shift_id": {
                      "type": "integer"
                    },
                    "subproject_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "project_worker_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "project_worker_id": {
                    "type": "integer"
                  },
                  "subproject_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/shift_management/shifts": {
      "get": {
        "tags": [
          "ShiftManagement > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Shifts",
        "summary": "Reads all Shifts",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "List of shift identifiers",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "List of shift identifiers",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "List of employee identifiers",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "List of employee identifiers",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "location_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "List of location identifiers",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "List of location identifiers",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "start_at",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Start date to find shifts from",
              "example": "2024-11-01"
            },
            "description": "Start date to find shifts from",
            "example": "2024-11-01"
          },
          {
            "name": "end_at",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "End date to find shifts to",
              "example": "2024-11-20"
            },
            "description": "End date to find shifts to",
            "example": "2024-11-20"
          },
          {
            "name": "only_published",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "To retrieve only published shifts",
              "example": true
            },
            "description": "To retrieve only published shifts",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "state",
                      "employee_id",
                      "start_at",
                      "end_at",
                      "timezone",
                      "local_start_at",
                      "local_end_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Shift identifier",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the shift",
                        "example": "Morning shift"
                      },
                      "state": {
                        "type": "string",
                        "example": "published, draft"
                      },
                      "location_id": {
                        "type": "integer",
                        "description": "Shift location identifier",
                        "example": 3
                      },
                      "locations_work_area_id": {
                        "type": "integer",
                        "description": "Shift work area identifier",
                        "example": 5
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "example": 45
                      },
                      "start_at": {
                        "type": "string",
                        "description": "Start date of the shift",
                        "example": "2020-09-07T06:00:00.000+00:00"
                      },
                      "end_at": {
                        "type": "string",
                        "description": "End date of the shift",
                        "example": "2020-09-07T15:00:00.000+00:00"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Shift notes",
                        "example": "This is a shift note"
                      },
                      "extra_hours": {
                        "type": "boolean",
                        "description": "Flag to indicate if the shift has extra hours"
                      },
                      "default_shift_title": {
                        "type": "string",
                        "description": "Default shift title"
                      },
                      "timezone": {
                        "type": "string",
                        "description": "Shift timezone",
                        "example": "Europe/Madrid"
                      },
                      "local_start_at": {
                        "type": "string",
                        "description": "Local start date of the shift",
                        "example": "2020-09-07T07:00:00.000+00:00"
                      },
                      "local_end_at": {
                        "type": "string",
                        "description": "Local end date of the shift",
                        "example": "2020-09-07T15:00:00.000+00:00"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ShiftManagement > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Shift",
        "summary": "Creates a Shift",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "state",
                    "employee_id",
                    "start_at",
                    "end_at",
                    "timezone",
                    "local_start_at",
                    "local_end_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Shift identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the shift",
                      "example": "Morning shift"
                    },
                    "state": {
                      "type": "string",
                      "example": "published, draft"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Shift location identifier",
                      "example": 3
                    },
                    "locations_work_area_id": {
                      "type": "integer",
                      "description": "Shift work area identifier",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier",
                      "example": 45
                    },
                    "start_at": {
                      "type": "string",
                      "description": "Start date of the shift",
                      "example": "2020-09-07T06:00:00.000+00:00"
                    },
                    "end_at": {
                      "type": "string",
                      "description": "End date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Shift notes",
                      "example": "This is a shift note"
                    },
                    "extra_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if the shift has extra hours"
                    },
                    "default_shift_title": {
                      "type": "string",
                      "description": "Default shift title"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Shift timezone",
                      "example": "Europe/Madrid"
                    },
                    "local_start_at": {
                      "type": "string",
                      "description": "Local start date of the shift",
                      "example": "2020-09-07T07:00:00.000+00:00"
                    },
                    "local_end_at": {
                      "type": "string",
                      "description": "Local end date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "start_at",
                  "end_at",
                  "employee_id",
                  "company_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "start_at": {
                    "type": "string",
                    "description": "Start date of the shift",
                    "example": "2020-09-07T06:00:00.000+00:00"
                  },
                  "end_at": {
                    "type": "string",
                    "description": "End date of the shift",
                    "example": "2020-09-07T15:00:00.000+00:00"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Shift notes",
                    "example": "This is a shift note"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "example": 389
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "Location identifier",
                    "example": 5
                  },
                  "work_area_id": {
                    "type": "integer",
                    "description": "Location work area identifier",
                    "example": 12
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/shift_management/shifts/{id}": {
      "get": {
        "tags": [
          "ShiftManagement > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Shift",
        "summary": "Reads a single Shift",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "state",
                    "employee_id",
                    "start_at",
                    "end_at",
                    "timezone",
                    "local_start_at",
                    "local_end_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Shift identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the shift",
                      "example": "Morning shift"
                    },
                    "state": {
                      "type": "string",
                      "example": "published, draft"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Shift location identifier",
                      "example": 3
                    },
                    "locations_work_area_id": {
                      "type": "integer",
                      "description": "Shift work area identifier",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier",
                      "example": 45
                    },
                    "start_at": {
                      "type": "string",
                      "description": "Start date of the shift",
                      "example": "2020-09-07T06:00:00.000+00:00"
                    },
                    "end_at": {
                      "type": "string",
                      "description": "End date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Shift notes",
                      "example": "This is a shift note"
                    },
                    "extra_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if the shift has extra hours"
                    },
                    "default_shift_title": {
                      "type": "string",
                      "description": "Default shift title"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Shift timezone",
                      "example": "Europe/Madrid"
                    },
                    "local_start_at": {
                      "type": "string",
                      "description": "Local start date of the shift",
                      "example": "2020-09-07T07:00:00.000+00:00"
                    },
                    "local_end_at": {
                      "type": "string",
                      "description": "Local end date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShiftManagement > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Shift",
        "summary": "Deletes a Shift",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "state",
                    "employee_id",
                    "start_at",
                    "end_at",
                    "timezone",
                    "local_start_at",
                    "local_end_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Shift identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the shift",
                      "example": "Morning shift"
                    },
                    "state": {
                      "type": "string",
                      "example": "published, draft"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Shift location identifier",
                      "example": 3
                    },
                    "locations_work_area_id": {
                      "type": "integer",
                      "description": "Shift work area identifier",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier",
                      "example": 45
                    },
                    "start_at": {
                      "type": "string",
                      "description": "Start date of the shift",
                      "example": "2020-09-07T06:00:00.000+00:00"
                    },
                    "end_at": {
                      "type": "string",
                      "description": "End date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Shift notes",
                      "example": "This is a shift note"
                    },
                    "extra_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if the shift has extra hours"
                    },
                    "default_shift_title": {
                      "type": "string",
                      "description": "Default shift title"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Shift timezone",
                      "example": "Europe/Madrid"
                    },
                    "local_start_at": {
                      "type": "string",
                      "description": "Local start date of the shift",
                      "example": "2020-09-07T07:00:00.000+00:00"
                    },
                    "local_end_at": {
                      "type": "string",
                      "description": "Local end date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/shift_management/shifts/bulk_delete": {
      "post": {
        "tags": [
          "ShiftManagement > Shift"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk deletes a Shift",
        "summary": "Bulk deletes a Shift",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "state",
                    "employee_id",
                    "start_at",
                    "end_at",
                    "timezone",
                    "local_start_at",
                    "local_end_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Shift identifier",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the shift",
                      "example": "Morning shift"
                    },
                    "state": {
                      "type": "string",
                      "example": "published, draft"
                    },
                    "location_id": {
                      "type": "integer",
                      "description": "Shift location identifier",
                      "example": 3
                    },
                    "locations_work_area_id": {
                      "type": "integer",
                      "description": "Shift work area identifier",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier",
                      "example": 45
                    },
                    "start_at": {
                      "type": "string",
                      "description": "Start date of the shift",
                      "example": "2020-09-07T06:00:00.000+00:00"
                    },
                    "end_at": {
                      "type": "string",
                      "description": "End date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Shift notes",
                      "example": "This is a shift note"
                    },
                    "extra_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if the shift has extra hours"
                    },
                    "default_shift_title": {
                      "type": "string",
                      "description": "Default shift title"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Shift timezone",
                      "example": "Europe/Madrid"
                    },
                    "local_start_at": {
                      "type": "string",
                      "description": "Local start date of the shift",
                      "example": "2020-09-07T07:00:00.000+00:00"
                    },
                    "local_end_at": {
                      "type": "string",
                      "description": "Local end date of the shift",
                      "example": "2020-09-07T15:00:00.000+00:00"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "author_id"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "List of shift identifiers",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "start_at": {
                    "type": "string",
                    "description": "Start date for the shift list",
                    "example": "2020-01-01T15:00:00.000+00:00"
                  },
                  "end_at": {
                    "type": "string",
                    "description": "End date for the shift list",
                    "example": "2020-01-31T15:00:00.000+00:00"
                  },
                  "employee_ids": {
                    "type": "array",
                    "description": "Lsit of the employee identifiers",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_id": {
                    "type": "integer",
                    "description": "Access identifier of the author fo the bulk delete action",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/tasks": {
      "get": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint retrieves all tasks created.",
        "summary": "Reads all Tasks",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "retrieve only the tasks that match the IDs passed in the request.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "retrieve only the tasks that match the IDs passed in the request.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "retrieve the tasks that have a company_id associated",
              "example": 1
            },
            "description": "retrieve the tasks that have a company_id associated",
            "example": 1
          },
          {
            "name": "assignee_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "retrieve the tasks that have an assignee_id associated, assignee_id references to employee_id.",
              "example": 1
            },
            "description": "retrieve the tasks that have an assignee_id associated, assignee_id references to employee_id.",
            "example": 1
          },
          {
            "name": "due_on",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter by tasks that have a due date.",
              "example": "2024-06-06"
            },
            "description": "filter by tasks that have a due date.",
            "example": "2024-06-06"
          },
          {
            "name": "already_due",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "filter by tasks that have expired or are still due.",
              "example": true
            },
            "description": "filter by tasks that have expired or are still due.",
            "example": true
          },
          {
            "name": "task_status",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "filter by tasks that with an especific status (todo | in_progress | done | discarded).",
              "enum": [
                "todo",
                "in_progress",
                "done",
                "discarded"
              ],
              "example": "todo"
            },
            "description": "filter by tasks that with an especific status (todo | in_progress | done | discarded).",
            "example": "todo"
          },
          {
            "name": "involvee_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "retrieve tasks where the user is affectee or assignee",
              "example": 1
            },
            "description": "retrieve tasks where the user is affectee or assignee",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id",
                      "assignee_ids",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the task",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the task",
                        "example": "Upload payroll files"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier of the author of the task",
                        "example": 1
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the task",
                        "example": "Do it as soon as possible"
                      },
                      "due_on": {
                        "type": "string",
                        "description": "Due on date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "assignee_ids": {
                        "type": "array",
                        "description": "Employees assigned to the task, assignee_id references to employee_id",
                        "example": [
                          1,
                          2,
                          3
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "author_employee_id": {
                        "type": "integer",
                        "description": "Employee id of the author of the task",
                        "example": 1
                      },
                      "completed_at": {
                        "type": "string",
                        "description": "Completed at date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "completed_by_id": {
                        "type": "integer",
                        "description": "Completed by identifier",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "Updated at date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the task",
                        "enum": [
                          "todo",
                          "in_progress",
                          "done",
                          "discarded"
                        ],
                        "example": "done"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint creates a new task.",
        "summary": "Creates a Task",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "assignee_ids",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the task",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the task",
                      "example": "Upload payroll files"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the author of the task",
                      "example": 1
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the task",
                      "example": "Do it as soon as possible"
                    },
                    "due_on": {
                      "type": "string",
                      "description": "Due on date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "assignee_ids": {
                      "type": "array",
                      "description": "Employees assigned to the task, assignee_id references to employee_id",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "author_employee_id": {
                      "type": "integer",
                      "description": "Employee id of the author of the task",
                      "example": 1
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Completed at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_by_id": {
                      "type": "integer",
                      "description": "Completed by identifier",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task",
                      "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "discarded"
                      ],
                      "example": "done"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "status"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name of the task.",
                    "example": "My task"
                  },
                  "content": {
                    "type": "string",
                    "description": "description of the task",
                    "example": "Complete your performance review before Friday"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "expiration date of the task.",
                    "example": "2024-06-06"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "Employees assigned to the task, assignee_id references to employee_id.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "status of the task (todo | in_progress | done | discarded).",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "todo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint retrieves all tasks created.",
        "summary": "Reads a single Task",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "assignee_ids",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the task",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the task",
                      "example": "Upload payroll files"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the author of the task",
                      "example": 1
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the task",
                      "example": "Do it as soon as possible"
                    },
                    "due_on": {
                      "type": "string",
                      "description": "Due on date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "assignee_ids": {
                      "type": "array",
                      "description": "Employees assigned to the task, assignee_id references to employee_id",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "author_employee_id": {
                      "type": "integer",
                      "description": "Employee id of the author of the task",
                      "example": 1
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Completed at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_by_id": {
                      "type": "integer",
                      "description": "Completed by identifier",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task",
                      "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "discarded"
                      ],
                      "example": "done"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint updates an existing task.",
        "summary": "Updates a Task",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "assignee_ids",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the task",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the task",
                      "example": "Upload payroll files"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the author of the task",
                      "example": 1
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the task",
                      "example": "Do it as soon as possible"
                    },
                    "due_on": {
                      "type": "string",
                      "description": "Due on date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "assignee_ids": {
                      "type": "array",
                      "description": "Employees assigned to the task, assignee_id references to employee_id",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "author_employee_id": {
                      "type": "integer",
                      "description": "Employee id of the author of the task",
                      "example": 1
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Completed at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_by_id": {
                      "type": "integer",
                      "description": "Completed by identifier",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task",
                      "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "discarded"
                      ],
                      "example": "done"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of a task.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "name of  task.",
                    "example": "My task"
                  },
                  "content": {
                    "type": "string",
                    "description": "description of the task.",
                    "example": "Complete your performance review before Friday"
                  },
                  "due_on": {
                    "type": "string",
                    "description": "expiration date of the task.",
                    "example": "2024-06-06"
                  },
                  "assignee_ids": {
                    "type": "array",
                    "description": "employees assigned to the task, assignee_id references to employee_id.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "status of the task (todo | in_progress | done | discarded).",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "todo"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint deletes a task.",
        "summary": "Deletes a Task",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "assignee_ids",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the task",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the task",
                      "example": "Upload payroll files"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the author of the task",
                      "example": 1
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the task",
                      "example": "Do it as soon as possible"
                    },
                    "due_on": {
                      "type": "string",
                      "description": "Due on date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "assignee_ids": {
                      "type": "array",
                      "description": "Employees assigned to the task, assignee_id references to employee_id",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "author_employee_id": {
                      "type": "integer",
                      "description": "Employee id of the author of the task",
                      "example": 1
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Completed at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_by_id": {
                      "type": "integer",
                      "description": "Completed by identifier",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task",
                      "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "discarded"
                      ],
                      "example": "done"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/tasks/bulk_change_status": {
      "post": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint allows to set update the status of a list of tasks given the ids.",
        "summary": "Bulk change statuses a Task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id",
                      "assignee_ids",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the task",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the task",
                        "example": "Upload payroll files"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier of the author of the task",
                        "example": 1
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the task",
                        "example": "Do it as soon as possible"
                      },
                      "due_on": {
                        "type": "string",
                        "description": "Due on date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "assignee_ids": {
                        "type": "array",
                        "description": "Employees assigned to the task, assignee_id references to employee_id",
                        "example": [
                          1,
                          2,
                          3
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "author_employee_id": {
                        "type": "integer",
                        "description": "Employee id of the author of the task",
                        "example": 1
                      },
                      "completed_at": {
                        "type": "string",
                        "description": "Completed at date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "completed_by_id": {
                        "type": "integer",
                        "description": "Completed by identifier",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "Updated at date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the task",
                        "enum": [
                          "todo",
                          "in_progress",
                          "done",
                          "discarded"
                        ],
                        "example": "done"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids",
                  "status"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "a list of task ids.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "status of the task (todo | in_progress | done | discarded).",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done",
                      "discarded"
                    ],
                    "example": "todo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/tasks/bulk_delete": {
      "post": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint allows to delete a list of tasks given the ids.",
        "summary": "Bulk deletes a Task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id",
                      "assignee_ids",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the task",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the task",
                        "example": "Upload payroll files"
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier of the author of the task",
                        "example": 1
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the task",
                        "example": "Do it as soon as possible"
                      },
                      "due_on": {
                        "type": "string",
                        "description": "Due on date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "assignee_ids": {
                        "type": "array",
                        "description": "Employees assigned to the task, assignee_id references to employee_id",
                        "example": [
                          1,
                          2,
                          3
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "author_employee_id": {
                        "type": "integer",
                        "description": "Employee id of the author of the task",
                        "example": 1
                      },
                      "completed_at": {
                        "type": "string",
                        "description": "Completed at date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "completed_by_id": {
                        "type": "integer",
                        "description": "Completed by identifier",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "Updated at date of the task",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the task",
                        "enum": [
                          "todo",
                          "in_progress",
                          "done",
                          "discarded"
                        ],
                        "example": "done"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "a list of task ids.",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/tasks/copy": {
      "post": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint duplicates a task.",
        "summary": "Copies a Task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "assignee_ids",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the task",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the task",
                      "example": "Upload payroll files"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the author of the task",
                      "example": 1
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the task",
                      "example": "Do it as soon as possible"
                    },
                    "due_on": {
                      "type": "string",
                      "description": "Due on date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "assignee_ids": {
                      "type": "array",
                      "description": "Employees assigned to the task, assignee_id references to employee_id",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "author_employee_id": {
                      "type": "integer",
                      "description": "Employee id of the author of the task",
                      "example": 1
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Completed at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_by_id": {
                      "type": "integer",
                      "description": "Completed by identifier",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task",
                      "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "discarded"
                      ],
                      "example": "done"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the task.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the task",
                    "example": "My task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/tasks/create_comment": {
      "post": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create comments a Task",
        "summary": "Create comments a Task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "assignee_ids",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the task",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the task",
                      "example": "Upload payroll files"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the author of the task",
                      "example": 1
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the task",
                      "example": "Do it as soon as possible"
                    },
                    "due_on": {
                      "type": "string",
                      "description": "Due on date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "assignee_ids": {
                      "type": "array",
                      "description": "Employees assigned to the task, assignee_id references to employee_id",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "author_employee_id": {
                      "type": "integer",
                      "description": "Employee id of the author of the task",
                      "example": 1
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Completed at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_by_id": {
                      "type": "integer",
                      "description": "Completed by identifier",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task",
                      "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "discarded"
                      ],
                      "example": "done"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content",
                  "author_id",
                  "resource_id",
                  "company_id"
                ],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "author_id": {
                    "type": "integer"
                  },
                  "resource_id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "mentioned_access_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/tasks/resolve": {
      "post": {
        "tags": [
          "Tasks > Task"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "This endpoint allows to update the status of a task.",
        "summary": "Resolves a Task",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "assignee_ids",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the task",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the task",
                      "example": "Upload payroll files"
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the author of the task",
                      "example": 1
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the task",
                      "example": "Do it as soon as possible"
                    },
                    "due_on": {
                      "type": "string",
                      "description": "Due on date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "assignee_ids": {
                      "type": "array",
                      "description": "Employees assigned to the task, assignee_id references to employee_id",
                      "example": [
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "author_employee_id": {
                      "type": "integer",
                      "description": "Employee id of the author of the task",
                      "example": 1
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Completed at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "completed_by_id": {
                      "type": "integer",
                      "description": "Completed by identifier",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated at date of the task",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the task",
                      "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "discarded"
                      ],
                      "example": "done"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "done"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the task.",
                    "example": 1
                  },
                  "done": {
                    "type": "boolean",
                    "description": "A boolean for setting the new status of the task, done given true and to-do given false.",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/task_files": {
      "get": {
        "tags": [
          "Tasks > TaskFile"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Task files",
        "summary": "Reads all Task files",
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "identifier of the task",
              "example": 1
            },
            "description": "identifier of the task",
            "example": 1,
            "required": true
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "identifiers of the files",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "identifiers of the files",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "task_id",
                      "filename",
                      "path",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "identifier of the file.",
                        "example": 1
                      },
                      "task_id": {
                        "type": "integer",
                        "description": "identifier of the task.",
                        "example": 1
                      },
                      "filename": {
                        "type": "string",
                        "description": "name of the file.",
                        "example": "expenses.png"
                      },
                      "content_type": {
                        "type": "string",
                        "description": "content type of the file.",
                        "example": "image/png"
                      },
                      "path": {
                        "type": "string",
                        "description": "path of the file, for downloading the file you need to concat api_url/path.",
                        "example": "/tasks/tasks_files/405"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "creation date of the file.",
                        "example": "2024-10-06"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks > TaskFile"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Task file",
        "summary": "Creates a Task file",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "task_id",
                    "filename",
                    "path",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the file.",
                      "example": 1
                    },
                    "task_id": {
                      "type": "integer",
                      "description": "identifier of the task.",
                      "example": 1
                    },
                    "filename": {
                      "type": "string",
                      "description": "name of the file.",
                      "example": "expenses.png"
                    },
                    "content_type": {
                      "type": "string",
                      "description": "content type of the file.",
                      "example": "image/png"
                    },
                    "path": {
                      "type": "string",
                      "description": "path of the file, for downloading the file you need to concat api_url/path.",
                      "example": "/tasks/tasks_files/405"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the file.",
                      "example": "2024-10-06"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "task_id",
                  "file"
                ],
                "properties": {
                  "task_id": {
                    "type": "integer",
                    "description": "identifier of the task",
                    "example": 1
                  },
                  "file": {
                    "type": "string",
                    "description": "file to attach to the task",
                    "example": "expenses.png",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/tasks/task_files/{id}": {
      "get": {
        "tags": [
          "Tasks > TaskFile"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Task file",
        "summary": "Reads a single Task file",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "task_id",
                    "filename",
                    "path",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the file.",
                      "example": 1
                    },
                    "task_id": {
                      "type": "integer",
                      "description": "identifier of the task.",
                      "example": 1
                    },
                    "filename": {
                      "type": "string",
                      "description": "name of the file.",
                      "example": "expenses.png"
                    },
                    "content_type": {
                      "type": "string",
                      "description": "content type of the file.",
                      "example": "image/png"
                    },
                    "path": {
                      "type": "string",
                      "description": "path of the file, for downloading the file you need to concat api_url/path.",
                      "example": "/tasks/tasks_files/405"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the file.",
                      "example": "2024-10-06"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks > TaskFile"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Task file",
        "summary": "Deletes a Task file",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "task_id",
                    "filename",
                    "path",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "identifier of the file.",
                      "example": 1
                    },
                    "task_id": {
                      "type": "integer",
                      "description": "identifier of the task.",
                      "example": 1
                    },
                    "filename": {
                      "type": "string",
                      "description": "name of the file.",
                      "example": "expenses.png"
                    },
                    "content_type": {
                      "type": "string",
                      "description": "content type of the file.",
                      "example": "image/png"
                    },
                    "path": {
                      "type": "string",
                      "description": "path of the file, for downloading the file you need to concat api_url/path.",
                      "example": "/tasks/tasks_files/405"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "creation date of the file.",
                      "example": "2024-10-06"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/teams/memberships": {
      "get": {
        "tags": [
          "Teams > Membership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Get all memberships.",
        "summary": "Reads all Memberships",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Membership ids.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Membership ids.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Team ids.",
              "example": [
                3,
                5,
                7
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Team ids.",
            "example": [
              3,
              5,
              7
            ]
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Employee ids.",
              "example": [
                10,
                12,
                13
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Employee ids.",
            "example": [
              10,
              12,
              13
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "team_id",
                      "lead"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Membership ID",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company ID of the membership",
                        "example": 5
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Employee ID of the membership",
                        "example": 12
                      },
                      "team_id": {
                        "type": "integer",
                        "description": "Team ID of the membership",
                        "example": 4
                      },
                      "lead": {
                        "type": "boolean",
                        "description": "Whether the employee is a lead of the team or not",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teams > Membership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Assign an employee to a team, meaning create a membership.",
        "summary": "Creates a Membership",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "team_id",
                    "lead"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Membership ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID of the membership",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee ID of the membership",
                      "example": 12
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Team ID of the membership",
                      "example": 4
                    },
                    "lead": {
                      "type": "boolean",
                      "description": "Whether the employee is a lead of the team or not",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "team_id",
                  "employee_id"
                ],
                "properties": {
                  "team_id": {
                    "type": "integer",
                    "description": "Team id.",
                    "example": 1
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee id.",
                    "example": 5
                  },
                  "lead": {
                    "type": "boolean",
                    "description": "Makes the employee a lead of the team.",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/teams/memberships/{id}": {
      "get": {
        "tags": [
          "Teams > Membership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Get all memberships.",
        "summary": "Reads a single Membership",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "team_id",
                    "lead"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Membership ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID of the membership",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee ID of the membership",
                      "example": 12
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Team ID of the membership",
                      "example": 4
                    },
                    "lead": {
                      "type": "boolean",
                      "description": "Whether the employee is a lead of the team or not",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teams > Membership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update the membership to either make the employee a lead of the team or remove them as a lead.",
        "summary": "Updates a Membership",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "team_id",
                    "lead"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Membership ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID of the membership",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee ID of the membership",
                      "example": 12
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Team ID of the membership",
                      "example": 4
                    },
                    "lead": {
                      "type": "boolean",
                      "description": "Whether the employee is a lead of the team or not",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lead": {
                    "type": "boolean",
                    "description": "Assign an employee as a lead for their respective team.",
                    "example": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teams > Membership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Delete the membership to remove the employee from the team.",
        "summary": "Deletes a Membership",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "team_id",
                    "lead"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Membership ID",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company ID of the membership",
                      "example": 5
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee ID of the membership",
                      "example": 12
                    },
                    "team_id": {
                      "type": "integer",
                      "description": "Team ID of the membership",
                      "example": 4
                    },
                    "lead": {
                      "type": "boolean",
                      "description": "Whether the employee is a lead of the team or not",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/teams/teams": {
      "get": {
        "tags": [
          "Teams > Team"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Gets all the teams",
        "summary": "Reads all Teams",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "string"
                      },
                      "employee_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "lead_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "company_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teams > Team"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Create a team with a given name",
        "summary": "Creates a Team",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "lead_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "company_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the team.",
                    "example": "Management"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the team",
                    "example": "Management team description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/teams/teams/{id}": {
      "get": {
        "tags": [
          "Teams > Team"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Gets all the teams",
        "summary": "Reads a single Team",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "lead_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "company_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teams > Team"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update a team",
        "summary": "Updates a Team",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "lead_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "company_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id of the team",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the team",
                    "example": "Engineering"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the team",
                    "example": "Engineering team description"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "Avatar of the team",
                    "example": "https://api.factorialhr.com/rails/active_storage/representations/redirect/bob.png",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teams > Team"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Delete a team",
        "summary": "Deletes a Team",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "lead_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "company_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/allowances": {
      "get": {
        "tags": [
          "Timeoff > Allowance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves allowances",
        "summary": "Reads all Allowances",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "An array of allowance ids to look for",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "An array of allowance ids to look for",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "timeoff_policy_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Filter allowances by Time off policy id",
              "example": 1
            },
            "description": "Filter allowances by Time off policy id",
            "example": 1
          },
          {
            "name": "by_overtime",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Filter by only overtime allowances",
              "example": true
            },
            "description": "Filter by only overtime allowances",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "allowance_type",
                      "available_days",
                      "count_holiday_as_workable",
                      "leave_type_ids",
                      "name",
                      "proration_type",
                      "rounding",
                      "tenure_periods",
                      "timeoff_cycle",
                      "timeoff_policy_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier of the allowance",
                        "example": 1
                      },
                      "accrued_denominator_in_cents": {
                        "type": "integer",
                        "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                        "example": 1000
                      },
                      "accrued_factor_in_cents": {
                        "type": "integer",
                        "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                        "example": 10
                      },
                      "accrued_units_availability": {
                        "type": "string",
                        "description": "When can the acrrued units be spent.",
                        "enum": [
                          "current_cycle",
                          "next_cycle"
                        ],
                        "example": "current_cycle"
                      },
                      "allowance_type": {
                        "type": "string",
                        "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
                        "enum": [
                          "days",
                          "hours"
                        ],
                        "example": "days"
                      },
                      "available_days": {
                        "type": "string",
                        "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                        "enum": [
                          "all_days",
                          "generated_days",
                          "generated_days_monthly",
                          "generated_days_monthly_first_day",
                          "monthly_fifteenth",
                          "mensiversary",
                          "bimonthly_first_and_fifteenth",
                          "bimonthly_fifteenth_and_last"
                        ],
                        "example": "all_days"
                      },
                      "carry_over_days": {
                        "type": "integer",
                        "description": "How many units can carry over between cycles",
                        "example": 15
                      },
                      "carry_over_units_in_cents": {
                        "type": "integer",
                        "description": "How many units can carry over between cycles multiplied by 100",
                        "example": 1500
                      },
                      "count_holiday_as_workable": {
                        "type": "boolean",
                        "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                      },
                      "cycle_length": {
                        "type": "integer",
                        "description": "How many months does each allowance cycle last",
                        "example": 12
                      },
                      "cycle_start": {
                        "type": "string",
                        "description": "When does the cycle start.",
                        "example": "jan"
                      },
                      "days_type": {
                        "type": "string",
                        "description": "Indicates if the allowance is based on working on calendar days.",
                        "enum": [
                          "working_days",
                          "natural_days",
                          "natural_days_only_range",
                          "french_calendar_days",
                          "french_ouvres"
                        ],
                        "example": "working_days"
                      },
                      "employee_carry_over_starting_year": {
                        "type": "integer",
                        "description": "When does the carryover start",
                        "example": 1
                      },
                      "expire_in_months": {
                        "type": "integer",
                        "description": "When does the carryover expire in months.",
                        "example": 6
                      },
                      "frequency": {
                        "type": "string",
                        "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                        "enum": [
                          "monthly_flexible",
                          "yearly",
                          "lifetime"
                        ],
                        "example": "yearly"
                      },
                      "holiday_allowance_in_cents": {
                        "type": "integer",
                        "description": "Base amount of holiday allowance units multiplied by 100",
                        "example": 2300
                      },
                      "leave_type_ids": {
                        "type": "array",
                        "description": "An array of leave type ids associated with that allowance",
                        "example": [
                          1,
                          2,
                          3,
                          4
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "maximum_amount_in_cents": {
                        "type": "integer",
                        "description": "Maximum the allowance can reach on accrued",
                        "example": 2800
                      },
                      "name": {
                        "type": "string",
                        "description": "Allowance name set by the user",
                        "example": "Holiday Allowance"
                      },
                      "negative_counter_type": {
                        "type": "string",
                        "description": "Whether the allowance allows to request more days than available",
                        "enum": [
                          "negative_counter_disabled",
                          "negative_counter_enabled"
                        ],
                        "example": "negative_counter_disabled"
                      },
                      "position": {
                        "type": "integer",
                        "description": "Indicates the position in the allowance when rendering them in UI",
                        "example": 0
                      },
                      "proration_type": {
                        "type": "string",
                        "description": "Whether the allowance has proration enabled or not.",
                        "enum": [
                          "proration_enabled",
                          "proration_disabled"
                        ],
                        "example": "proration_enabled"
                      },
                      "pto_proratio_enabled": {
                        "type": "boolean",
                        "description": "Whether the allowance days are prorrated or not"
                      },
                      "range_type": {
                        "type": "string",
                        "description": "Configures how leaves duration is handled.",
                        "enum": [
                          "exact_range",
                          "extra_non_working_days_at_end"
                        ],
                        "example": "working_days"
                      },
                      "rounding": {
                        "type": "string",
                        "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                        "enum": [
                          "half_day",
                          "decimals",
                          "quarters",
                          "round_up"
                        ],
                        "example": "half_day"
                      },
                      "send_notification": {
                        "type": "boolean"
                      },
                      "source_units": {
                        "type": "string",
                        "description": "This field configures the type of allowance (fixed balance, based on worked time)",
                        "enum": [
                          "base_units",
                          "overtime_units",
                          "by_worked_time"
                        ],
                        "example": "base_units"
                      },
                      "tenure_period_transition": {
                        "type": "string",
                        "description": "In case the allowance has tenure periods, when is this tenure applied.",
                        "enum": [
                          "beginning_of_cycle",
                          "end_of_cycle",
                          "after_milestone"
                        ],
                        "example": "beginning_of_cycle"
                      },
                      "tenure_periods": {
                        "type": "array",
                        "description": "The tenure periods associated with the allowance.",
                        "example": [
                          {
                            "id": 1,
                            "period_type": "years",
                            "period_length": 1,
                            "adjustment_in_cents": 100,
                            "max_cap_in_cents": 100,
                            "time_worked_based_hours_accrued_in_cents": 100,
                            "time_worked_based_per_hours_worked_in_cents": 100,
                            "balance_type": "fixed_balance"
                          }
                        ],
                        "items": {}
                      },
                      "tenure_periods_enabled": {
                        "type": "boolean",
                        "description": "Whether the allowance has tenure periods enabled or not."
                      },
                      "timeoff_cycle": {
                        "type": "string",
                        "description": "Value to indicate how the allowance cycle is configured. Its an abbreviation of the first and last month.",
                        "example": "jan_dec"
                      },
                      "timeoff_policy_id": {
                        "type": "integer",
                        "description": "The Id of the policy to which the allowance belongs to",
                        "example": 1
                      },
                      "unlimited_accrued_hours": {
                        "type": "boolean",
                        "description": "Flag to indicate if there is unlimited accrual."
                      },
                      "unlimited_carry_over": {
                        "type": "boolean",
                        "description": "Flag to indicate if there is unlimited carry over."
                      },
                      "unlimited_carry_over_expiration": {
                        "type": "boolean",
                        "description": "Boolean to flag if carryover does not expire"
                      },
                      "unlimited_holidays": {
                        "type": "boolean",
                        "description": "Flag to indicate that the allowance has unlimited available days"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timeoff > Allowance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a new Time off allowance",
        "summary": "Creates an Allowance",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allowance_type",
                    "available_days",
                    "count_holiday_as_workable",
                    "leave_type_ids",
                    "name",
                    "proration_type",
                    "rounding",
                    "tenure_periods",
                    "timeoff_cycle",
                    "timeoff_policy_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance",
                      "example": 1
                    },
                    "accrued_denominator_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                      "example": 1000
                    },
                    "accrued_factor_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                      "example": 10
                    },
                    "accrued_units_availability": {
                      "type": "string",
                      "description": "When can the acrrued units be spent.",
                      "enum": [
                        "current_cycle",
                        "next_cycle"
                      ],
                      "example": "current_cycle"
                    },
                    "allowance_type": {
                      "type": "string",
                      "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
                      "enum": [
                        "days",
                        "hours"
                      ],
                      "example": "days"
                    },
                    "available_days": {
                      "type": "string",
                      "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                      "enum": [
                        "all_days",
                        "generated_days",
                        "generated_days_monthly",
                        "generated_days_monthly_first_day",
                        "monthly_fifteenth",
                        "mensiversary",
                        "bimonthly_first_and_fifteenth",
                        "bimonthly_fifteenth_and_last"
                      ],
                      "example": "all_days"
                    },
                    "carry_over_days": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles",
                      "example": 15
                    },
                    "carry_over_units_in_cents": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles multiplied by 100",
                      "example": 1500
                    },
                    "count_holiday_as_workable": {
                      "type": "boolean",
                      "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                    },
                    "cycle_length": {
                      "type": "integer",
                      "description": "How many months does each allowance cycle last",
                      "example": 12
                    },
                    "cycle_start": {
                      "type": "string",
                      "description": "When does the cycle start.",
                      "example": "jan"
                    },
                    "days_type": {
                      "type": "string",
                      "description": "Indicates if the allowance is based on working on calendar days.",
                      "enum": [
                        "working_days",
                        "natural_days",
                        "natural_days_only_range",
                        "french_calendar_days",
                        "french_ouvres"
                      ],
                      "example": "working_days"
                    },
                    "employee_carry_over_starting_year": {
                      "type": "integer",
                      "description": "When does the carryover start",
                      "example": 1
                    },
                    "expire_in_months": {
                      "type": "integer",
                      "description": "When does the carryover expire in months.",
                      "example": 6
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                      "enum": [
                        "monthly_flexible",
                        "yearly",
                        "lifetime"
                      ],
                      "example": "yearly"
                    },
                    "holiday_allowance_in_cents": {
                      "type": "integer",
                      "description": "Base amount of holiday allowance units multiplied by 100",
                      "example": 2300
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "An array of leave type ids associated with that allowance",
                      "example": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "maximum_amount_in_cents": {
                      "type": "integer",
                      "description": "Maximum the allowance can reach on accrued",
                      "example": 2800
                    },
                    "name": {
                      "type": "string",
                      "description": "Allowance name set by the user",
                      "example": "Holiday Allowance"
                    },
                    "negative_counter_type": {
                      "type": "string",
                      "description": "Whether the allowance allows to request more days than available",
                      "enum": [
                        "negative_counter_disabled",
                        "negative_counter_enabled"
                      ],
                      "example": "negative_counter_disabled"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Indicates the position in the allowance when rendering them in UI",
                      "example": 0
                    },
                    "proration_type": {
                      "type": "string",
                      "description": "Whether the allowance has proration enabled or not.",
                      "enum": [
                        "proration_enabled",
                        "proration_disabled"
                      ],
                      "example": "proration_enabled"
                    },
                    "pto_proratio_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance days are prorrated or not"
                    },
                    "range_type": {
                      "type": "string",
                      "description": "Configures how leaves duration is handled.",
                      "enum": [
                        "exact_range",
                        "extra_non_working_days_at_end"
                      ],
                      "example": "working_days"
                    },
                    "rounding": {
                      "type": "string",
                      "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                      "enum": [
                        "half_day",
                        "decimals",
                        "quarters",
                        "round_up"
                      ],
                      "example": "half_day"
                    },
                    "send_notification": {
                      "type": "boolean"
                    },
                    "source_units": {
                      "type": "string",
                      "description": "This field configures the type of allowance (fixed balance, based on worked time)",
                      "enum": [
                        "base_units",
                        "overtime_units",
                        "by_worked_time"
                      ],
                      "example": "base_units"
                    },
                    "tenure_period_transition": {
                      "type": "string",
                      "description": "In case the allowance has tenure periods, when is this tenure applied.",
                      "enum": [
                        "beginning_of_cycle",
                        "end_of_cycle",
                        "after_milestone"
                      ],
                      "example": "beginning_of_cycle"
                    },
                    "tenure_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "id": 1,
                          "period_type": "years",
                          "period_length": 1,
                          "adjustment_in_cents": 100,
                          "max_cap_in_cents": 100,
                          "time_worked_based_hours_accrued_in_cents": 100,
                          "time_worked_based_per_hours_worked_in_cents": 100,
                          "balance_type": "fixed_balance"
                        }
                      ],
                      "items": {}
                    },
                    "tenure_periods_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance has tenure periods enabled or not."
                    },
                    "timeoff_cycle": {
                      "type": "string",
                      "description": "Value to indicate how the allowance cycle is configured. Its an abbreviation of the first and last month.",
                      "example": "jan_dec"
                    },
                    "timeoff_policy_id": {
                      "type": "integer",
                      "description": "The Id of the policy to which the allowance belongs to",
                      "example": 1
                    },
                    "unlimited_accrued_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited accrual."
                    },
                    "unlimited_carry_over": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited carry over."
                    },
                    "unlimited_carry_over_expiration": {
                      "type": "boolean",
                      "description": "Boolean to flag if carryover does not expire"
                    },
                    "unlimited_holidays": {
                      "type": "boolean",
                      "description": "Flag to indicate that the allowance has unlimited available days"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accrued_units_availability",
                  "allowance_type",
                  "available_days",
                  "count_holiday_as_workable",
                  "cycle_start",
                  "days_type",
                  "holiday_allowance_in_cents",
                  "leave_type_ids",
                  "name",
                  "negative_counter_type",
                  "proration_type",
                  "pto_proratio_enabled",
                  "rounding",
                  "source_units",
                  "tenure_periods",
                  "timeoff_policy_id",
                  "unlimited_accrued_hours",
                  "unlimited_carry_over",
                  "unlimited_carry_over_expiration",
                  "unlimited_holidays"
                ],
                "properties": {
                  "accrued_denominator_in_cents": {
                    "type": "integer",
                    "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                    "example": 1000
                  },
                  "accrued_factor_in_cents": {
                    "type": "integer",
                    "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                    "example": 10
                  },
                  "accrued_units_availability": {
                    "type": "string",
                    "description": "When can the accrued units be spent.",
                    "enum": [
                      "current_cycle",
                      "next_cycle"
                    ],
                    "example": "current_cycle"
                  },
                  "allowance_type": {
                    "type": "string",
                    "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
                    "enum": [
                      "days",
                      "hours"
                    ],
                    "example": "days"
                  },
                  "available_days": {
                    "type": "string",
                    "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                    "enum": [
                      "all_days",
                      "generated_days",
                      "generated_days_monthly",
                      "generated_days_monthly_first_day",
                      "monthly_fifteenth",
                      "mensiversary",
                      "bimonthly_first_and_fifteenth",
                      "bimonthly_fifteenth_and_last"
                    ],
                    "example": "all_days"
                  },
                  "carry_over_units_in_cents": {
                    "type": "integer",
                    "description": "How many units can carry over between cycles multiplied by 100",
                    "example": 1500
                  },
                  "count_holiday_as_workable": {
                    "type": "boolean",
                    "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                  },
                  "cycle_length": {
                    "type": "integer",
                    "description": "How many months does each allowance cycle last",
                    "example": 12
                  },
                  "cycle_start": {
                    "type": "string",
                    "description": "When does the cycle start.",
                    "enum": [
                      "jan",
                      "feb",
                      "mar",
                      "apr",
                      "may",
                      "jun",
                      "jul",
                      "aug",
                      "sep",
                      "oct",
                      "nov",
                      "dec",
                      "employee_hired_date"
                    ],
                    "example": "jan"
                  },
                  "days_type": {
                    "type": "string",
                    "description": "Indicates if the allowance is based on working on calendar days.",
                    "enum": [
                      "working_days",
                      "natural_days",
                      "natural_days_only_range",
                      "french_calendar_days",
                      "french_ouvres"
                    ],
                    "example": "working_days"
                  },
                  "expire_in_months": {
                    "type": "integer",
                    "description": "When does the carryover expire in months.",
                    "example": 6
                  },
                  "frequency": {
                    "type": "string",
                    "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                    "enum": [
                      "monthly_flexible",
                      "yearly",
                      "lifetime"
                    ],
                    "example": "yearly"
                  },
                  "holiday_allowance_in_cents": {
                    "type": "integer",
                    "description": "Base amount of holiday allowance units multiplied by 100",
                    "example": 2300
                  },
                  "leave_type_ids": {
                    "type": "array",
                    "description": "An array of leave type ids associated with that allowance",
                    "example": [
                      1,
                      2,
                      3,
                      4
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "maximum_amount_in_cents": {
                    "type": "integer",
                    "description": "Maximum the allowance can reach on accrued",
                    "example": 2800
                  },
                  "name": {
                    "type": "string",
                    "description": "Allowance name set by the user",
                    "example": "Holiday Allowance"
                  },
                  "negative_counter_type": {
                    "type": "string",
                    "description": "Whether the allowance allows to request more days than available.",
                    "enum": [
                      "negative_counter_disabled",
                      "negative_counter_enabled"
                    ],
                    "example": "negative_counter_disabled"
                  },
                  "position": {
                    "type": "integer",
                    "description": "Indicates the position in the allowance when rendering them in UI",
                    "example": 0
                  },
                  "proration_type": {
                    "type": "string",
                    "description": "Whether the allowance has proration enabled or not.",
                    "enum": [
                      "proration_enabled",
                      "proration_disabled"
                    ],
                    "example": "proration_enabled"
                  },
                  "pto_proratio_enabled": {
                    "type": "boolean",
                    "description": "Whether the allowance days are prorated or not"
                  },
                  "range_type": {
                    "type": "string",
                    "description": "Configures how leaves duration is handled.",
                    "enum": [
                      "exact_range",
                      "extra_non_working_days_at_end"
                    ],
                    "example": "working_days"
                  },
                  "rounding": {
                    "type": "string",
                    "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                    "enum": [
                      "half_day",
                      "decimals",
                      "quarters",
                      "round_up"
                    ],
                    "example": "half_day"
                  },
                  "source_units": {
                    "type": "string",
                    "description": "This field configures the type of allowance (fixed balance, based on worked time)",
                    "enum": [
                      "base_units",
                      "overtime_units",
                      "by_worked_time"
                    ],
                    "example": "base_units"
                  },
                  "tenure_period_transition": {
                    "type": "string",
                    "description": "In case the allowance has tenure periods, when is this tenure applied.",
                    "enum": [
                      "beginning_of_cycle",
                      "end_of_cycle",
                      "after_milestone"
                    ],
                    "example": "beginning_of_cycle"
                  },
                  "tenure_periods_enabled": {
                    "type": "boolean",
                    "description": "Whether the allowance has tenure periods enabled or not."
                  },
                  "tenure_periods": {
                    "type": "array",
                    "description": "The tenure periods associated with the allowance.",
                    "example": [
                      {
                        "period_type": "years",
                        "period_length": 1,
                        "adjustment_in_cents": 100,
                        "timeoff_allowance_id": 23,
                        "max_cap_in_cents": 100,
                        "time_worked_based_hours_accrued_in_cents": 100,
                        "time_worked_based_per_hours_worked_in_cents": 100,
                        "balance_type": "fixed_balance"
                      }
                    ],
                    "items": {}
                  },
                  "timeoff_policy_id": {
                    "type": "integer",
                    "description": "The Id of the policy to which the allowance belongs to",
                    "example": 1
                  },
                  "unlimited_accrued_hours": {
                    "type": "boolean",
                    "description": "Flag to indicate if there is unlimited accrual."
                  },
                  "unlimited_carry_over": {
                    "type": "boolean",
                    "description": "Flag to indicate if there is unlimited carry over."
                  },
                  "unlimited_carry_over_expiration": {
                    "type": "boolean",
                    "description": "Boolean to flag if carryover does not expire"
                  },
                  "unlimited_holidays": {
                    "type": "boolean",
                    "description": "Flag to indicate that the allowance has unlimited available days"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/allowances/{id}": {
      "get": {
        "tags": [
          "Timeoff > Allowance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves allowances",
        "summary": "Reads a single Allowance",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allowance_type",
                    "available_days",
                    "count_holiday_as_workable",
                    "leave_type_ids",
                    "name",
                    "proration_type",
                    "rounding",
                    "tenure_periods",
                    "timeoff_cycle",
                    "timeoff_policy_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance",
                      "example": 1
                    },
                    "accrued_denominator_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                      "example": 1000
                    },
                    "accrued_factor_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                      "example": 10
                    },
                    "accrued_units_availability": {
                      "type": "string",
                      "description": "When can the acrrued units be spent.",
                      "enum": [
                        "current_cycle",
                        "next_cycle"
                      ],
                      "example": "current_cycle"
                    },
                    "allowance_type": {
                      "type": "string",
                      "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
                      "enum": [
                        "days",
                        "hours"
                      ],
                      "example": "days"
                    },
                    "available_days": {
                      "type": "string",
                      "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                      "enum": [
                        "all_days",
                        "generated_days",
                        "generated_days_monthly",
                        "generated_days_monthly_first_day",
                        "monthly_fifteenth",
                        "mensiversary",
                        "bimonthly_first_and_fifteenth",
                        "bimonthly_fifteenth_and_last"
                      ],
                      "example": "all_days"
                    },
                    "carry_over_days": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles",
                      "example": 15
                    },
                    "carry_over_units_in_cents": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles multiplied by 100",
                      "example": 1500
                    },
                    "count_holiday_as_workable": {
                      "type": "boolean",
                      "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                    },
                    "cycle_length": {
                      "type": "integer",
                      "description": "How many months does each allowance cycle last",
                      "example": 12
                    },
                    "cycle_start": {
                      "type": "string",
                      "description": "When does the cycle start.",
                      "example": "jan"
                    },
                    "days_type": {
                      "type": "string",
                      "description": "Indicates if the allowance is based on working on calendar days.",
                      "enum": [
                        "working_days",
                        "natural_days",
                        "natural_days_only_range",
                        "french_calendar_days",
                        "french_ouvres"
                      ],
                      "example": "working_days"
                    },
                    "employee_carry_over_starting_year": {
                      "type": "integer",
                      "description": "When does the carryover start",
                      "example": 1
                    },
                    "expire_in_months": {
                      "type": "integer",
                      "description": "When does the carryover expire in months.",
                      "example": 6
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                      "enum": [
                        "monthly_flexible",
                        "yearly",
                        "lifetime"
                      ],
                      "example": "yearly"
                    },
                    "holiday_allowance_in_cents": {
                      "type": "integer",
                      "description": "Base amount of holiday allowance units multiplied by 100",
                      "example": 2300
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "An array of leave type ids associated with that allowance",
                      "example": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "maximum_amount_in_cents": {
                      "type": "integer",
                      "description": "Maximum the allowance can reach on accrued",
                      "example": 2800
                    },
                    "name": {
                      "type": "string",
                      "description": "Allowance name set by the user",
                      "example": "Holiday Allowance"
                    },
                    "negative_counter_type": {
                      "type": "string",
                      "description": "Whether the allowance allows to request more days than available",
                      "enum": [
                        "negative_counter_disabled",
                        "negative_counter_enabled"
                      ],
                      "example": "negative_counter_disabled"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Indicates the position in the allowance when rendering them in UI",
                      "example": 0
                    },
                    "proration_type": {
                      "type": "string",
                      "description": "Whether the allowance has proration enabled or not.",
                      "enum": [
                        "proration_enabled",
                        "proration_disabled"
                      ],
                      "example": "proration_enabled"
                    },
                    "pto_proratio_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance days are prorrated or not"
                    },
                    "range_type": {
                      "type": "string",
                      "description": "Configures how leaves duration is handled.",
                      "enum": [
                        "exact_range",
                        "extra_non_working_days_at_end"
                      ],
                      "example": "working_days"
                    },
                    "rounding": {
                      "type": "string",
                      "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                      "enum": [
                        "half_day",
                        "decimals",
                        "quarters",
                        "round_up"
                      ],
                      "example": "half_day"
                    },
                    "send_notification": {
                      "type": "boolean"
                    },
                    "source_units": {
                      "type": "string",
                      "description": "This field configures the type of allowance (fixed balance, based on worked time)",
                      "enum": [
                        "base_units",
                        "overtime_units",
                        "by_worked_time"
                      ],
                      "example": "base_units"
                    },
                    "tenure_period_transition": {
                      "type": "string",
                      "description": "In case the allowance has tenure periods, when is this tenure applied.",
                      "enum": [
                        "beginning_of_cycle",
                        "end_of_cycle",
                        "after_milestone"
                      ],
                      "example": "beginning_of_cycle"
                    },
                    "tenure_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "id": 1,
                          "period_type": "years",
                          "period_length": 1,
                          "adjustment_in_cents": 100,
                          "max_cap_in_cents": 100,
                          "time_worked_based_hours_accrued_in_cents": 100,
                          "time_worked_based_per_hours_worked_in_cents": 100,
                          "balance_type": "fixed_balance"
                        }
                      ],
                      "items": {}
                    },
                    "tenure_periods_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance has tenure periods enabled or not."
                    },
                    "timeoff_cycle": {
                      "type": "string",
                      "description": "Value to indicate how the allowance cycle is configured. Its an abbreviation of the first and last month.",
                      "example": "jan_dec"
                    },
                    "timeoff_policy_id": {
                      "type": "integer",
                      "description": "The Id of the policy to which the allowance belongs to",
                      "example": 1
                    },
                    "unlimited_accrued_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited accrual."
                    },
                    "unlimited_carry_over": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited carry over."
                    },
                    "unlimited_carry_over_expiration": {
                      "type": "boolean",
                      "description": "Boolean to flag if carryover does not expire"
                    },
                    "unlimited_holidays": {
                      "type": "boolean",
                      "description": "Flag to indicate that the allowance has unlimited available days"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timeoff > Allowance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates an existing Time Off Allowance",
        "summary": "Updates an Allowance",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allowance_type",
                    "available_days",
                    "count_holiday_as_workable",
                    "leave_type_ids",
                    "name",
                    "proration_type",
                    "rounding",
                    "tenure_periods",
                    "timeoff_cycle",
                    "timeoff_policy_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance",
                      "example": 1
                    },
                    "accrued_denominator_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                      "example": 1000
                    },
                    "accrued_factor_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                      "example": 10
                    },
                    "accrued_units_availability": {
                      "type": "string",
                      "description": "When can the acrrued units be spent.",
                      "enum": [
                        "current_cycle",
                        "next_cycle"
                      ],
                      "example": "current_cycle"
                    },
                    "allowance_type": {
                      "type": "string",
                      "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
                      "enum": [
                        "days",
                        "hours"
                      ],
                      "example": "days"
                    },
                    "available_days": {
                      "type": "string",
                      "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                      "enum": [
                        "all_days",
                        "generated_days",
                        "generated_days_monthly",
                        "generated_days_monthly_first_day",
                        "monthly_fifteenth",
                        "mensiversary",
                        "bimonthly_first_and_fifteenth",
                        "bimonthly_fifteenth_and_last"
                      ],
                      "example": "all_days"
                    },
                    "carry_over_days": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles",
                      "example": 15
                    },
                    "carry_over_units_in_cents": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles multiplied by 100",
                      "example": 1500
                    },
                    "count_holiday_as_workable": {
                      "type": "boolean",
                      "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                    },
                    "cycle_length": {
                      "type": "integer",
                      "description": "How many months does each allowance cycle last",
                      "example": 12
                    },
                    "cycle_start": {
                      "type": "string",
                      "description": "When does the cycle start.",
                      "example": "jan"
                    },
                    "days_type": {
                      "type": "string",
                      "description": "Indicates if the allowance is based on working on calendar days.",
                      "enum": [
                        "working_days",
                        "natural_days",
                        "natural_days_only_range",
                        "french_calendar_days",
                        "french_ouvres"
                      ],
                      "example": "working_days"
                    },
                    "employee_carry_over_starting_year": {
                      "type": "integer",
                      "description": "When does the carryover start",
                      "example": 1
                    },
                    "expire_in_months": {
                      "type": "integer",
                      "description": "When does the carryover expire in months.",
                      "example": 6
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                      "enum": [
                        "monthly_flexible",
                        "yearly",
                        "lifetime"
                      ],
                      "example": "yearly"
                    },
                    "holiday_allowance_in_cents": {
                      "type": "integer",
                      "description": "Base amount of holiday allowance units multiplied by 100",
                      "example": 2300
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "An array of leave type ids associated with that allowance",
                      "example": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "maximum_amount_in_cents": {
                      "type": "integer",
                      "description": "Maximum the allowance can reach on accrued",
                      "example": 2800
                    },
                    "name": {
                      "type": "string",
                      "description": "Allowance name set by the user",
                      "example": "Holiday Allowance"
                    },
                    "negative_counter_type": {
                      "type": "string",
                      "description": "Whether the allowance allows to request more days than available",
                      "enum": [
                        "negative_counter_disabled",
                        "negative_counter_enabled"
                      ],
                      "example": "negative_counter_disabled"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Indicates the position in the allowance when rendering them in UI",
                      "example": 0
                    },
                    "proration_type": {
                      "type": "string",
                      "description": "Whether the allowance has proration enabled or not.",
                      "enum": [
                        "proration_enabled",
                        "proration_disabled"
                      ],
                      "example": "proration_enabled"
                    },
                    "pto_proratio_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance days are prorrated or not"
                    },
                    "range_type": {
                      "type": "string",
                      "description": "Configures how leaves duration is handled.",
                      "enum": [
                        "exact_range",
                        "extra_non_working_days_at_end"
                      ],
                      "example": "working_days"
                    },
                    "rounding": {
                      "type": "string",
                      "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                      "enum": [
                        "half_day",
                        "decimals",
                        "quarters",
                        "round_up"
                      ],
                      "example": "half_day"
                    },
                    "send_notification": {
                      "type": "boolean"
                    },
                    "source_units": {
                      "type": "string",
                      "description": "This field configures the type of allowance (fixed balance, based on worked time)",
                      "enum": [
                        "base_units",
                        "overtime_units",
                        "by_worked_time"
                      ],
                      "example": "base_units"
                    },
                    "tenure_period_transition": {
                      "type": "string",
                      "description": "In case the allowance has tenure periods, when is this tenure applied.",
                      "enum": [
                        "beginning_of_cycle",
                        "end_of_cycle",
                        "after_milestone"
                      ],
                      "example": "beginning_of_cycle"
                    },
                    "tenure_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "id": 1,
                          "period_type": "years",
                          "period_length": 1,
                          "adjustment_in_cents": 100,
                          "max_cap_in_cents": 100,
                          "time_worked_based_hours_accrued_in_cents": 100,
                          "time_worked_based_per_hours_worked_in_cents": 100,
                          "balance_type": "fixed_balance"
                        }
                      ],
                      "items": {}
                    },
                    "tenure_periods_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance has tenure periods enabled or not."
                    },
                    "timeoff_cycle": {
                      "type": "string",
                      "description": "Value to indicate how the allowance cycle is configured. Its an abbreviation of the first and last month.",
                      "example": "jan_dec"
                    },
                    "timeoff_policy_id": {
                      "type": "integer",
                      "description": "The Id of the policy to which the allowance belongs to",
                      "example": 1
                    },
                    "unlimited_accrued_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited accrual."
                    },
                    "unlimited_carry_over": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited carry over."
                    },
                    "unlimited_carry_over_expiration": {
                      "type": "boolean",
                      "description": "Boolean to flag if carryover does not expire"
                    },
                    "unlimited_holidays": {
                      "type": "boolean",
                      "description": "Flag to indicate that the allowance has unlimited available days"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "accrued_denominator_in_cents": {
                    "type": "integer",
                    "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                    "example": 1000
                  },
                  "accrued_factor_in_cents": {
                    "type": "integer",
                    "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                    "example": 10
                  },
                  "available_days": {
                    "type": "string",
                    "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                    "enum": [
                      "all_days",
                      "generated_days",
                      "generated_days_monthly",
                      "generated_days_monthly_first_day",
                      "monthly_fifteenth",
                      "mensiversary",
                      "bimonthly_first_and_fifteenth",
                      "bimonthly_fifteenth_and_last"
                    ],
                    "example": "all_days"
                  },
                  "carry_over_units_in_cents": {
                    "type": "integer",
                    "description": "How many units can carry over between cycles multiplied by 100",
                    "example": 1500
                  },
                  "count_holiday_as_workable": {
                    "type": "boolean",
                    "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                  },
                  "days_type": {
                    "type": "string",
                    "description": "Indicates if the allowance is based on working on calendar days.",
                    "enum": [
                      "working_days",
                      "natural_days",
                      "natural_days_only_range",
                      "french_calendar_days",
                      "french_ouvres"
                    ],
                    "example": "working_days"
                  },
                  "expire_in_months": {
                    "type": "integer",
                    "description": "When does the carryover expire in months.",
                    "example": 6
                  },
                  "frequency": {
                    "type": "string",
                    "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                    "enum": [
                      "monthly_flexible",
                      "yearly",
                      "lifetime"
                    ],
                    "example": "yearly"
                  },
                  "holiday_allowance_in_cents": {
                    "type": "integer",
                    "description": "Base amount of holiday allowance units multiplied by 100",
                    "example": 2300
                  },
                  "leave_type_ids": {
                    "type": "array",
                    "description": "An array of leave type ids associated with that allowance",
                    "example": [
                      1,
                      2,
                      3,
                      4
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "maximum_amount_in_cents": {
                    "type": "integer",
                    "description": "Maximum the allowance can reach on accrued",
                    "example": 2800
                  },
                  "name": {
                    "type": "string",
                    "description": "Allowance name set by the user",
                    "example": "Holiday Allowance"
                  },
                  "negative_counter_type": {
                    "type": "string",
                    "description": "Whether the allowance allows to request more days than available.",
                    "enum": [
                      "negative_counter_disabled",
                      "negative_counter_enabled"
                    ],
                    "example": "negative_counter_disabled"
                  },
                  "position": {
                    "type": "integer",
                    "description": "Indicates the position in the allowance when rendering them in UI",
                    "example": 0
                  },
                  "proration_type": {
                    "type": "string",
                    "description": "Whether the allowance has proration enabled or not.",
                    "enum": [
                      "proration_enabled",
                      "proration_disabled"
                    ],
                    "example": "proration_enabled"
                  },
                  "pto_proratio_enabled": {
                    "type": "boolean",
                    "description": "Whether the allowance days are prorated or not"
                  },
                  "range_type": {
                    "type": "string",
                    "description": "Configures how leaves duration is handled.",
                    "enum": [
                      "exact_range",
                      "extra_non_working_days_at_end"
                    ],
                    "example": "working_days"
                  },
                  "rounding": {
                    "type": "string",
                    "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                    "enum": [
                      "half_day",
                      "decimals",
                      "quarters",
                      "round_up"
                    ],
                    "example": "half_day"
                  },
                  "tenure_period_transition": {
                    "type": "string",
                    "description": "In case the allowance has tenure periods, when is this tenure applied.",
                    "enum": [
                      "beginning_of_cycle",
                      "end_of_cycle",
                      "after_milestone"
                    ],
                    "example": "beginning_of_cycle"
                  },
                  "tenure_periods_enabled": {
                    "type": "boolean",
                    "description": "Whether the allowance has tenure periods enabled or not."
                  },
                  "tenure_periods": {
                    "type": "array",
                    "description": "The tenure periods associated with the allowance.",
                    "example": [
                      {
                        "period_type": "years",
                        "period_length": 1,
                        "adjustment_in_cents": 100,
                        "timeoff_allowance_id": 23,
                        "max_cap_in_cents": 100,
                        "time_worked_based_hours_accrued_in_cents": 100,
                        "time_worked_based_per_hours_worked_in_cents": 100,
                        "balance_type": "fixed_balance"
                      }
                    ],
                    "items": {}
                  },
                  "unlimited_accrued_hours": {
                    "type": "boolean",
                    "description": "Flag to indicate if there is unlimited accrual."
                  },
                  "unlimited_carry_over": {
                    "type": "boolean",
                    "description": "Flag to indicate if there is unlimited carry over."
                  },
                  "unlimited_carry_over_expiration": {
                    "type": "boolean",
                    "description": "Boolean to flag if carryover does not expire"
                  },
                  "unlimited_holidays": {
                    "type": "boolean",
                    "description": "Flag to indicate that the allowance has unlimited available days"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timeoff > Allowance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes an allowance",
        "summary": "Deletes an Allowance",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allowance_type",
                    "available_days",
                    "count_holiday_as_workable",
                    "leave_type_ids",
                    "name",
                    "proration_type",
                    "rounding",
                    "tenure_periods",
                    "timeoff_cycle",
                    "timeoff_policy_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance",
                      "example": 1
                    },
                    "accrued_denominator_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                      "example": 1000
                    },
                    "accrued_factor_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                      "example": 10
                    },
                    "accrued_units_availability": {
                      "type": "string",
                      "description": "When can the acrrued units be spent.",
                      "enum": [
                        "current_cycle",
                        "next_cycle"
                      ],
                      "example": "current_cycle"
                    },
                    "allowance_type": {
                      "type": "string",
                      "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
                      "enum": [
                        "days",
                        "hours"
                      ],
                      "example": "days"
                    },
                    "available_days": {
                      "type": "string",
                      "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                      "enum": [
                        "all_days",
                        "generated_days",
                        "generated_days_monthly",
                        "generated_days_monthly_first_day",
                        "monthly_fifteenth",
                        "mensiversary",
                        "bimonthly_first_and_fifteenth",
                        "bimonthly_fifteenth_and_last"
                      ],
                      "example": "all_days"
                    },
                    "carry_over_days": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles",
                      "example": 15
                    },
                    "carry_over_units_in_cents": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles multiplied by 100",
                      "example": 1500
                    },
                    "count_holiday_as_workable": {
                      "type": "boolean",
                      "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                    },
                    "cycle_length": {
                      "type": "integer",
                      "description": "How many months does each allowance cycle last",
                      "example": 12
                    },
                    "cycle_start": {
                      "type": "string",
                      "description": "When does the cycle start.",
                      "example": "jan"
                    },
                    "days_type": {
                      "type": "string",
                      "description": "Indicates if the allowance is based on working on calendar days.",
                      "enum": [
                        "working_days",
                        "natural_days",
                        "natural_days_only_range",
                        "french_calendar_days",
                        "french_ouvres"
                      ],
                      "example": "working_days"
                    },
                    "employee_carry_over_starting_year": {
                      "type": "integer",
                      "description": "When does the carryover start",
                      "example": 1
                    },
                    "expire_in_months": {
                      "type": "integer",
                      "description": "When does the carryover expire in months.",
                      "example": 6
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                      "enum": [
                        "monthly_flexible",
                        "yearly",
                        "lifetime"
                      ],
                      "example": "yearly"
                    },
                    "holiday_allowance_in_cents": {
                      "type": "integer",
                      "description": "Base amount of holiday allowance units multiplied by 100",
                      "example": 2300
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "An array of leave type ids associated with that allowance",
                      "example": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "maximum_amount_in_cents": {
                      "type": "integer",
                      "description": "Maximum the allowance can reach on accrued",
                      "example": 2800
                    },
                    "name": {
                      "type": "string",
                      "description": "Allowance name set by the user",
                      "example": "Holiday Allowance"
                    },
                    "negative_counter_type": {
                      "type": "string",
                      "description": "Whether the allowance allows to request more days than available",
                      "enum": [
                        "negative_counter_disabled",
                        "negative_counter_enabled"
                      ],
                      "example": "negative_counter_disabled"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Indicates the position in the allowance when rendering them in UI",
                      "example": 0
                    },
                    "proration_type": {
                      "type": "string",
                      "description": "Whether the allowance has proration enabled or not.",
                      "enum": [
                        "proration_enabled",
                        "proration_disabled"
                      ],
                      "example": "proration_enabled"
                    },
                    "pto_proratio_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance days are prorrated or not"
                    },
                    "range_type": {
                      "type": "string",
                      "description": "Configures how leaves duration is handled.",
                      "enum": [
                        "exact_range",
                        "extra_non_working_days_at_end"
                      ],
                      "example": "working_days"
                    },
                    "rounding": {
                      "type": "string",
                      "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                      "enum": [
                        "half_day",
                        "decimals",
                        "quarters",
                        "round_up"
                      ],
                      "example": "half_day"
                    },
                    "send_notification": {
                      "type": "boolean"
                    },
                    "source_units": {
                      "type": "string",
                      "description": "This field configures the type of allowance (fixed balance, based on worked time)",
                      "enum": [
                        "base_units",
                        "overtime_units",
                        "by_worked_time"
                      ],
                      "example": "base_units"
                    },
                    "tenure_period_transition": {
                      "type": "string",
                      "description": "In case the allowance has tenure periods, when is this tenure applied.",
                      "enum": [
                        "beginning_of_cycle",
                        "end_of_cycle",
                        "after_milestone"
                      ],
                      "example": "beginning_of_cycle"
                    },
                    "tenure_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "id": 1,
                          "period_type": "years",
                          "period_length": 1,
                          "adjustment_in_cents": 100,
                          "max_cap_in_cents": 100,
                          "time_worked_based_hours_accrued_in_cents": 100,
                          "time_worked_based_per_hours_worked_in_cents": 100,
                          "balance_type": "fixed_balance"
                        }
                      ],
                      "items": {}
                    },
                    "tenure_periods_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance has tenure periods enabled or not."
                    },
                    "timeoff_cycle": {
                      "type": "string",
                      "description": "Value to indicate how the allowance cycle is configured. Its an abbreviation of the first and last month.",
                      "example": "jan_dec"
                    },
                    "timeoff_policy_id": {
                      "type": "integer",
                      "description": "The Id of the policy to which the allowance belongs to",
                      "example": 1
                    },
                    "unlimited_accrued_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited accrual."
                    },
                    "unlimited_carry_over": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited carry over."
                    },
                    "unlimited_carry_over_expiration": {
                      "type": "boolean",
                      "description": "Boolean to flag if carryover does not expire"
                    },
                    "unlimited_holidays": {
                      "type": "boolean",
                      "description": "Flag to indicate that the allowance has unlimited available days"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/allowances/delete_with_alt_allowance": {
      "post": {
        "tags": [
          "Timeoff > Allowance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes an allowance and migrate the existing incidences in the alternative allowance",
        "summary": "Delete with alt allowances an Allowance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allowance_type",
                    "available_days",
                    "count_holiday_as_workable",
                    "leave_type_ids",
                    "name",
                    "proration_type",
                    "rounding",
                    "tenure_periods",
                    "timeoff_cycle",
                    "timeoff_policy_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance",
                      "example": 1
                    },
                    "accrued_denominator_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
                      "example": 1000
                    },
                    "accrued_factor_in_cents": {
                      "type": "integer",
                      "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
                      "example": 10
                    },
                    "accrued_units_availability": {
                      "type": "string",
                      "description": "When can the acrrued units be spent.",
                      "enum": [
                        "current_cycle",
                        "next_cycle"
                      ],
                      "example": "current_cycle"
                    },
                    "allowance_type": {
                      "type": "string",
                      "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
                      "enum": [
                        "days",
                        "hours"
                      ],
                      "example": "days"
                    },
                    "available_days": {
                      "type": "string",
                      "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
                      "enum": [
                        "all_days",
                        "generated_days",
                        "generated_days_monthly",
                        "generated_days_monthly_first_day",
                        "monthly_fifteenth",
                        "mensiversary",
                        "bimonthly_first_and_fifteenth",
                        "bimonthly_fifteenth_and_last"
                      ],
                      "example": "all_days"
                    },
                    "carry_over_days": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles",
                      "example": 15
                    },
                    "carry_over_units_in_cents": {
                      "type": "integer",
                      "description": "How many units can carry over between cycles multiplied by 100",
                      "example": 1500
                    },
                    "count_holiday_as_workable": {
                      "type": "boolean",
                      "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
                    },
                    "cycle_length": {
                      "type": "integer",
                      "description": "How many months does each allowance cycle last",
                      "example": 12
                    },
                    "cycle_start": {
                      "type": "string",
                      "description": "When does the cycle start.",
                      "example": "jan"
                    },
                    "days_type": {
                      "type": "string",
                      "description": "Indicates if the allowance is based on working on calendar days.",
                      "enum": [
                        "working_days",
                        "natural_days",
                        "natural_days_only_range",
                        "french_calendar_days",
                        "french_ouvres"
                      ],
                      "example": "working_days"
                    },
                    "employee_carry_over_starting_year": {
                      "type": "integer",
                      "description": "When does the carryover start",
                      "example": 1
                    },
                    "expire_in_months": {
                      "type": "integer",
                      "description": "When does the carryover expire in months.",
                      "example": 6
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
                      "enum": [
                        "monthly_flexible",
                        "yearly",
                        "lifetime"
                      ],
                      "example": "yearly"
                    },
                    "holiday_allowance_in_cents": {
                      "type": "integer",
                      "description": "Base amount of holiday allowance units multiplied by 100",
                      "example": 2300
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "An array of leave type ids associated with that allowance",
                      "example": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "maximum_amount_in_cents": {
                      "type": "integer",
                      "description": "Maximum the allowance can reach on accrued",
                      "example": 2800
                    },
                    "name": {
                      "type": "string",
                      "description": "Allowance name set by the user",
                      "example": "Holiday Allowance"
                    },
                    "negative_counter_type": {
                      "type": "string",
                      "description": "Whether the allowance allows to request more days than available",
                      "enum": [
                        "negative_counter_disabled",
                        "negative_counter_enabled"
                      ],
                      "example": "negative_counter_disabled"
                    },
                    "position": {
                      "type": "integer",
                      "description": "Indicates the position in the allowance when rendering them in UI",
                      "example": 0
                    },
                    "proration_type": {
                      "type": "string",
                      "description": "Whether the allowance has proration enabled or not.",
                      "enum": [
                        "proration_enabled",
                        "proration_disabled"
                      ],
                      "example": "proration_enabled"
                    },
                    "pto_proratio_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance days are prorrated or not"
                    },
                    "range_type": {
                      "type": "string",
                      "description": "Configures how leaves duration is handled.",
                      "enum": [
                        "exact_range",
                        "extra_non_working_days_at_end"
                      ],
                      "example": "working_days"
                    },
                    "rounding": {
                      "type": "string",
                      "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
                      "enum": [
                        "half_day",
                        "decimals",
                        "quarters",
                        "round_up"
                      ],
                      "example": "half_day"
                    },
                    "send_notification": {
                      "type": "boolean"
                    },
                    "source_units": {
                      "type": "string",
                      "description": "This field configures the type of allowance (fixed balance, based on worked time)",
                      "enum": [
                        "base_units",
                        "overtime_units",
                        "by_worked_time"
                      ],
                      "example": "base_units"
                    },
                    "tenure_period_transition": {
                      "type": "string",
                      "description": "In case the allowance has tenure periods, when is this tenure applied.",
                      "enum": [
                        "beginning_of_cycle",
                        "end_of_cycle",
                        "after_milestone"
                      ],
                      "example": "beginning_of_cycle"
                    },
                    "tenure_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "id": 1,
                          "period_type": "years",
                          "period_length": 1,
                          "adjustment_in_cents": 100,
                          "max_cap_in_cents": 100,
                          "time_worked_based_hours_accrued_in_cents": 100,
                          "time_worked_based_per_hours_worked_in_cents": 100,
                          "balance_type": "fixed_balance"
                        }
                      ],
                      "items": {}
                    },
                    "tenure_periods_enabled": {
                      "type": "boolean",
                      "description": "Whether the allowance has tenure periods enabled or not."
                    },
                    "timeoff_cycle": {
                      "type": "string",
                      "description": "Value to indicate how the allowance cycle is configured. Its an abbreviation of the first and last month.",
                      "example": "jan_dec"
                    },
                    "timeoff_policy_id": {
                      "type": "integer",
                      "description": "The Id of the policy to which the allowance belongs to",
                      "example": 1
                    },
                    "unlimited_accrued_hours": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited accrual."
                    },
                    "unlimited_carry_over": {
                      "type": "boolean",
                      "description": "Flag to indicate if there is unlimited carry over."
                    },
                    "unlimited_carry_over_expiration": {
                      "type": "boolean",
                      "description": "Boolean to flag if carryover does not expire"
                    },
                    "unlimited_holidays": {
                      "type": "boolean",
                      "description": "Flag to indicate that the allowance has unlimited available days"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "alt_allowance_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "alt_allowance_id": {
                    "type": "integer",
                    "description": "Allowance id sent to migrate existing incidences from the deleted allowance to the alternative allowance",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/allowance_incidences": {
      "get": {
        "tags": [
          "Timeoff > AllowanceIncidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Allowance incidences",
        "summary": "Reads all Allowance incidences",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "timeoff_allowance_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "employee_id",
                      "days_in_cents",
                      "timeoff_allowance_id",
                      "effective_on",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier of the allowance incidence",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Employee id of the affected employee",
                        "example": 1
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional comment regarding the incidence",
                        "example": "Added because working on a holiday"
                      },
                      "days_in_cents": {
                        "type": "integer",
                        "description": "How many units * 100 does the incidence add/substract. Can be positive or negative. Example is one unit",
                        "example": 100
                      },
                      "timeoff_allowance_id": {
                        "type": "integer",
                        "description": "To what allowance does the incidence affect. It will dictate if its days or hours",
                        "example": 2
                      },
                      "effective_on": {
                        "type": "string",
                        "description": "When does the incidence take effect; this is for time off cycles calculations.",
                        "example": "2024-01-02"
                      },
                      "target_balance": {
                        "type": "string",
                        "description": "Whether the incidence affects the Accrued or the Available counter.",
                        "example": "accrued"
                      },
                      "created_at": {
                        "type": "integer",
                        "description": "Unix timestamp when the DB record was created",
                        "example": 1723623354
                      },
                      "updated_at": {
                        "type": "integer",
                        "description": "Unix timestamp when the DB record was last updated",
                        "example": 1723623354
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timeoff > AllowanceIncidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates an allowance incidence, also known as an Allowance Adjustment in the Employee Time off Page. They are hours or days added or subtracted from the time off allowance",
        "summary": "Creates an Allowance incidence",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "days_in_cents",
                    "timeoff_allowance_id",
                    "effective_on",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance incidence",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the affected employee",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional comment regarding the incidence",
                      "example": "Added because working on a holiday"
                    },
                    "days_in_cents": {
                      "type": "integer",
                      "description": "How many units * 100 does the incidence add/substract. Can be positive or negative. Example is one unit",
                      "example": 100
                    },
                    "timeoff_allowance_id": {
                      "type": "integer",
                      "description": "To what allowance does the incidence affect. It will dictate if its days or hours",
                      "example": 2
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "When does the incidence take effect; this is for time off cycles calculations.",
                      "example": "2024-01-02"
                    },
                    "target_balance": {
                      "type": "string",
                      "description": "Whether the incidence affects the Accrued or the Available counter.",
                      "example": "accrued"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was created",
                      "example": 1723623354
                    },
                    "updated_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was last updated",
                      "example": 1723623354
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_id",
                  "timeoff_allowance_id",
                  "days_in_cents",
                  "effective_on",
                  "target_balance"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "Employee Id",
                    "example": 6
                  },
                  "timeoff_allowance_id": {
                    "type": "integer",
                    "description": "Allowance Id",
                    "example": 1
                  },
                  "days_in_cents": {
                    "type": "integer",
                    "description": "How many units multiplied by 100 do you want to add/substract. Can be positive or negative",
                    "example": 100
                  },
                  "description": {
                    "type": "string",
                    "description": "A free text field to add a description to the incidence",
                    "example": "Working on a bank holiday a different day"
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "When does the incidence take effect. This is related to the allowance cycle.",
                    "example": "2024-01-05"
                  },
                  "target_balance": {
                    "type": "string",
                    "description": "Which counter does the incidence affect. Can be \"accrued\" or \"available\"",
                    "enum": [
                      "available",
                      "accrued"
                    ],
                    "example": "accrued"
                  },
                  "_skip_notifications": {
                    "type": "boolean",
                    "description": "When set to true, it prevents notifications being sent to employee when this incidence is created"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/allowance_incidences/{id}": {
      "get": {
        "tags": [
          "Timeoff > AllowanceIncidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Allowance incidence",
        "summary": "Reads a single Allowance incidence",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "days_in_cents",
                    "timeoff_allowance_id",
                    "effective_on",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance incidence",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the affected employee",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional comment regarding the incidence",
                      "example": "Added because working on a holiday"
                    },
                    "days_in_cents": {
                      "type": "integer",
                      "description": "How many units * 100 does the incidence add/substract. Can be positive or negative. Example is one unit",
                      "example": 100
                    },
                    "timeoff_allowance_id": {
                      "type": "integer",
                      "description": "To what allowance does the incidence affect. It will dictate if its days or hours",
                      "example": 2
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "When does the incidence take effect; this is for time off cycles calculations.",
                      "example": "2024-01-02"
                    },
                    "target_balance": {
                      "type": "string",
                      "description": "Whether the incidence affects the Accrued or the Available counter.",
                      "example": "accrued"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was created",
                      "example": 1723623354
                    },
                    "updated_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was last updated",
                      "example": 1723623354
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timeoff > AllowanceIncidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates an allowance incidence",
        "summary": "Updates an Allowance incidence",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "days_in_cents",
                    "timeoff_allowance_id",
                    "effective_on",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance incidence",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the affected employee",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional comment regarding the incidence",
                      "example": "Added because working on a holiday"
                    },
                    "days_in_cents": {
                      "type": "integer",
                      "description": "How many units * 100 does the incidence add/substract. Can be positive or negative. Example is one unit",
                      "example": 100
                    },
                    "timeoff_allowance_id": {
                      "type": "integer",
                      "description": "To what allowance does the incidence affect. It will dictate if its days or hours",
                      "example": 2
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "When does the incidence take effect; this is for time off cycles calculations.",
                      "example": "2024-01-02"
                    },
                    "target_balance": {
                      "type": "string",
                      "description": "Whether the incidence affects the Accrued or the Available counter.",
                      "example": "accrued"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was created",
                      "example": 1723623354
                    },
                    "updated_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was last updated",
                      "example": 1723623354
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "days_in_cents": {
                    "type": "integer",
                    "description": "How many units multiplied by 100 do you want to add/substract. Can be positive or negative",
                    "example": 100
                  },
                  "timeoff_allowance_id": {
                    "type": "integer",
                    "description": "Allowance Id",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "A free text field to add a description to the incidence",
                    "example": "Working on a bank holiday a different day"
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "When does the incidence take effect. This is related to the allowance cycle.",
                    "example": "2024-01-05"
                  },
                  "target_balance": {
                    "type": "string",
                    "description": "Which counter does the incidence affect. Can be \"accrued\" or \"available\"",
                    "enum": [
                      "available",
                      "accrued"
                    ],
                    "example": "accrued"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timeoff > AllowanceIncidence"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes an allowance incidence",
        "summary": "Deletes an Allowance incidence",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "employee_id",
                    "days_in_cents",
                    "timeoff_allowance_id",
                    "effective_on",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the allowance incidence",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee id of the affected employee",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional comment regarding the incidence",
                      "example": "Added because working on a holiday"
                    },
                    "days_in_cents": {
                      "type": "integer",
                      "description": "How many units * 100 does the incidence add/substract. Can be positive or negative. Example is one unit",
                      "example": 100
                    },
                    "timeoff_allowance_id": {
                      "type": "integer",
                      "description": "To what allowance does the incidence affect. It will dictate if its days or hours",
                      "example": 2
                    },
                    "effective_on": {
                      "type": "string",
                      "description": "When does the incidence take effect; this is for time off cycles calculations.",
                      "example": "2024-01-02"
                    },
                    "target_balance": {
                      "type": "string",
                      "description": "Whether the incidence affects the Accrued or the Available counter.",
                      "example": "accrued"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was created",
                      "example": 1723623354
                    },
                    "updated_at": {
                      "type": "integer",
                      "description": "Unix timestamp when the DB record was last updated",
                      "example": 1723623354
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/allowance_stats": {
      "get": {
        "tags": [
          "Timeoff > AllowanceStat"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint retrieves the employee time off counters for a specific allowance with a reference date",
        "summary": "Reads all Allowance stats",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "allowance_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "reference_date",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "allowance_id",
                      "employee_id",
                      "year",
                      "cycles",
                      "carry_overs",
                      "accumulated_carry_over",
                      "available_days",
                      "total_accrued_units",
                      "incidences",
                      "policy_allowance",
                      "prorated_allowance_days",
                      "used_carry_over",
                      "used_days",
                      "used_units_until_reference_date",
                      "outstanding_units"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "allowance_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "year": {
                        "type": "integer"
                      },
                      "cycles": {
                        "type": "string"
                      },
                      "carry_overs": {
                        "type": "array",
                        "items": {}
                      },
                      "accumulated_carry_over": {
                        "type": "object"
                      },
                      "available_days": {
                        "type": "object"
                      },
                      "total_accrued_units": {
                        "type": "object"
                      },
                      "incidences": {
                        "type": "object"
                      },
                      "max_balance_cap": {
                        "type": "object"
                      },
                      "policy_allowance": {
                        "type": "object"
                      },
                      "prorated_allowance_days": {
                        "type": "object"
                      },
                      "total_in_decimal": {
                        "type": "object"
                      },
                      "used_carry_over": {
                        "type": "object"
                      },
                      "used_days": {
                        "type": "object"
                      },
                      "used_units_until_reference_date": {
                        "type": "object"
                      },
                      "outstanding_units": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/allowance_stats/{id}": {
      "get": {
        "tags": [
          "Timeoff > AllowanceStat"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "###### **What does it do?**\nThis endpoint retrieves the employee time off counters for a specific allowance with a reference date",
        "summary": "Reads a single Allowance stat",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "allowance_id",
                    "employee_id",
                    "year",
                    "cycles",
                    "carry_overs",
                    "accumulated_carry_over",
                    "available_days",
                    "total_accrued_units",
                    "incidences",
                    "policy_allowance",
                    "prorated_allowance_days",
                    "used_carry_over",
                    "used_days",
                    "used_units_until_reference_date",
                    "outstanding_units"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "allowance_id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "year": {
                      "type": "integer"
                    },
                    "cycles": {
                      "type": "string"
                    },
                    "carry_overs": {
                      "type": "array",
                      "items": {}
                    },
                    "accumulated_carry_over": {
                      "type": "object"
                    },
                    "available_days": {
                      "type": "object"
                    },
                    "total_accrued_units": {
                      "type": "object"
                    },
                    "incidences": {
                      "type": "object"
                    },
                    "max_balance_cap": {
                      "type": "object"
                    },
                    "policy_allowance": {
                      "type": "object"
                    },
                    "prorated_allowance_days": {
                      "type": "object"
                    },
                    "total_in_decimal": {
                      "type": "object"
                    },
                    "used_carry_over": {
                      "type": "object"
                    },
                    "used_days": {
                      "type": "object"
                    },
                    "used_units_until_reference_date": {
                      "type": "object"
                    },
                    "outstanding_units": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/blocked_periods": {
      "get": {
        "tags": [
          "Timeoff > BlockedPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Retrieves blocked periods",
        "summary": "Reads all Blocked periods",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "name",
                      "leave_type_ids",
                      "time_periods",
                      "strategy",
                      "members"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier of the blocked period",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company id of the blocked period",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the blocked period.",
                        "example": "Onboarding period"
                      },
                      "leave_type_ids": {
                        "type": "array",
                        "description": "Leave types for which absence request has been blocked",
                        "example": [
                          1,
                          2
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "time_periods": {
                        "type": "array",
                        "description": "The tenure periods associated with the allowance.",
                        "example": [
                          {
                            "name": "Product offsite",
                            "period_type": "by_contract_start_date",
                            "duration": 2,
                            "duration_unit": "months",
                            "start_on": "2024-01-01",
                            "finish_on": "2024-02-28"
                          }
                        ],
                        "items": {}
                      },
                      "strategy": {
                        "type": "string",
                        "description": "Type of access group",
                        "example": "everyone"
                      },
                      "members": {
                        "type": "array",
                        "description": "Employees whose timeoff will be affected",
                        "example": [
                          1,
                          2
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "location_ids": {
                        "type": "array",
                        "description": "Array of locations workplace identifiers where the employees are located",
                        "example": [
                          1,
                          2
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "team_ids": {
                        "type": "array",
                        "description": "Array of team identifiers which the selected employees belong to",
                        "example": [
                          1,
                          2
                        ],
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timeoff > BlockedPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a blocked period is add a range of dates during which employees cannot submit time off requests. This allows to better plan your team's work throughout the year and ensure that time off requests are in line with the company's needs",
        "summary": "Creates a Blocked period",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "leave_type_ids",
                    "time_periods",
                    "strategy",
                    "members"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the blocked period",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company id of the blocked period",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the blocked period.",
                      "example": "Onboarding period"
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "Leave types for which absence request has been blocked",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "time_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "name": "Product offsite",
                          "period_type": "by_contract_start_date",
                          "duration": 2,
                          "duration_unit": "months",
                          "start_on": "2024-01-01",
                          "finish_on": "2024-02-28"
                        }
                      ],
                      "items": {}
                    },
                    "strategy": {
                      "type": "string",
                      "description": "Type of access group",
                      "example": "everyone"
                    },
                    "members": {
                      "type": "array",
                      "description": "Employees whose timeoff will be affected",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "location_ids": {
                      "type": "array",
                      "description": "Array of locations workplace identifiers where the employees are located",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "team_ids": {
                      "type": "array",
                      "description": "Array of team identifiers which the selected employees belong to",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "name",
                  "leave_type_ids"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "The company id",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the blocked period.",
                    "example": "Onboarding period"
                  },
                  "leave_type_ids": {
                    "type": "array",
                    "description": "An array of leave type identifiers for which employees can not request timeoff",
                    "example": [
                      1,
                      2,
                      4
                    ],
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/blocked_periods/{id}": {
      "put": {
        "tags": [
          "Timeoff > BlockedPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a blocked period",
        "summary": "Updates a Blocked period",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "leave_type_ids",
                    "time_periods",
                    "strategy",
                    "members"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the blocked period",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company id of the blocked period",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the blocked period.",
                      "example": "Onboarding period"
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "Leave types for which absence request has been blocked",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "time_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "name": "Product offsite",
                          "period_type": "by_contract_start_date",
                          "duration": 2,
                          "duration_unit": "months",
                          "start_on": "2024-01-01",
                          "finish_on": "2024-02-28"
                        }
                      ],
                      "items": {}
                    },
                    "strategy": {
                      "type": "string",
                      "description": "Type of access group",
                      "example": "everyone"
                    },
                    "members": {
                      "type": "array",
                      "description": "Employees whose timeoff will be affected",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "location_ids": {
                      "type": "array",
                      "description": "Array of locations workplace identifiers where the employees are located",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "team_ids": {
                      "type": "array",
                      "description": "Array of team identifiers which the selected employees belong to",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "leave_type_ids",
                  "time_periods_attributes",
                  "strategy"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the blocked period.",
                    "example": "Onboarding period edited"
                  },
                  "leave_type_ids": {
                    "type": "array",
                    "description": "An array of leave type identifiers for which employees can not request timeoff edited",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "time_periods_attributes": {
                    "type": "array",
                    "description": "The tenure periods associated with the allowance edited.",
                    "example": [
                      {
                        "name": "Product offsite updated",
                        "period_type": "by_contract_start_date",
                        "duration": 2,
                        "duration_unit": "months",
                        "start_on": "2024-01-02",
                        "finish_on": "2024-02-28"
                      }
                    ],
                    "items": {}
                  },
                  "strategy": {
                    "type": "string",
                    "description": "Type of access group",
                    "example": "fqlmultiselect"
                  },
                  "members": {
                    "type": "array",
                    "description": "Array of employees manually selected",
                    "example": [
                      25,
                      22,
                      23
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "query": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timeoff > BlockedPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a blocked period",
        "summary": "Deletes a Blocked period",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "name",
                    "leave_type_ids",
                    "time_periods",
                    "strategy",
                    "members"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the blocked period",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company id of the blocked period",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the blocked period.",
                      "example": "Onboarding period"
                    },
                    "leave_type_ids": {
                      "type": "array",
                      "description": "Leave types for which absence request has been blocked",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "time_periods": {
                      "type": "array",
                      "description": "The tenure periods associated with the allowance.",
                      "example": [
                        {
                          "name": "Product offsite",
                          "period_type": "by_contract_start_date",
                          "duration": 2,
                          "duration_unit": "months",
                          "start_on": "2024-01-01",
                          "finish_on": "2024-02-28"
                        }
                      ],
                      "items": {}
                    },
                    "strategy": {
                      "type": "string",
                      "description": "Type of access group",
                      "example": "everyone"
                    },
                    "members": {
                      "type": "array",
                      "description": "Employees whose timeoff will be affected",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "location_ids": {
                      "type": "array",
                      "description": "Array of locations workplace identifiers where the employees are located",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "team_ids": {
                      "type": "array",
                      "description": "Array of team identifiers which the selected employees belong to",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/leaves": {
      "get": {
        "tags": [
          "Timeoff > Leave"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Leaves",
        "summary": "Reads all Leaves",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The leave ids to retrieve",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The leave ids to retrieve",
            "example": [
              1
            ]
          },
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The employee ids to retrieve",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The employee ids to retrieve",
            "example": [
              1
            ]
          },
          {
            "name": "leave_type_id[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The leave type id to retrieve",
              "example": [
                1
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The leave type id to retrieve",
            "example": [
              1
            ]
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Valid date following the format YYYY-MM-DD",
              "example": "2024-01-02"
            },
            "description": "Valid date following the format YYYY-MM-DD",
            "example": "2024-01-02"
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Valid date following the format YYYY-MM-DD",
              "example": "2024-01-01"
            },
            "description": "Valid date following the format YYYY-MM-DD",
            "example": "2024-01-01"
          },
          {
            "name": "only_active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve only active leaves",
              "example": true
            },
            "description": "Retrieve only active leaves",
            "example": true
          },
          {
            "name": "approved",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve approved leaves",
              "example": true
            },
            "description": "Retrieve approved leaves",
            "example": true
          },
          {
            "name": "include_pending",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve pending leaves",
              "example": true
            },
            "description": "Retrieve pending leaves",
            "example": true
          },
          {
            "name": "include_leave_type",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve leave types"
            },
            "description": "Retrieve leave types",
            "required": true
          },
          {
            "name": "include_duration",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve leave duration"
            },
            "description": "Retrieve leave duration",
            "required": true
          },
          {
            "name": "type_is_workable",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Retrieve workable leaves",
              "example": true
            },
            "description": "Retrieve workable leaves",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "employee_id",
                      "start_on",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the Leave",
                        "example": 1
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Company identifier of the employee of the leave",
                        "example": 1
                      },
                      "employee_id": {
                        "type": "integer",
                        "description": "Employee identifier of the leave",
                        "example": 1
                      },
                      "start_on": {
                        "type": "string",
                        "description": "The start date of the leave",
                        "example": "2023-09-01"
                      },
                      "finish_on": {
                        "type": "string",
                        "description": "The end date of the leave",
                        "example": "2023-09-10"
                      },
                      "half_day": {
                        "type": "string",
                        "description": "Indicates if the leave is taken as a half-day",
                        "example": "end_of_day"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the leave",
                        "example": "Annual family vacation"
                      },
                      "reason": {
                        "type": "string",
                        "description": "The reason provided by the employee for taking the leave",
                        "example": "Medical appointment"
                      },
                      "leave_type_id": {
                        "type": "integer",
                        "description": "The identifier for the type of leave",
                        "example": 2
                      },
                      "leave_type_name": {
                        "type": "string",
                        "description": "The name of the leave type",
                        "example": "Vacation"
                      },
                      "approved": {
                        "type": "boolean",
                        "description": "Indicates whether the leave has been approved",
                        "example": true
                      },
                      "employee_full_name": {
                        "type": "string",
                        "description": "The full name of the employee taking the leave",
                        "example": "John Doe"
                      },
                      "start_time": {
                        "type": "string",
                        "description": "The start time of the leave",
                        "example": "09:00"
                      },
                      "hours_amount_in_cents": {
                        "type": "integer",
                        "description": "The total number of hours taken for the leave, represented in cents",
                        "example": 80000
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "The updated at date of the leave",
                        "example": "2023-08-31T15:30:00Z"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "The created at date of the leave",
                        "example": "2023-08-01T08:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timeoff > Leave"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Leave",
        "summary": "Creates a Leave",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "employee_id",
                    "start_on",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the Leave",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the employee of the leave",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier of the leave",
                      "example": 1
                    },
                    "start_on": {
                      "type": "string",
                      "description": "The start date of the leave",
                      "example": "2023-09-01"
                    },
                    "finish_on": {
                      "type": "string",
                      "description": "The end date of the leave",
                      "example": "2023-09-10"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates if the leave is taken as a half-day",
                      "example": "end_of_day"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the leave",
                      "example": "Annual family vacation"
                    },
                    "reason": {
                      "type": "string",
                      "description": "The reason provided by the employee for taking the leave",
                      "example": "Medical appointment"
                    },
                    "leave_type_id": {
                      "type": "integer",
                      "description": "The identifier for the type of leave",
                      "example": 2
                    },
                    "leave_type_name": {
                      "type": "string",
                      "description": "The name of the leave type",
                      "example": "Vacation"
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "Indicates whether the leave has been approved",
                      "example": true
                    },
                    "employee_full_name": {
                      "type": "string",
                      "description": "The full name of the employee taking the leave",
                      "example": "John Doe"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The start time of the leave",
                      "example": "09:00"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer",
                      "description": "The total number of hours taken for the leave, represented in cents",
                      "example": 80000
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The updated at date of the leave",
                      "example": "2023-08-31T15:30:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The created at date of the leave",
                      "example": "2023-08-01T08:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "employee_id",
                  "start_on"
                ],
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "The employee id of the leave",
                    "example": 1
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "The leave type id",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the leave",
                    "example": "Leaving in the morning for a medical appointment"
                  },
                  "start_on": {
                    "type": "string",
                    "description": "The valid start date of the leave following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  },
                  "finish_on": {
                    "type": "string",
                    "description": "The valid end date of the leave following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "If the leave is in: [beggining_of_day, end_of_day]",
                    "example": "end_of_day"
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time of a leave",
                    "example": "14:00"
                  },
                  "hours_amount_in_cents": {
                    "type": "integer",
                    "description": "The hours amount in cents of a leave",
                    "example": "400"
                  },
                  "medical_leave_type": {
                    "type": "integer",
                    "description": "The medical leave type",
                    "example": "4"
                  },
                  "effective_on": {
                    "type": "string",
                    "description": "The effective on date of a leave following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  },
                  "medical_discharge_reason": {
                    "type": "string",
                    "description": "The medical discharge reason of a leave",
                    "example": "Illness"
                  },
                  "colegiate_number": {
                    "type": "integer",
                    "description": "The colegiate number of a leave",
                    "example": 150
                  },
                  "has_previous_relapse": {
                    "type": "boolean",
                    "description": "If the leave has previous relapse"
                  },
                  "relapse_leave_id": {
                    "type": "integer",
                    "description": "The leave relapse id",
                    "example": 1
                  },
                  "relapse_on": {
                    "type": "string",
                    "description": "The leave relapse on date following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  },
                  "accident_on": {
                    "type": "string",
                    "description": "The leave accident on date following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  },
                  "paternity_birth_on": {
                    "type": "string",
                    "description": "The leave paternity birth on date following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/leaves/{id}": {
      "get": {
        "tags": [
          "Timeoff > Leave"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Leave",
        "summary": "Reads a single Leave",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "employee_id",
                    "start_on",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the Leave",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the employee of the leave",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier of the leave",
                      "example": 1
                    },
                    "start_on": {
                      "type": "string",
                      "description": "The start date of the leave",
                      "example": "2023-09-01"
                    },
                    "finish_on": {
                      "type": "string",
                      "description": "The end date of the leave",
                      "example": "2023-09-10"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates if the leave is taken as a half-day",
                      "example": "end_of_day"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the leave",
                      "example": "Annual family vacation"
                    },
                    "reason": {
                      "type": "string",
                      "description": "The reason provided by the employee for taking the leave",
                      "example": "Medical appointment"
                    },
                    "leave_type_id": {
                      "type": "integer",
                      "description": "The identifier for the type of leave",
                      "example": 2
                    },
                    "leave_type_name": {
                      "type": "string",
                      "description": "The name of the leave type",
                      "example": "Vacation"
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "Indicates whether the leave has been approved",
                      "example": true
                    },
                    "employee_full_name": {
                      "type": "string",
                      "description": "The full name of the employee taking the leave",
                      "example": "John Doe"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The start time of the leave",
                      "example": "09:00"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer",
                      "description": "The total number of hours taken for the leave, represented in cents",
                      "example": 80000
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The updated at date of the leave",
                      "example": "2023-08-31T15:30:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The created at date of the leave",
                      "example": "2023-08-01T08:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timeoff > Leave"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Leave",
        "summary": "Updates a Leave",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "employee_id",
                    "start_on",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the Leave",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the employee of the leave",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier of the leave",
                      "example": 1
                    },
                    "start_on": {
                      "type": "string",
                      "description": "The start date of the leave",
                      "example": "2023-09-01"
                    },
                    "finish_on": {
                      "type": "string",
                      "description": "The end date of the leave",
                      "example": "2023-09-10"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates if the leave is taken as a half-day",
                      "example": "end_of_day"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the leave",
                      "example": "Annual family vacation"
                    },
                    "reason": {
                      "type": "string",
                      "description": "The reason provided by the employee for taking the leave",
                      "example": "Medical appointment"
                    },
                    "leave_type_id": {
                      "type": "integer",
                      "description": "The identifier for the type of leave",
                      "example": 2
                    },
                    "leave_type_name": {
                      "type": "string",
                      "description": "The name of the leave type",
                      "example": "Vacation"
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "Indicates whether the leave has been approved",
                      "example": true
                    },
                    "employee_full_name": {
                      "type": "string",
                      "description": "The full name of the employee taking the leave",
                      "example": "John Doe"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The start time of the leave",
                      "example": "09:00"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer",
                      "description": "The total number of hours taken for the leave, represented in cents",
                      "example": 80000
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The updated at date of the leave",
                      "example": "2023-08-31T15:30:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The created at date of the leave",
                      "example": "2023-08-01T08:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The leave id"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "The employee id of the leave",
                    "example": 1
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "The leave type id",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the leave",
                    "example": "Leaving in the morning for a medical appointment"
                  },
                  "start_on": {
                    "type": "string",
                    "description": "The valid start date of the leave following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  },
                  "finish_on": {
                    "type": "string",
                    "description": "The valid end date of the leave following the format YYYY-MM-DD",
                    "example": "2024-05-05"
                  },
                  "half_day": {
                    "type": "string",
                    "description": "If the leave is in: [beggining_of_day, end_of_day]",
                    "example": "end_of_day"
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time of a leave",
                    "example": "14:00"
                  },
                  "hours_amount_in_cents": {
                    "type": "integer",
                    "description": "The hours amount in cents of a leave",
                    "example": "400"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timeoff > Leave"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Leave",
        "summary": "Deletes a Leave",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "employee_id",
                    "start_on",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the Leave",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the employee of the leave",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier of the leave",
                      "example": 1
                    },
                    "start_on": {
                      "type": "string",
                      "description": "The start date of the leave",
                      "example": "2023-09-01"
                    },
                    "finish_on": {
                      "type": "string",
                      "description": "The end date of the leave",
                      "example": "2023-09-10"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates if the leave is taken as a half-day",
                      "example": "end_of_day"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the leave",
                      "example": "Annual family vacation"
                    },
                    "reason": {
                      "type": "string",
                      "description": "The reason provided by the employee for taking the leave",
                      "example": "Medical appointment"
                    },
                    "leave_type_id": {
                      "type": "integer",
                      "description": "The identifier for the type of leave",
                      "example": 2
                    },
                    "leave_type_name": {
                      "type": "string",
                      "description": "The name of the leave type",
                      "example": "Vacation"
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "Indicates whether the leave has been approved",
                      "example": true
                    },
                    "employee_full_name": {
                      "type": "string",
                      "description": "The full name of the employee taking the leave",
                      "example": "John Doe"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The start time of the leave",
                      "example": "09:00"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer",
                      "description": "The total number of hours taken for the leave, represented in cents",
                      "example": 80000
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The updated at date of the leave",
                      "example": "2023-08-31T15:30:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The created at date of the leave",
                      "example": "2023-08-01T08:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/leaves/approve": {
      "post": {
        "tags": [
          "Timeoff > Leave"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Allows authorized users to approve employee time-off requests",
        "summary": "Approves a Leave",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "employee_id",
                    "start_on",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the Leave",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the employee of the leave",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier of the leave",
                      "example": 1
                    },
                    "start_on": {
                      "type": "string",
                      "description": "The start date of the leave",
                      "example": "2023-09-01"
                    },
                    "finish_on": {
                      "type": "string",
                      "description": "The end date of the leave",
                      "example": "2023-09-10"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates if the leave is taken as a half-day",
                      "example": "end_of_day"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the leave",
                      "example": "Annual family vacation"
                    },
                    "reason": {
                      "type": "string",
                      "description": "The reason provided by the employee for taking the leave",
                      "example": "Medical appointment"
                    },
                    "leave_type_id": {
                      "type": "integer",
                      "description": "The identifier for the type of leave",
                      "example": 2
                    },
                    "leave_type_name": {
                      "type": "string",
                      "description": "The name of the leave type",
                      "example": "Vacation"
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "Indicates whether the leave has been approved",
                      "example": true
                    },
                    "employee_full_name": {
                      "type": "string",
                      "description": "The full name of the employee taking the leave",
                      "example": "John Doe"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The start time of the leave",
                      "example": "09:00"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer",
                      "description": "The total number of hours taken for the leave, represented in cents",
                      "example": 80000
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The updated at date of the leave",
                      "example": "2023-08-31T15:30:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The created at date of the leave",
                      "example": "2023-08-01T08:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the Leave",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/leaves/reject": {
      "post": {
        "tags": [
          "Timeoff > Leave"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Allows authorized users to reject employee time-off requests",
        "summary": "Rejects a Leave",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "employee_id",
                    "start_on",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the Leave",
                      "example": 1
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Company identifier of the employee of the leave",
                      "example": 1
                    },
                    "employee_id": {
                      "type": "integer",
                      "description": "Employee identifier of the leave",
                      "example": 1
                    },
                    "start_on": {
                      "type": "string",
                      "description": "The start date of the leave",
                      "example": "2023-09-01"
                    },
                    "finish_on": {
                      "type": "string",
                      "description": "The end date of the leave",
                      "example": "2023-09-10"
                    },
                    "half_day": {
                      "type": "string",
                      "description": "Indicates if the leave is taken as a half-day",
                      "example": "end_of_day"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the leave",
                      "example": "Annual family vacation"
                    },
                    "reason": {
                      "type": "string",
                      "description": "The reason provided by the employee for taking the leave",
                      "example": "Medical appointment"
                    },
                    "leave_type_id": {
                      "type": "integer",
                      "description": "The identifier for the type of leave",
                      "example": 2
                    },
                    "leave_type_name": {
                      "type": "string",
                      "description": "The name of the leave type",
                      "example": "Vacation"
                    },
                    "approved": {
                      "type": "boolean",
                      "description": "Indicates whether the leave has been approved",
                      "example": true
                    },
                    "employee_full_name": {
                      "type": "string",
                      "description": "The full name of the employee taking the leave",
                      "example": "John Doe"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The start time of the leave",
                      "example": "09:00"
                    },
                    "hours_amount_in_cents": {
                      "type": "integer",
                      "description": "The total number of hours taken for the leave, represented in cents",
                      "example": 80000
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The updated at date of the leave",
                      "example": "2023-08-31T15:30:00Z"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The created at date of the leave",
                      "example": "2023-08-01T08:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the Leave",
                    "example": 1
                  },
                  "reason": {
                    "type": "string",
                    "description": "Reason for rejecting the leave",
                    "example": "Not enough notice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/leave_types": {
      "get": {
        "tags": [
          "Timeoff > LeaveType"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Leave types",
        "summary": "Reads all Leave types",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Identifiers of the leave types",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Identifiers of the leave types",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "company_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "Identifiers of the companies",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "Identifiers of the companies",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Whether the leave type is active",
              "example": true
            },
            "description": "Whether the leave type is active",
            "example": true
          },
          {
            "name": "payable",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "Whether the leave type is payable"
            },
            "description": "Whether the leave type is payable"
          },
          {
            "name": "identifier",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "A unique identifier for the leave type, or an array of identifiers",
              "example": "annual_leave"
            },
            "description": "A unique identifier for the leave type, or an array of identifiers",
            "example": "annual_leave"
          },
          {
            "name": "employee_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Identifier of the employee",
              "example": 1
            },
            "description": "Identifier of the employee",
            "example": 1
          },
          {
            "name": "reference_date",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A reference date for the leave type",
              "example": "2024-08-22"
            },
            "description": "A reference date for the leave type",
            "example": "2024-08-22"
          },
          {
            "name": "leave_type_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Identifier of a specific leave type",
              "example": 1
            },
            "description": "Identifier of a specific leave type",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "identifier",
                      "color",
                      "attachment",
                      "visibility",
                      "workable",
                      "company_id",
                      "allowance_ids",
                      "details_required"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of the leave type",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the leave type",
                        "example": "Annual Leave"
                      },
                      "translated_name": {
                        "type": "string",
                        "description": "Translated name of the leave type, if available",
                        "example": "Congé Annuel"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Unique identifier of the leave type",
                        "example": "annual_leave"
                      },
                      "color": {
                        "type": "string",
                        "description": "The color associated with this leave type",
                        "example": "red"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Whether the leave type is active",
                        "example": true
                      },
                      "editable": {
                        "type": "boolean",
                        "description": "Whether the leave type is editable"
                      },
                      "approval_required": {
                        "type": "boolean",
                        "description": "Whether approval is required for this leave type",
                        "example": true
                      },
                      "accrues": {
                        "type": "boolean",
                        "description": "Whether the leave type accrues over time",
                        "example": true
                      },
                      "attachment": {
                        "type": "boolean",
                        "description": "Whether an attachment is required for this leave type",
                        "example": true
                      },
                      "allow_endless": {
                        "type": "boolean",
                        "description": "Whether endless leave is allowed"
                      },
                      "restricted": {
                        "type": "boolean",
                        "description": "Whether the leave type is restricted"
                      },
                      "visibility": {
                        "type": "boolean",
                        "description": "Whether the leave type is visible to employees",
                        "example": true
                      },
                      "workable": {
                        "type": "boolean",
                        "description": "Whether the leave type is workable"
                      },
                      "payable": {
                        "type": "boolean",
                        "description": "Whether the leave type is payable",
                        "example": true
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "Identifier of the company associated with this leave type",
                        "example": 1
                      },
                      "is_attachment_mandatory": {
                        "type": "boolean",
                        "description": "Whether the attachment is mandatory"
                      },
                      "allowance_ids": {
                        "type": "array",
                        "description": "List of allowance identifiers associated with this leave type",
                        "example": [
                          1,
                          2
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "half_days_units_enabled": {
                        "type": "boolean",
                        "description": "Whether half-day units are enabled for this leave type",
                        "example": true
                      },
                      "max_days_in_cents": {
                        "type": "integer",
                        "description": "Maximum days in cents that can be taken",
                        "example": 5000
                      },
                      "min_days_in_cents": {
                        "type": "integer",
                        "description": "Minimum days in cents that must be taken",
                        "example": 1000
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the leave type",
                        "example": "This leave type is for annual holidays."
                      },
                      "details_required": {
                        "type": "boolean",
                        "description": "Whether additional details are required for the leave type"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timeoff > LeaveType"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Leave type",
        "summary": "Creates a Leave type",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "identifier",
                    "color",
                    "attachment",
                    "visibility",
                    "workable",
                    "company_id",
                    "allowance_ids",
                    "details_required"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the leave type",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the leave type",
                      "example": "Annual Leave"
                    },
                    "translated_name": {
                      "type": "string",
                      "description": "Translated name of the leave type, if available",
                      "example": "Congé Annuel"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "Unique identifier of the leave type",
                      "example": "annual_leave"
                    },
                    "color": {
                      "type": "string",
                      "description": "The color associated with this leave type",
                      "example": "red"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the leave type is active",
                      "example": true
                    },
                    "editable": {
                      "type": "boolean",
                      "description": "Whether the leave type is editable"
                    },
                    "approval_required": {
                      "type": "boolean",
                      "description": "Whether approval is required for this leave type",
                      "example": true
                    },
                    "accrues": {
                      "type": "boolean",
                      "description": "Whether the leave type accrues over time",
                      "example": true
                    },
                    "attachment": {
                      "type": "boolean",
                      "description": "Whether an attachment is required for this leave type",
                      "example": true
                    },
                    "allow_endless": {
                      "type": "boolean",
                      "description": "Whether endless leave is allowed"
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Whether the leave type is restricted"
                    },
                    "visibility": {
                      "type": "boolean",
                      "description": "Whether the leave type is visible to employees",
                      "example": true
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Whether the leave type is workable"
                    },
                    "payable": {
                      "type": "boolean",
                      "description": "Whether the leave type is payable",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier of the company associated with this leave type",
                      "example": 1
                    },
                    "is_attachment_mandatory": {
                      "type": "boolean",
                      "description": "Whether the attachment is mandatory"
                    },
                    "allowance_ids": {
                      "type": "array",
                      "description": "List of allowance identifiers associated with this leave type",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "half_days_units_enabled": {
                      "type": "boolean",
                      "description": "Whether half-day units are enabled for this leave type",
                      "example": true
                    },
                    "max_days_in_cents": {
                      "type": "integer",
                      "description": "Maximum days in cents that can be taken",
                      "example": 5000
                    },
                    "min_days_in_cents": {
                      "type": "integer",
                      "description": "Minimum days in cents that must be taken",
                      "example": 1000
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the leave type",
                      "example": "This leave type is for annual holidays."
                    },
                    "details_required": {
                      "type": "boolean",
                      "description": "Whether additional details are required for the leave type"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accrues",
                  "approval_required",
                  "identifier",
                  "color",
                  "name",
                  "workable",
                  "company_id",
                  "details_required"
                ],
                "properties": {
                  "accrues": {
                    "type": "boolean",
                    "description": "Whether the leave type accrues over time",
                    "example": true
                  },
                  "approval_required": {
                    "type": "boolean",
                    "description": "Whether approval is required for this leave type",
                    "example": true
                  },
                  "identifier": {
                    "type": "string",
                    "description": "A unique identifier for the leave type",
                    "example": "custom"
                  },
                  "attachment": {
                    "type": "boolean",
                    "description": "Whether an attachment is required for this leave type",
                    "example": true
                  },
                  "color": {
                    "type": "string",
                    "description": "The color associated with this leave type",
                    "example": "red"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the leave type",
                    "example": "Sick Leave"
                  },
                  "visibility": {
                    "type": "boolean",
                    "description": "Whether the leave type is visible to employees",
                    "example": true
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Whether the leave type is workable (can be worked on during leave)"
                  },
                  "payable": {
                    "type": "boolean",
                    "description": "Whether the leave type is payable",
                    "example": true
                  },
                  "is_attachment_mandatory": {
                    "type": "boolean",
                    "description": "Whether the attachment is mandatory"
                  },
                  "half_days_units_enabled": {
                    "type": "boolean",
                    "description": "Whether half-day units are enabled for this leave type",
                    "example": true
                  },
                  "max_days_in_cents": {
                    "type": "integer",
                    "description": "Maximum days in cents that can be taken",
                    "example": 5000
                  },
                  "min_days_in_cents": {
                    "type": "integer",
                    "description": "Minimum days in cents that must be taken",
                    "example": 1000
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Identifier of the company associated with this leave type",
                    "example": 1
                  },
                  "editable": {
                    "type": "boolean",
                    "description": "Whether the leave type is editable",
                    "example": true
                  },
                  "allow_endless": {
                    "type": "boolean",
                    "description": "Whether endless leave is allowed"
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Whether the leave type is restricted"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the leave type",
                    "example": "Leave for sick days"
                  },
                  "details_required": {
                    "type": "boolean",
                    "description": "Whether additional details are required for the leave type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/leave_types/{id}": {
      "get": {
        "tags": [
          "Timeoff > LeaveType"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Leave type",
        "summary": "Reads a single Leave type",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "identifier",
                    "color",
                    "attachment",
                    "visibility",
                    "workable",
                    "company_id",
                    "allowance_ids",
                    "details_required"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the leave type",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the leave type",
                      "example": "Annual Leave"
                    },
                    "translated_name": {
                      "type": "string",
                      "description": "Translated name of the leave type, if available",
                      "example": "Congé Annuel"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "Unique identifier of the leave type",
                      "example": "annual_leave"
                    },
                    "color": {
                      "type": "string",
                      "description": "The color associated with this leave type",
                      "example": "red"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the leave type is active",
                      "example": true
                    },
                    "editable": {
                      "type": "boolean",
                      "description": "Whether the leave type is editable"
                    },
                    "approval_required": {
                      "type": "boolean",
                      "description": "Whether approval is required for this leave type",
                      "example": true
                    },
                    "accrues": {
                      "type": "boolean",
                      "description": "Whether the leave type accrues over time",
                      "example": true
                    },
                    "attachment": {
                      "type": "boolean",
                      "description": "Whether an attachment is required for this leave type",
                      "example": true
                    },
                    "allow_endless": {
                      "type": "boolean",
                      "description": "Whether endless leave is allowed"
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Whether the leave type is restricted"
                    },
                    "visibility": {
                      "type": "boolean",
                      "description": "Whether the leave type is visible to employees",
                      "example": true
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Whether the leave type is workable"
                    },
                    "payable": {
                      "type": "boolean",
                      "description": "Whether the leave type is payable",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier of the company associated with this leave type",
                      "example": 1
                    },
                    "is_attachment_mandatory": {
                      "type": "boolean",
                      "description": "Whether the attachment is mandatory"
                    },
                    "allowance_ids": {
                      "type": "array",
                      "description": "List of allowance identifiers associated with this leave type",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "half_days_units_enabled": {
                      "type": "boolean",
                      "description": "Whether half-day units are enabled for this leave type",
                      "example": true
                    },
                    "max_days_in_cents": {
                      "type": "integer",
                      "description": "Maximum days in cents that can be taken",
                      "example": 5000
                    },
                    "min_days_in_cents": {
                      "type": "integer",
                      "description": "Minimum days in cents that must be taken",
                      "example": 1000
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the leave type",
                      "example": "This leave type is for annual holidays."
                    },
                    "details_required": {
                      "type": "boolean",
                      "description": "Whether additional details are required for the leave type"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timeoff > LeaveType"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Leave type",
        "summary": "Updates a Leave type",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "identifier",
                    "color",
                    "attachment",
                    "visibility",
                    "workable",
                    "company_id",
                    "allowance_ids",
                    "details_required"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the leave type",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the leave type",
                      "example": "Annual Leave"
                    },
                    "translated_name": {
                      "type": "string",
                      "description": "Translated name of the leave type, if available",
                      "example": "Congé Annuel"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "Unique identifier of the leave type",
                      "example": "annual_leave"
                    },
                    "color": {
                      "type": "string",
                      "description": "The color associated with this leave type",
                      "example": "red"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the leave type is active",
                      "example": true
                    },
                    "editable": {
                      "type": "boolean",
                      "description": "Whether the leave type is editable"
                    },
                    "approval_required": {
                      "type": "boolean",
                      "description": "Whether approval is required for this leave type",
                      "example": true
                    },
                    "accrues": {
                      "type": "boolean",
                      "description": "Whether the leave type accrues over time",
                      "example": true
                    },
                    "attachment": {
                      "type": "boolean",
                      "description": "Whether an attachment is required for this leave type",
                      "example": true
                    },
                    "allow_endless": {
                      "type": "boolean",
                      "description": "Whether endless leave is allowed"
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Whether the leave type is restricted"
                    },
                    "visibility": {
                      "type": "boolean",
                      "description": "Whether the leave type is visible to employees",
                      "example": true
                    },
                    "workable": {
                      "type": "boolean",
                      "description": "Whether the leave type is workable"
                    },
                    "payable": {
                      "type": "boolean",
                      "description": "Whether the leave type is payable",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "Identifier of the company associated with this leave type",
                      "example": 1
                    },
                    "is_attachment_mandatory": {
                      "type": "boolean",
                      "description": "Whether the attachment is mandatory"
                    },
                    "allowance_ids": {
                      "type": "array",
                      "description": "List of allowance identifiers associated with this leave type",
                      "example": [
                        1,
                        2
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "half_days_units_enabled": {
                      "type": "boolean",
                      "description": "Whether half-day units are enabled for this leave type",
                      "example": true
                    },
                    "max_days_in_cents": {
                      "type": "integer",
                      "description": "Maximum days in cents that can be taken",
                      "example": 5000
                    },
                    "min_days_in_cents": {
                      "type": "integer",
                      "description": "Minimum days in cents that must be taken",
                      "example": 1000
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the leave type",
                      "example": "This leave type is for annual holidays."
                    },
                    "details_required": {
                      "type": "boolean",
                      "description": "Whether additional details are required for the leave type"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "identifier",
                  "details_required"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Identifier of the leave type to update",
                    "example": 5
                  },
                  "accrues": {
                    "type": "boolean",
                    "description": "Whether the leave type accrues over time",
                    "example": true
                  },
                  "approval_required": {
                    "type": "boolean",
                    "description": "Whether approval is required for this leave type",
                    "example": true
                  },
                  "identifier": {
                    "type": "string",
                    "description": "A unique identifier for the leave type",
                    "example": "custom"
                  },
                  "attachment": {
                    "type": "boolean",
                    "description": "Whether an attachment is required for this leave type",
                    "example": true
                  },
                  "color": {
                    "type": "string",
                    "description": "The color associated with this leave type (hex code)",
                    "example": "red"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the leave type",
                    "example": "Sick Leave"
                  },
                  "visibility": {
                    "type": "boolean",
                    "description": "Whether the leave type is visible to employees",
                    "example": true
                  },
                  "workable": {
                    "type": "boolean",
                    "description": "Whether the leave type is workable (can be worked on during leave)"
                  },
                  "payable": {
                    "type": "boolean",
                    "description": "Whether the leave type is payable",
                    "example": true
                  },
                  "is_attachment_mandatory": {
                    "type": "boolean",
                    "description": "Whether the attachment is mandatory or a status description (boolean or string)"
                  },
                  "half_days_units_enabled": {
                    "type": "boolean",
                    "description": "Whether half-day units are enabled for this leave type",
                    "example": true
                  },
                  "max_days_in_cents": {
                    "type": "integer",
                    "description": "Maximum days in cents that can be taken",
                    "example": 5000
                  },
                  "min_days_in_cents": {
                    "type": "integer",
                    "description": "Minimum days in cents that must be taken",
                    "example": 1000
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the leave type is active",
                    "example": true
                  },
                  "allow_endless": {
                    "type": "boolean",
                    "description": "Whether endless leave is allowed"
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Whether the leave type is restricted"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the leave type",
                    "example": "Leave for sick days"
                  },
                  "details_required": {
                    "type": "boolean",
                    "description": "Whether additional details are required for the leave type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/policies": {
      "get": {
        "tags": [
          "Timeoff > Policy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Policies",
        "summary": "Reads all Policies",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The policies ids to retrieve.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The policies ids to retrieve.",
            "example": [
              1,
              2,
              3
            ]
          },
          {
            "name": "company_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "The company ids to retrieve policies.",
              "example": [
                1,
                2,
                3
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "The company ids to retrieve policies.",
            "example": [
              1,
              2,
              3
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The policy id.",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Policy name.",
                        "example": "Policy for remotes"
                      },
                      "main": {
                        "type": "boolean",
                        "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                        "example": true
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "The company id.",
                        "example": 1
                      },
                      "description": {
                        "type": "string",
                        "description": "The policy description.",
                        "example": "This policy will apply only for remote employees"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timeoff > Policy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Policy",
        "summary": "Creates a Policy",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The policy id.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name.",
                      "example": "Policy for remotes"
                    },
                    "main": {
                      "type": "boolean",
                      "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The company id.",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "The policy description.",
                      "example": "This policy will apply only for remote employees"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the policy.",
                    "example": "Policy for remotes"
                  },
                  "main": {
                    "type": "boolean",
                    "description": "If the policy is the main policy."
                  },
                  "description": {
                    "type": "string",
                    "description": "Policy description.",
                    "example": "This policy will apply only for remote employees"
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company ID.",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/policies/{id}": {
      "get": {
        "tags": [
          "Timeoff > Policy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Policy",
        "summary": "Reads a single Policy",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The policy id.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name.",
                      "example": "Policy for remotes"
                    },
                    "main": {
                      "type": "boolean",
                      "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The company id.",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "The policy description.",
                      "example": "This policy will apply only for remote employees"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timeoff > Policy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Policy",
        "summary": "Updates a Policy",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The policy id.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name.",
                      "example": "Policy for remotes"
                    },
                    "main": {
                      "type": "boolean",
                      "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The company id.",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "The policy description.",
                      "example": "This policy will apply only for remote employees"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Id of the policy to update.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the policy.",
                    "example": "Policy for remotes"
                  },
                  "description": {
                    "type": "string",
                    "description": "Policy description.",
                    "example": "This policy will apply only for remote employees"
                  },
                  "main": {
                    "type": "boolean",
                    "description": "If the policy is the main policy."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timeoff > Policy"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Policy",
        "summary": "Deletes a Policy",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The policy id.",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name.",
                      "example": "Policy for remotes"
                    },
                    "main": {
                      "type": "boolean",
                      "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
                      "example": true
                    },
                    "company_id": {
                      "type": "integer",
                      "description": "The company id.",
                      "example": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "The policy description.",
                      "example": "This policy will apply only for remote employees"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/timeoff/policy_timelines": {
      "get": {
        "tags": [
          "Timeoff > PolicyTimeline"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Policy timelines",
        "summary": "Reads all Policy timelines",
        "parameters": [
          {
            "name": "employee_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "reference_date",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "employee_id",
                      "start_limit_date",
                      "end_limit_date",
                      "items",
                      "id"
                    ],
                    "properties": {
                      "employee_id": {
                        "type": "integer"
                      },
                      "start_limit_date": {
                        "type": "string"
                      },
                      "end_limit_date": {
                        "type": "string"
                      },
                      "items": {
                        "type": "array",
                        "items": {}
                      },
                      "id": {
                        "type": "integer",
                        "description": "This is the employee id since it's a virtual entity"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/time_planning/planning_versions": {
      "get": {
        "tags": [
          "TimePlanning > PlanningVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Planning versions",
        "summary": "Reads all Planning versions",
        "parameters": [
          {
            "name": "employee_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "for_shifts",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "only_active",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "planning_tool",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "shift_management",
                "work_schedule",
                "contract_hours"
              ]
            }
          },
          {
            "name": "schedule_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "effective_at",
                      "planning_tool",
                      "employee_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "effective_at": {
                        "type": "string"
                      },
                      "planning_tool": {
                        "type": "string"
                      },
                      "number_of_rest_days_in_cents": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "work_schedule_schedule_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimePlanning > PlanningVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Planning version",
        "summary": "Creates a Planning version",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "effective_at",
                    "planning_tool",
                    "employee_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "effective_at": {
                      "type": "string"
                    },
                    "planning_tool": {
                      "type": "string"
                    },
                    "number_of_rest_days_in_cents": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "work_schedule_schedule_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "effective_at",
                  "planning_tool",
                  "employee_id",
                  "company"
                ],
                "properties": {
                  "effective_at": {
                    "type": "string"
                  },
                  "planning_tool": {
                    "type": "string"
                  },
                  "number_of_rest_days_in_cents": {
                    "type": "integer"
                  },
                  "employee_id": {
                    "type": "integer"
                  },
                  "schedule_id": {
                    "type": "integer"
                  },
                  "company": {
                    "type": "object"
                  },
                  "author": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/time_planning/planning_versions/{id}": {
      "put": {
        "tags": [
          "TimePlanning > PlanningVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Planning version",
        "summary": "Updates a Planning version",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "effective_at",
                    "planning_tool",
                    "employee_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "effective_at": {
                      "type": "string"
                    },
                    "planning_tool": {
                      "type": "string"
                    },
                    "number_of_rest_days_in_cents": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "work_schedule_schedule_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "effective_at",
                  "planning_tool"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "effective_at": {
                    "type": "string"
                  },
                  "number_of_rest_days_in_cents": {
                    "type": "integer"
                  },
                  "planning_tool": {
                    "type": "string"
                  },
                  "schedule_id": {
                    "type": "integer"
                  },
                  "author": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TimePlanning > PlanningVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Planning version",
        "summary": "Deletes a Planning version",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "effective_at",
                    "planning_tool",
                    "employee_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "effective_at": {
                      "type": "string"
                    },
                    "planning_tool": {
                      "type": "string"
                    },
                    "number_of_rest_days_in_cents": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "work_schedule_schedule_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/time_planning/planning_versions/bulk_create": {
      "post": {
        "tags": [
          "TimePlanning > PlanningVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk creates a Planning version",
        "summary": "Bulk creates a Planning version",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "effective_at",
                    "planning_tool",
                    "employee_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "effective_at": {
                      "type": "string"
                    },
                    "planning_tool": {
                      "type": "string"
                    },
                    "number_of_rest_days_in_cents": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "work_schedule_schedule_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "effective_at",
                  "planning_tool",
                  "employee_ids",
                  "company"
                ],
                "properties": {
                  "effective_at": {
                    "type": "string"
                  },
                  "planning_tool": {
                    "type": "string"
                  },
                  "number_of_rest_days_in_cents": {
                    "type": "integer"
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "schedule_id": {
                    "type": "integer"
                  },
                  "company": {
                    "type": "object"
                  },
                  "author": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/time_planning/planning_versions/deactivate": {
      "post": {
        "tags": [
          "TimePlanning > PlanningVersion"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deactivates a Planning version",
        "summary": "Deactivates a Planning version",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "effective_at",
                    "planning_tool",
                    "employee_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "effective_at": {
                      "type": "string"
                    },
                    "planning_tool": {
                      "type": "string"
                    },
                    "number_of_rest_days_in_cents": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "work_schedule_schedule_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "effective_at",
                  "planning_tool",
                  "company"
                ],
                "properties": {
                  "effective_at": {
                    "type": "string"
                  },
                  "planning_tool": {
                    "type": "string"
                  },
                  "schedule_id": {
                    "type": "integer"
                  },
                  "company": {
                    "type": "object"
                  },
                  "author": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/time_settings/break_configurations": {
      "get": {
        "tags": [
          "TimeSettings > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Break configurations",
        "summary": "Reads all Break configurations",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "paid",
                      "archived"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "paid": {
                        "type": "boolean"
                      },
                      "archived": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeSettings > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Break configuration",
        "summary": "Creates a Break configuration",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "paid",
                    "archived"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "paid"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "paid": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/time_settings/break_configurations/{id}": {
      "get": {
        "tags": [
          "TimeSettings > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Break configuration",
        "summary": "Reads a single Break configuration",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "paid",
                    "archived"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeSettings > BreakConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Break configuration",
        "summary": "Updates a Break configuration",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "paid",
                    "archived"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "paid": {
                    "type": "boolean"
                  },
                  "archived": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/categories": {
      "get": {
        "tags": [
          "Trainings > Category"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Categories",
        "summary": "Reads all Categories",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Trainings > Category"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Category",
        "summary": "Creates a Category",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "company_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/categories/{id}": {
      "get": {
        "tags": [
          "Trainings > Category"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Category",
        "summary": "Reads a single Category",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Trainings > Category"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Category",
        "summary": "Deletes a Category",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/sessions": {
      "get": {
        "tags": [
          "Trainings > Session"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Sessions",
        "summary": "Reads all Sessions",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "This field is used to filter those sessions whose id match with the given.",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "This field is used to filter those sessions whose id match with the given.",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "training_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "This field is used to filter those sessions whose belong to these trainings.",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "This field is used to filter those sessions whose belong to these trainings.",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "This field is used to filter those sessions whose name include some of the text written.",
              "example": "Session name"
            },
            "description": "This field is used to filter those sessions whose name include some of the text written.",
            "example": "Session name"
          },
          {
            "name": "start_after",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "This field is used to filter those sessions whose starts date is after the given.",
              "example": "2024-01-05"
            },
            "description": "This field is used to filter those sessions whose starts date is after the given.",
            "example": "2024-01-05"
          },
          {
            "name": "start_before",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "This field is used to filter those sessions whose starts date is before the given.",
              "example": "2024-01-05"
            },
            "description": "This field is used to filter those sessions whose starts date is before the given.",
            "example": "2024-01-05"
          },
          {
            "name": "access_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "access_id associated to the employee, refers to employees/employees endpoint.",
              "example": 1
            },
            "description": "access_id associated to the employee, refers to employees/employees endpoint.",
            "example": 1
          },
          {
            "name": "training_class_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "This field is used to filter those sessions whose belong to this training groups.",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "This field is used to filter those sessions whose belong to this training groups.",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "next",
            "in": "query",
            "schema": {
              "type": "boolean",
              "description": "When this field is active, it filters and orders those sessions taht are closest in time, with the first element being the closest.",
              "example": true
            },
            "description": "When this field is active, it filters and orders those sessions taht are closest in time, with the first element being the closest.",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "training_id",
                      "subsidized",
                      "session_attendances_status"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "training_id": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      },
                      "training_class_id": {
                        "type": "integer"
                      },
                      "starts_at": {
                        "type": "string"
                      },
                      "ends_at": {
                        "type": "string"
                      },
                      "due_date": {
                        "type": "string"
                      },
                      "duration": {
                        "type": "object"
                      },
                      "modality": {
                        "type": "string"
                      },
                      "link": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string"
                      },
                      "session_attendance_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "session_feedback_id": {
                        "type": "integer"
                      },
                      "subsidized": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string"
                      },
                      "session_attendances_status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Trainings > Session"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Session",
        "summary": "Creates a Session",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "training_id",
                    "subsidized",
                    "session_attendances_status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "training_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "training_class_id": {
                      "type": "integer"
                    },
                    "starts_at": {
                      "type": "string"
                    },
                    "ends_at": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "object"
                    },
                    "modality": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "session_attendance_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "session_feedback_id": {
                      "type": "integer"
                    },
                    "subsidized": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "session_attendances_status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "training_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "training_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "training_class_id": {
                    "type": "integer"
                  },
                  "starts_at": {
                    "type": "string"
                  },
                  "ends_at": {
                    "type": "string"
                  },
                  "due_date": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "object"
                  },
                  "modality": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "subsidized": {
                    "type": "boolean"
                  },
                  "recurrent": {
                    "type": "boolean"
                  },
                  "reminders": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/sessions/{id}": {
      "get": {
        "tags": [
          "Trainings > Session"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Session",
        "summary": "Reads a single Session",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "training_id",
                    "subsidized",
                    "session_attendances_status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "training_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "training_class_id": {
                      "type": "integer"
                    },
                    "starts_at": {
                      "type": "string"
                    },
                    "ends_at": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "object"
                    },
                    "modality": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "session_attendance_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "session_feedback_id": {
                      "type": "integer"
                    },
                    "subsidized": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "session_attendances_status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Trainings > Session"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Session",
        "summary": "Updates a Session",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "training_id",
                    "subsidized",
                    "session_attendances_status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "training_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "training_class_id": {
                      "type": "integer"
                    },
                    "starts_at": {
                      "type": "string"
                    },
                    "ends_at": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "object"
                    },
                    "modality": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "session_attendance_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "session_feedback_id": {
                      "type": "integer"
                    },
                    "subsidized": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "session_attendances_status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "starts_at": {
                    "type": "string"
                  },
                  "ends_at": {
                    "type": "string"
                  },
                  "due_date": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "object"
                  },
                  "modality": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "subsidized": {
                    "type": "boolean"
                  },
                  "recurrent": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Trainings > Session"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Session",
        "summary": "Deletes a Session",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "training_id",
                    "subsidized",
                    "session_attendances_status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "training_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "training_class_id": {
                      "type": "integer"
                    },
                    "starts_at": {
                      "type": "string"
                    },
                    "ends_at": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "object"
                    },
                    "modality": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "session_attendance_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "session_feedback_id": {
                      "type": "integer"
                    },
                    "subsidized": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "session_attendances_status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/session_access_memberships": {
      "get": {
        "tags": [
          "Trainings > SessionAccessMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Session access memberships",
        "summary": "Reads all Session access memberships",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "session_id",
                      "session_attendance_status",
                      "team_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "session_id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "job_title": {
                        "type": "string"
                      },
                      "session_attendance_status": {
                        "type": "string"
                      },
                      "team_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/session_access_memberships/{id}": {
      "get": {
        "tags": [
          "Trainings > SessionAccessMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Session access membership",
        "summary": "Reads a single Session access membership",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "session_id",
                    "session_attendance_status",
                    "team_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "access_id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    },
                    "session_id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "job_title": {
                      "type": "string"
                    },
                    "session_attendance_status": {
                      "type": "string"
                    },
                    "team_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/session_access_memberships/bulk_create": {
      "post": {
        "tags": [
          "Trainings > SessionAccessMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk creates a Session access membership",
        "summary": "Bulk creates a Session access membership",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "session_id",
                      "session_attendance_status",
                      "team_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "session_id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "job_title": {
                        "type": "string"
                      },
                      "session_attendance_status": {
                        "type": "string"
                      },
                      "team_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "session_id",
                  "notify"
                ],
                "properties": {
                  "access_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "session_id": {
                    "type": "integer"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/session_access_memberships/bulk_destroy": {
      "post": {
        "tags": [
          "Trainings > SessionAccessMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk destroys a Session access membership",
        "summary": "Bulk destroys a Session access membership",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "session_id",
                      "session_attendance_status",
                      "team_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      },
                      "session_id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "job_title": {
                        "type": "string"
                      },
                      "session_attendance_status": {
                        "type": "string"
                      },
                      "team_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids",
                  "notify"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/session_attendances": {
      "get": {
        "tags": [
          "Trainings > SessionAttendance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Session attendances",
        "summary": "Reads all Session attendances",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "session_access_membership_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "access_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "status",
                      "session_access_membership_id",
                      "access_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "session_access_membership_id": {
                        "type": "integer"
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/session_attendances/{id}": {
      "get": {
        "tags": [
          "Trainings > SessionAttendance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Session attendance",
        "summary": "Reads a single Session attendance",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "session_access_membership_id",
                    "access_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "session_access_membership_id": {
                      "type": "integer"
                    },
                    "access_id": {
                      "type": "integer"
                    },
                    "employee_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/session_attendances/bulk_update": {
      "post": {
        "tags": [
          "Trainings > SessionAttendance"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk updates a Session attendance",
        "summary": "Bulk updates a Session attendance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "status",
                      "session_access_membership_id",
                      "access_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "session_access_membership_id": {
                        "type": "integer"
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "employee_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids",
                  "status"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/trainings": {
      "get": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Trainings",
        "summary": "Reads all Trainings",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "access_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catalog",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "only_assigned",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "with_expired_memberships",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "author_id",
                      "name",
                      "description",
                      "external",
                      "fundae_subsidized",
                      "cost",
                      "subsidized_cost",
                      "cost_decimal",
                      "subsidized_cost_decimal",
                      "year",
                      "catalog",
                      "competency_ids",
                      "total_training_cost",
                      "total_training_subsidized_cost",
                      "total_participants",
                      "training_attendance_status",
                      "access_id",
                      "session_attendance",
                      "competency_id",
                      "modality"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "author_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "external_provider": {
                        "type": "string"
                      },
                      "external": {
                        "type": "boolean"
                      },
                      "total_cost": {
                        "type": "integer"
                      },
                      "fundae_subsidized": {
                        "type": "boolean"
                      },
                      "cost": {
                        "type": "integer"
                      },
                      "subsidized_cost": {
                        "type": "integer"
                      },
                      "total_cost_decimal": {
                        "type": "object"
                      },
                      "cost_decimal": {
                        "type": "object"
                      },
                      "subsidized_cost_decimal": {
                        "type": "object"
                      },
                      "category_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "status": {
                        "type": "string"
                      },
                      "year": {
                        "type": "integer"
                      },
                      "catalog": {
                        "type": "boolean"
                      },
                      "competency_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "total_training_cost": {
                        "type": "object"
                      },
                      "total_training_subsidized_cost": {
                        "type": "object"
                      },
                      "total_participants": {
                        "type": "integer"
                      },
                      "training_attendance_status": {
                        "type": "string",
                        "enum": [
                          "notassigned",
                          "notstarted",
                          "missing",
                          "started",
                          "partiallycompleted",
                          "completed"
                        ]
                      },
                      "valid_for": {
                        "type": "integer"
                      },
                      "objectives": {
                        "type": "string",
                        "description": "Objectives of the course",
                        "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                      },
                      "number_of_expired_participants": {
                        "type": "integer",
                        "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                        "example": 2
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "session_attendance": {
                        "type": "string"
                      },
                      "competency_id": {
                        "type": "integer"
                      },
                      "modality": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Training",
        "summary": "Creates a Training",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "author_id",
                    "name",
                    "description",
                    "external",
                    "fundae_subsidized",
                    "cost",
                    "subsidized_cost",
                    "cost_decimal",
                    "subsidized_cost_decimal",
                    "year",
                    "catalog",
                    "competency_ids",
                    "total_training_cost",
                    "total_training_subsidized_cost",
                    "total_participants",
                    "training_attendance_status",
                    "access_id",
                    "session_attendance",
                    "competency_id",
                    "modality"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "external_provider": {
                      "type": "string"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "total_cost": {
                      "type": "integer"
                    },
                    "fundae_subsidized": {
                      "type": "boolean"
                    },
                    "cost": {
                      "type": "integer"
                    },
                    "subsidized_cost": {
                      "type": "integer"
                    },
                    "total_cost_decimal": {
                      "type": "object"
                    },
                    "cost_decimal": {
                      "type": "object"
                    },
                    "subsidized_cost_decimal": {
                      "type": "object"
                    },
                    "category_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "year": {
                      "type": "integer"
                    },
                    "catalog": {
                      "type": "boolean"
                    },
                    "competency_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "total_training_cost": {
                      "type": "object"
                    },
                    "total_training_subsidized_cost": {
                      "type": "object"
                    },
                    "total_participants": {
                      "type": "integer"
                    },
                    "training_attendance_status": {
                      "type": "string",
                      "enum": [
                        "notassigned",
                        "notstarted",
                        "missing",
                        "started",
                        "partiallycompleted",
                        "completed"
                      ]
                    },
                    "valid_for": {
                      "type": "integer"
                    },
                    "objectives": {
                      "type": "string",
                      "description": "Objectives of the course",
                      "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                    },
                    "number_of_expired_participants": {
                      "type": "integer",
                      "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                      "example": 2
                    },
                    "access_id": {
                      "type": "integer"
                    },
                    "session_attendance": {
                      "type": "string"
                    },
                    "competency_id": {
                      "type": "integer"
                    },
                    "modality": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "external",
                  "year",
                  "attachments"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the training",
                    "example": "Communication Course"
                  },
                  "code": {
                    "type": "string",
                    "description": "Code of the training",
                    "example": "COM-101"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the training",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  },
                  "external_provider": {
                    "type": "string",
                    "description": "External provider of the training",
                    "example": "Coursera"
                  },
                  "external": {
                    "type": "boolean",
                    "description": "External training"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "competency_ids": {
                    "type": "array",
                    "description": "Competency ids of the training",
                    "example": [
                      1,
                      2
                    ],
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author_id": {
                    "type": "integer",
                    "description": "The person that creates the training",
                    "example": 20
                  },
                  "employee_id": {
                    "type": "integer"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "year": {
                    "type": "integer",
                    "description": "Year of the training",
                    "example": 2022
                  },
                  "company_id": {
                    "type": "integer",
                    "description": "Company identifier of the training",
                    "example": 1
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Attachments of the training",
                    "items": {}
                  },
                  "valid_for": {
                    "type": "integer",
                    "description": "The training validity period",
                    "example": 1
                  },
                  "objectives": {
                    "type": "string",
                    "description": "Objectives of the course",
                    "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/trainings/{id}": {
      "get": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Training",
        "summary": "Reads a single Training",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "author_id",
                    "name",
                    "description",
                    "external",
                    "fundae_subsidized",
                    "cost",
                    "subsidized_cost",
                    "cost_decimal",
                    "subsidized_cost_decimal",
                    "year",
                    "catalog",
                    "competency_ids",
                    "total_training_cost",
                    "total_training_subsidized_cost",
                    "total_participants",
                    "training_attendance_status",
                    "access_id",
                    "session_attendance",
                    "competency_id",
                    "modality"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "external_provider": {
                      "type": "string"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "total_cost": {
                      "type": "integer"
                    },
                    "fundae_subsidized": {
                      "type": "boolean"
                    },
                    "cost": {
                      "type": "integer"
                    },
                    "subsidized_cost": {
                      "type": "integer"
                    },
                    "total_cost_decimal": {
                      "type": "object"
                    },
                    "cost_decimal": {
                      "type": "object"
                    },
                    "subsidized_cost_decimal": {
                      "type": "object"
                    },
                    "category_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "year": {
                      "type": "integer"
                    },
                    "catalog": {
                      "type": "boolean"
                    },
                    "competency_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "total_training_cost": {
                      "type": "object"
                    },
                    "total_training_subsidized_cost": {
                      "type": "object"
                    },
                    "total_participants": {
                      "type": "integer"
                    },
                    "training_attendance_status": {
                      "type": "string",
                      "enum": [
                        "notassigned",
                        "notstarted",
                        "missing",
                        "started",
                        "partiallycompleted",
                        "completed"
                      ]
                    },
                    "valid_for": {
                      "type": "integer"
                    },
                    "objectives": {
                      "type": "string",
                      "description": "Objectives of the course",
                      "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                    },
                    "number_of_expired_participants": {
                      "type": "integer",
                      "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                      "example": 2
                    },
                    "access_id": {
                      "type": "integer"
                    },
                    "session_attendance": {
                      "type": "string"
                    },
                    "competency_id": {
                      "type": "integer"
                    },
                    "modality": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Training",
        "summary": "Updates a Training",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "author_id",
                    "name",
                    "description",
                    "external",
                    "fundae_subsidized",
                    "cost",
                    "subsidized_cost",
                    "cost_decimal",
                    "subsidized_cost_decimal",
                    "year",
                    "catalog",
                    "competency_ids",
                    "total_training_cost",
                    "total_training_subsidized_cost",
                    "total_participants",
                    "training_attendance_status",
                    "access_id",
                    "session_attendance",
                    "competency_id",
                    "modality"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "external_provider": {
                      "type": "string"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "total_cost": {
                      "type": "integer"
                    },
                    "fundae_subsidized": {
                      "type": "boolean"
                    },
                    "cost": {
                      "type": "integer"
                    },
                    "subsidized_cost": {
                      "type": "integer"
                    },
                    "total_cost_decimal": {
                      "type": "object"
                    },
                    "cost_decimal": {
                      "type": "object"
                    },
                    "subsidized_cost_decimal": {
                      "type": "object"
                    },
                    "category_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "year": {
                      "type": "integer"
                    },
                    "catalog": {
                      "type": "boolean"
                    },
                    "competency_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "total_training_cost": {
                      "type": "object"
                    },
                    "total_training_subsidized_cost": {
                      "type": "object"
                    },
                    "total_participants": {
                      "type": "integer"
                    },
                    "training_attendance_status": {
                      "type": "string",
                      "enum": [
                        "notassigned",
                        "notstarted",
                        "missing",
                        "started",
                        "partiallycompleted",
                        "completed"
                      ]
                    },
                    "valid_for": {
                      "type": "integer"
                    },
                    "objectives": {
                      "type": "string",
                      "description": "Objectives of the course",
                      "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                    },
                    "number_of_expired_participants": {
                      "type": "integer",
                      "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                      "example": 2
                    },
                    "access_id": {
                      "type": "integer"
                    },
                    "session_attendance": {
                      "type": "string"
                    },
                    "competency_id": {
                      "type": "integer"
                    },
                    "modality": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "description",
                  "external",
                  "year"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "external_provider": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "category_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "competency_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "subsidized_cost": {
                    "type": "integer"
                  },
                  "cost_decimal": {
                    "type": "object"
                  },
                  "subsidized_cost_decimal": {
                    "type": "object"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "valid_for": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes a Training",
        "summary": "Deletes a Training",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "author_id",
                    "name",
                    "description",
                    "external",
                    "fundae_subsidized",
                    "cost",
                    "subsidized_cost",
                    "cost_decimal",
                    "subsidized_cost_decimal",
                    "year",
                    "catalog",
                    "competency_ids",
                    "total_training_cost",
                    "total_training_subsidized_cost",
                    "total_participants",
                    "training_attendance_status",
                    "access_id",
                    "session_attendance",
                    "competency_id",
                    "modality"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "external_provider": {
                      "type": "string"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "total_cost": {
                      "type": "integer"
                    },
                    "fundae_subsidized": {
                      "type": "boolean"
                    },
                    "cost": {
                      "type": "integer"
                    },
                    "subsidized_cost": {
                      "type": "integer"
                    },
                    "total_cost_decimal": {
                      "type": "object"
                    },
                    "cost_decimal": {
                      "type": "object"
                    },
                    "subsidized_cost_decimal": {
                      "type": "object"
                    },
                    "category_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "year": {
                      "type": "integer"
                    },
                    "catalog": {
                      "type": "boolean"
                    },
                    "competency_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "total_training_cost": {
                      "type": "object"
                    },
                    "total_training_subsidized_cost": {
                      "type": "object"
                    },
                    "total_participants": {
                      "type": "integer"
                    },
                    "training_attendance_status": {
                      "type": "string",
                      "enum": [
                        "notassigned",
                        "notstarted",
                        "missing",
                        "started",
                        "partiallycompleted",
                        "completed"
                      ]
                    },
                    "valid_for": {
                      "type": "integer"
                    },
                    "objectives": {
                      "type": "string",
                      "description": "Objectives of the course",
                      "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                    },
                    "number_of_expired_participants": {
                      "type": "integer",
                      "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                      "example": 2
                    },
                    "access_id": {
                      "type": "integer"
                    },
                    "session_attendance": {
                      "type": "string"
                    },
                    "competency_id": {
                      "type": "integer"
                    },
                    "modality": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/trainings/bulk_delete": {
      "post": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk deletes a Training",
        "summary": "Bulk deletes a Training",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "author_id",
                      "name",
                      "description",
                      "external",
                      "fundae_subsidized",
                      "cost",
                      "subsidized_cost",
                      "cost_decimal",
                      "subsidized_cost_decimal",
                      "year",
                      "catalog",
                      "competency_ids",
                      "total_training_cost",
                      "total_training_subsidized_cost",
                      "total_participants",
                      "training_attendance_status",
                      "access_id",
                      "session_attendance",
                      "competency_id",
                      "modality"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "author_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "external_provider": {
                        "type": "string"
                      },
                      "external": {
                        "type": "boolean"
                      },
                      "total_cost": {
                        "type": "integer"
                      },
                      "fundae_subsidized": {
                        "type": "boolean"
                      },
                      "cost": {
                        "type": "integer"
                      },
                      "subsidized_cost": {
                        "type": "integer"
                      },
                      "total_cost_decimal": {
                        "type": "object"
                      },
                      "cost_decimal": {
                        "type": "object"
                      },
                      "subsidized_cost_decimal": {
                        "type": "object"
                      },
                      "category_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "status": {
                        "type": "string"
                      },
                      "year": {
                        "type": "integer"
                      },
                      "catalog": {
                        "type": "boolean"
                      },
                      "competency_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "total_training_cost": {
                        "type": "object"
                      },
                      "total_training_subsidized_cost": {
                        "type": "object"
                      },
                      "total_participants": {
                        "type": "integer"
                      },
                      "training_attendance_status": {
                        "type": "string",
                        "enum": [
                          "notassigned",
                          "notstarted",
                          "missing",
                          "started",
                          "partiallycompleted",
                          "completed"
                        ]
                      },
                      "valid_for": {
                        "type": "integer"
                      },
                      "objectives": {
                        "type": "string",
                        "description": "Objectives of the course",
                        "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                      },
                      "number_of_expired_participants": {
                        "type": "integer",
                        "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                        "example": 2
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "session_attendance": {
                        "type": "string"
                      },
                      "competency_id": {
                        "type": "integer"
                      },
                      "modality": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/trainings/bulk_update_catalog": {
      "post": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk update catalogs a Training",
        "summary": "Bulk update catalogs a Training",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "company_id",
                      "author_id",
                      "name",
                      "description",
                      "external",
                      "fundae_subsidized",
                      "cost",
                      "subsidized_cost",
                      "cost_decimal",
                      "subsidized_cost_decimal",
                      "year",
                      "catalog",
                      "competency_ids",
                      "total_training_cost",
                      "total_training_subsidized_cost",
                      "total_participants",
                      "training_attendance_status",
                      "access_id",
                      "session_attendance",
                      "competency_id",
                      "modality"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "author_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "external_provider": {
                        "type": "string"
                      },
                      "external": {
                        "type": "boolean"
                      },
                      "total_cost": {
                        "type": "integer"
                      },
                      "fundae_subsidized": {
                        "type": "boolean"
                      },
                      "cost": {
                        "type": "integer"
                      },
                      "subsidized_cost": {
                        "type": "integer"
                      },
                      "total_cost_decimal": {
                        "type": "object"
                      },
                      "cost_decimal": {
                        "type": "object"
                      },
                      "subsidized_cost_decimal": {
                        "type": "object"
                      },
                      "category_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "status": {
                        "type": "string"
                      },
                      "year": {
                        "type": "integer"
                      },
                      "catalog": {
                        "type": "boolean"
                      },
                      "competency_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "total_training_cost": {
                        "type": "object"
                      },
                      "total_training_subsidized_cost": {
                        "type": "object"
                      },
                      "total_participants": {
                        "type": "integer"
                      },
                      "training_attendance_status": {
                        "type": "string",
                        "enum": [
                          "notassigned",
                          "notstarted",
                          "missing",
                          "started",
                          "partiallycompleted",
                          "completed"
                        ]
                      },
                      "valid_for": {
                        "type": "integer"
                      },
                      "objectives": {
                        "type": "string",
                        "description": "Objectives of the course",
                        "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                      },
                      "number_of_expired_participants": {
                        "type": "integer",
                        "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                        "example": 2
                      },
                      "access_id": {
                        "type": "integer"
                      },
                      "session_attendance": {
                        "type": "string"
                      },
                      "competency_id": {
                        "type": "integer"
                      },
                      "modality": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids",
                  "catalog"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "catalog": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/trainings/update_status": {
      "post": {
        "tags": [
          "Trainings > Training"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update statuses a Training",
        "summary": "Update statuses a Training",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "company_id",
                    "author_id",
                    "name",
                    "description",
                    "external",
                    "fundae_subsidized",
                    "cost",
                    "subsidized_cost",
                    "cost_decimal",
                    "subsidized_cost_decimal",
                    "year",
                    "catalog",
                    "competency_ids",
                    "total_training_cost",
                    "total_training_subsidized_cost",
                    "total_participants",
                    "training_attendance_status",
                    "access_id",
                    "session_attendance",
                    "competency_id",
                    "modality"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "author_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "external_provider": {
                      "type": "string"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "total_cost": {
                      "type": "integer"
                    },
                    "fundae_subsidized": {
                      "type": "boolean"
                    },
                    "cost": {
                      "type": "integer"
                    },
                    "subsidized_cost": {
                      "type": "integer"
                    },
                    "total_cost_decimal": {
                      "type": "object"
                    },
                    "cost_decimal": {
                      "type": "object"
                    },
                    "subsidized_cost_decimal": {
                      "type": "object"
                    },
                    "category_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "year": {
                      "type": "integer"
                    },
                    "catalog": {
                      "type": "boolean"
                    },
                    "competency_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "total_training_cost": {
                      "type": "object"
                    },
                    "total_training_subsidized_cost": {
                      "type": "object"
                    },
                    "total_participants": {
                      "type": "integer"
                    },
                    "training_attendance_status": {
                      "type": "string",
                      "enum": [
                        "notassigned",
                        "notstarted",
                        "missing",
                        "started",
                        "partiallycompleted",
                        "completed"
                      ]
                    },
                    "valid_for": {
                      "type": "integer"
                    },
                    "objectives": {
                      "type": "string",
                      "description": "Objectives of the course",
                      "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
                    },
                    "number_of_expired_participants": {
                      "type": "integer",
                      "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
                      "example": 2
                    },
                    "access_id": {
                      "type": "integer"
                    },
                    "session_attendance": {
                      "type": "string"
                    },
                    "competency_id": {
                      "type": "integer"
                    },
                    "modality": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "status",
                  "notify"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "notify": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/training_memberships": {
      "get": {
        "tags": [
          "Trainings > TrainingMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Training memberships",
        "summary": "Reads all Training memberships",
        "parameters": [
          {
            "name": "training_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "This field is used to filter those trainings memberships that belongs to this training.",
              "example": 1
            },
            "description": "This field is used to filter those trainings memberships that belongs to this training.",
            "example": 1,
            "required": true
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "description": "This field is used to filter those trainings memberships whose id match with the given.",
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              }
            },
            "description": "This field is used to filter those trainings memberships whose id match with the given.",
            "example": [
              1,
              2
            ]
          },
          {
            "name": "access_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "access_id associated to the employee, refers to employees/employees endpoint.",
              "example": 1
            },
            "description": "access_id associated to the employee, refers to employees/employees endpoint.",
            "example": 1
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "This field is used to filter those trainings memberships whose employee name include some of the text written.",
              "example": "Jane Doe"
            },
            "description": "This field is used to filter those trainings memberships whose employee name include some of the text written.",
            "example": "Jane Doe"
          },
          {
            "name": "team_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "This field is used to filter those memberships whose employees belongs to this team.",
              "example": 1
            },
            "description": "This field is used to filter those memberships whose employees belongs to this team.",
            "example": 1
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
              "example": "notstarted"
            },
            "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
            "example": "notstarted"
          },
          {
            "name": "class_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "This field is used to filter those trainings memberships whose employees belongs to this group.",
              "example": 1
            },
            "description": "This field is used to filter those trainings memberships whose employees belongs to this group.",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "training_id",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the training membership.",
                        "example": 1
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "Access_id associated to the employee, refers to employees/employees endpoint.",
                        "example": 1
                      },
                      "training_id": {
                        "type": "integer",
                        "description": "This field is used to filter those trainings memberships that belongs to this training.",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
                        "example": "notstarted"
                      },
                      "training_due_date": {
                        "type": "string",
                        "description": "This field is used for those trainings with an expiry date.",
                        "example": "2022-01-01"
                      },
                      "training_completed_at": {
                        "type": "string",
                        "description": "This field is used to record the date a training was completed for trainings that have an expiry date.",
                        "example": "2022-01-01"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/training_memberships/{id}": {
      "get": {
        "tags": [
          "Trainings > TrainingMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Training membership",
        "summary": "Reads a single Training membership",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "training_id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the training membership.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "Access_id associated to the employee, refers to employees/employees endpoint.",
                      "example": 1
                    },
                    "training_id": {
                      "type": "integer",
                      "description": "This field is used to filter those trainings memberships that belongs to this training.",
                      "example": 1
                    },
                    "status": {
                      "type": "string",
                      "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
                      "example": "notstarted"
                    },
                    "training_due_date": {
                      "type": "string",
                      "description": "This field is used for those trainings with an expiry date.",
                      "example": "2022-01-01"
                    },
                    "training_completed_at": {
                      "type": "string",
                      "description": "This field is used to record the date a training was completed for trainings that have an expiry date.",
                      "example": "2022-01-01"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Trainings > TrainingMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Update a training membership",
        "summary": "Updates a Training membership",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "access_id",
                    "training_id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the training membership.",
                      "example": 1
                    },
                    "access_id": {
                      "type": "integer",
                      "description": "Access_id associated to the employee, refers to employees/employees endpoint.",
                      "example": 1
                    },
                    "training_id": {
                      "type": "integer",
                      "description": "This field is used to filter those trainings memberships that belongs to this training.",
                      "example": 1
                    },
                    "status": {
                      "type": "string",
                      "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
                      "example": "notstarted"
                    },
                    "training_due_date": {
                      "type": "string",
                      "description": "This field is used for those trainings with an expiry date.",
                      "example": "2022-01-01"
                    },
                    "training_completed_at": {
                      "type": "string",
                      "description": "This field is used to record the date a training was completed for trainings that have an expiry date.",
                      "example": "2022-01-01"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the training membership. Only used to identify the training membership to update.",
                    "example": 1
                  },
                  "training_completed_at": {
                    "type": "string",
                    "description": "This field is used to record the date a training was completed for trainings that have an expiry date.",
                    "example": "2022-01-01"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/training_memberships/bulk_create": {
      "post": {
        "tags": [
          "Trainings > TrainingMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk creates a Training membership",
        "summary": "Bulk creates a Training membership",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "training_id",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the training membership.",
                        "example": 1
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "Access_id associated to the employee, refers to employees/employees endpoint.",
                        "example": 1
                      },
                      "training_id": {
                        "type": "integer",
                        "description": "This field is used to filter those trainings memberships that belongs to this training.",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
                        "example": "notstarted"
                      },
                      "training_due_date": {
                        "type": "string",
                        "description": "This field is used for those trainings with an expiry date.",
                        "example": "2022-01-01"
                      },
                      "training_completed_at": {
                        "type": "string",
                        "description": "This field is used to record the date a training was completed for trainings that have an expiry date.",
                        "example": "2022-01-01"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "training_id"
                ],
                "properties": {
                  "access_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "employee_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "training_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/trainings/training_memberships/bulk_destroy": {
      "post": {
        "tags": [
          "Trainings > TrainingMembership"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk destroys a Training membership",
        "summary": "Bulk destroys a Training membership",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "access_id",
                      "training_id",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique identifier for the training membership.",
                        "example": 1
                      },
                      "access_id": {
                        "type": "integer",
                        "description": "Access_id associated to the employee, refers to employees/employees endpoint.",
                        "example": 1
                      },
                      "training_id": {
                        "type": "integer",
                        "description": "This field is used to filter those trainings memberships that belongs to this training.",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
                        "example": "notstarted"
                      },
                      "training_due_date": {
                        "type": "string",
                        "description": "This field is used for those trainings with an expiry date.",
                        "example": "2022-01-01"
                      },
                      "training_completed_at": {
                        "type": "string",
                        "description": "This field is used to record the date a training was completed for trainings that have an expiry date.",
                        "example": "2022-01-01"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/day_configurations": {
      "get": {
        "tags": [
          "WorkSchedule > DayConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Day configurations",
        "summary": "Reads all Day configurations",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "overlap_period_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "schedule_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "overlap_period_id",
                      "weekday",
                      "duration_in_seconds"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "overlap_period_id": {
                        "type": "integer"
                      },
                      "weekday": {
                        "type": "string"
                      },
                      "start_at": {
                        "type": "string"
                      },
                      "duration_in_seconds": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/day_configurations/{id}": {
      "get": {
        "tags": [
          "WorkSchedule > DayConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Day configuration",
        "summary": "Reads a single Day configuration",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "overlap_period_id",
                    "weekday",
                    "duration_in_seconds"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "overlap_period_id": {
                      "type": "integer"
                    },
                    "weekday": {
                      "type": "string"
                    },
                    "start_at": {
                      "type": "string"
                    },
                    "duration_in_seconds": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/day_configurations/bulk_cud": {
      "post": {
        "tags": [
          "WorkSchedule > DayConfiguration"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Bulk cuds a Day configuration",
        "summary": "Bulk cuds a Day configuration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "overlap_period_id",
                    "weekday",
                    "duration_in_seconds"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "overlap_period_id": {
                      "type": "integer"
                    },
                    "weekday": {
                      "type": "string"
                    },
                    "start_at": {
                      "type": "string"
                    },
                    "duration_in_seconds": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "overlap_period_id",
                  "day_configurations"
                ],
                "properties": {
                  "overlap_period_id": {
                    "type": "integer"
                  },
                  "day_configurations": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/overlap_periods": {
      "get": {
        "tags": [
          "WorkSchedule > OverlapPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Overlap periods",
        "summary": "Reads all Overlap periods",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "default",
                      "schedule_id",
                      "start_month",
                      "start_day",
                      "end_month",
                      "end_day",
                      "schedule_type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "schedule_id": {
                        "type": "integer"
                      },
                      "start_month": {
                        "type": "integer"
                      },
                      "start_day": {
                        "type": "integer"
                      },
                      "end_month": {
                        "type": "integer"
                      },
                      "end_day": {
                        "type": "integer"
                      },
                      "schedule_type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkSchedule > OverlapPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates an Overlap period",
        "summary": "Creates an Overlap period",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "default",
                    "schedule_id",
                    "start_month",
                    "start_day",
                    "end_month",
                    "end_day",
                    "schedule_type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "default": {
                      "type": "boolean"
                    },
                    "schedule_id": {
                      "type": "integer"
                    },
                    "start_month": {
                      "type": "integer"
                    },
                    "start_day": {
                      "type": "integer"
                    },
                    "end_month": {
                      "type": "integer"
                    },
                    "end_day": {
                      "type": "integer"
                    },
                    "schedule_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "author",
                  "schedule_id",
                  "create_params"
                ],
                "properties": {
                  "author": {
                    "type": "object"
                  },
                  "schedule_id": {
                    "type": "integer"
                  },
                  "create_params": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/overlap_periods/{id}": {
      "put": {
        "tags": [
          "WorkSchedule > OverlapPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates an Overlap period",
        "summary": "Updates an Overlap period",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "default",
                    "schedule_id",
                    "start_month",
                    "start_day",
                    "end_month",
                    "end_day",
                    "schedule_type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "default": {
                      "type": "boolean"
                    },
                    "schedule_id": {
                      "type": "integer"
                    },
                    "start_month": {
                      "type": "integer"
                    },
                    "start_day": {
                      "type": "integer"
                    },
                    "end_month": {
                      "type": "integer"
                    },
                    "end_day": {
                      "type": "integer"
                    },
                    "schedule_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "author",
                  "id",
                  "update_params"
                ],
                "properties": {
                  "author": {
                    "type": "object"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "update_params": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkSchedule > OverlapPeriod"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Deletes an Overlap period",
        "summary": "Deletes an Overlap period",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "default",
                    "schedule_id",
                    "start_month",
                    "start_day",
                    "end_month",
                    "end_day",
                    "schedule_type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "default": {
                      "type": "boolean"
                    },
                    "schedule_id": {
                      "type": "integer"
                    },
                    "start_month": {
                      "type": "integer"
                    },
                    "start_day": {
                      "type": "integer"
                    },
                    "end_month": {
                      "type": "integer"
                    },
                    "end_day": {
                      "type": "integer"
                    },
                    "schedule_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/schedules": {
      "get": {
        "tags": [
          "WorkSchedule > Schedule"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads all Schedules",
        "summary": "Reads all Schedules",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "with_employee_ids",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "with_periods",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "company_id",
                      "created_at",
                      "updated_at",
                      "employee_ids",
                      "periods"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "archived_at": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "employee_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "periods": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkSchedule > Schedule"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Creates a Schedule",
        "summary": "Creates a Schedule",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "employee_ids",
                    "periods"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "periods": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "schedule_type"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "schedule_type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/schedules/{id}": {
      "get": {
        "tags": [
          "WorkSchedule > Schedule"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Reads a single Schedule",
        "summary": "Reads a single Schedule",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "employee_ids",
                    "periods"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "periods": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkSchedule > Schedule"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Updates a Schedule",
        "summary": "Updates a Schedule",
        "parameters": [
          {
            "name": "id",
            "example": "1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "employee_ids",
                    "periods"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "periods": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "author"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "author": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/2024-10-01/resources/work_schedule/schedules/toggle_archive": {
      "post": {
        "tags": [
          "WorkSchedule > Schedule"
        ],
        "security": [
          {
            "oauth2": []
          },
          {
            "apikey": []
          }
        ],
        "description": "Toggle archives a Schedule",
        "summary": "Toggle archives a Schedule",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "company_id",
                    "created_at",
                    "updated_at",
                    "employee_ids",
                    "periods"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "archived_at": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "employee_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "periods": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "author"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "author": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/oauth/authorize",
            "tokenUrl": "/oauth/token",
            "refreshUrl": "/oauth/token",
            "scopes": {
              "read": "Required for all operations",
              "write": "Required for write operations"
            }
          }
        }
      },
      "apikey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "api_public_credential": {
        "type": "object",
        "required": [
          "company_id",
          "id",
          "employee_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "company id for all kind of accesses",
            "example": 1
          },
          "id": {
            "type": "integer",
            "description": "id of the credential prefixed by the type of credential",
            "example": "access-1"
          },
          "email": {
            "type": "string",
            "description": "Only for Access Oauth token",
            "example": "test@factorial.co"
          },
          "login_email": {
            "type": "string",
            "description": "Only for Access Oauth token",
            "example": "test@factorial.co"
          },
          "full_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string",
            "description": "Only for Access Oauth token",
            "example": "Hellen"
          },
          "last_name": {
            "type": "string",
            "description": "Only for Access Oauth token",
            "example": "Smith"
          },
          "employee_id": {
            "type": "integer",
            "description": "Id for hte employee related. Only for Access Oauth token",
            "example": 1
          },
          "role": {
            "type": "string",
            "description": "Employee role in the Company. Only for Access Oauth token",
            "example": "Smith"
          },
          "gdpr_tos": {
            "type": "boolean",
            "description": "Only for Company Oauth or API key",
            "example": "General Data Protection Regulation Terms of Service acceptance"
          },
          "legal_name": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Company legal name"
          },
          "locale": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Company locale"
          },
          "logo": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Thumbnail companylogo url"
          },
          "name": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Company name"
          },
          "onboarded_on": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Factorial onboarding date"
          },
          "subscription_plan": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Company subscription plan"
          },
          "tin": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Company tax identification number"
          },
          "to_be_deleted": {
            "type": "string",
            "description": "Only for Company Oauth or API key",
            "example": "Company deletion date"
          },
          "tos": {
            "type": "boolean",
            "description": "Only for Company Oauth or API key",
            "example": "Terms of Service acceptance"
          }
        }
      },
      "api_public_webhook_subscription": {
        "type": "object",
        "required": [
          "id",
          "target_url",
          "type",
          "enabled",
          "api_version"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the webhook subscription",
            "example": 1
          },
          "target_url": {
            "type": "string",
            "description": "URL where the webhook payload will be sent",
            "example": "https://webhook.site/"
          },
          "type": {
            "type": "string",
            "description": "Type of the webhook subscription",
            "example": "ats/job_posting/create"
          },
          "company_id": {
            "type": "integer",
            "description": "Company identifier of the webhook subscription",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the webhook subscription",
            "example": "Webhook subscription of a job posting created"
          },
          "challenge": {
            "type": "string",
            "description": "String to verify the subscription",
            "example": "2bca4e6d-9aaf-4f11-9e5d"
          },
          "enabled": {
            "type": "boolean",
            "description": "Boolean to enable/disable the subscription",
            "example": true
          },
          "api_version": {
            "type": "string",
            "description": "API version of the webhook subscription that determines the schema of the payload",
            "example": "2024-10-01"
          }
        }
      },
      "ats_answer": {
        "type": "object",
        "required": [
          "id",
          "ats_application_id",
          "original_question_label",
          "original_question_type",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the answer",
            "example": 1
          },
          "ats_question_id": {
            "type": "integer",
            "description": "Identifier of the question",
            "example": 1
          },
          "ats_application_id": {
            "type": "integer",
            "description": "Identifier of the application",
            "example": 1
          },
          "original_question_label": {
            "type": "string",
            "description": "Question label of the answer",
            "example": "How was your application ranked?"
          },
          "value": {
            "type": "string",
            "description": "Value of the answer",
            "example": "One of the best I have ever seen"
          },
          "original_question_type": {
            "type": "string",
            "description": "Original type of the question",
            "enum": [
              "text",
              "long_text",
              "single_choice",
              "multiple_choice",
              "file"
            ],
            "example": "single_choice"
          },
          "created_at": {
            "type": "string",
            "description": "Created date of the answer",
            "example": "2021-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "description": "Last updated date of the answer",
            "example": "2021-01-01T00:00:00Z"
          }
        }
      },
      "ats_application": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "ats_job_posting_id",
          "ats_candidate_id",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the application",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Company id of the application",
            "example": 1
          },
          "ats_job_posting_id": {
            "type": "integer",
            "description": "Job posting id of the application",
            "example": 1
          },
          "ats_candidate_id": {
            "type": "integer",
            "description": "Candidate id of the application",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "Employee id of the application",
            "example": 1
          },
          "phone": {
            "type": "string",
            "description": "Candidate phone of the application",
            "example": "123321"
          },
          "qualified": {
            "type": "boolean",
            "description": "Qualified of the application",
            "example": true
          },
          "ats_application_phase_id": {
            "type": "integer",
            "description": "Application phase id",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "description": "Application created at date",
            "example": "2024-08-19T14:30:00Z"
          },
          "cover_letter": {
            "type": "string",
            "description": "Application cover letter",
            "example": "cover_letter"
          },
          "ats_conversation_id": {
            "type": "integer",
            "description": "Application conversation id",
            "example": 1
          },
          "medium": {
            "type": "string",
            "description": "Application medium",
            "example": "medium"
          },
          "rating_average": {
            "type": "integer",
            "description": "Application average rating",
            "example": 1
          },
          "ats_rejection_reason_id": {
            "type": "integer",
            "description": "Application rejection reason id",
            "example": 1
          },
          "source_id": {
            "type": "integer",
            "description": "Application source id",
            "example": 1
          }
        }
      },
      "ats_application_phase": {
        "type": "object",
        "required": [
          "id",
          "ats_job_posting_id",
          "name",
          "position",
          "editable",
          "phase_type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the application Phase",
            "example": 1
          },
          "ats_job_posting_id": {
            "type": "integer",
            "description": "Job posting of the application phase",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the application phase",
            "example": "In review"
          },
          "position": {
            "type": "integer",
            "description": "Position of the application phase",
            "example": 1
          },
          "editable": {
            "type": "boolean",
            "description": "If the application phase is editable",
            "example": true
          },
          "phase_type": {
            "type": "string",
            "description": "Application phase type",
            "enum": [
              "initial",
              "normal",
              "hired",
              "screening",
              "interview",
              "assessment",
              "offer"
            ],
            "example": "Screening"
          },
          "applications_count": {
            "type": "integer",
            "description": "Active application count",
            "example": 1
          },
          "active_applications_count": {
            "type": "integer"
          },
          "ats_hiring_stage_id": {
            "type": "integer",
            "description": "Hiring stage identifier",
            "example": 1
          }
        }
      },
      "ats_candidate": {
        "type": "object",
        "required": [
          "id",
          "first_name",
          "last_name",
          "full_name",
          "talent_pool",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier of the candidate.",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "company identifier.",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "description": "name of the candidate.",
            "example": "Ana"
          },
          "last_name": {
            "type": "string",
            "description": "last name of the candidate.",
            "example": "Fernandez Perez"
          },
          "full_name": {
            "type": "string",
            "description": "full name of the candidate.",
            "example": "Ana Fernandez Perez"
          },
          "email": {
            "type": "string",
            "description": "email of the candidate.",
            "example": "ana@factorial.com"
          },
          "talent_pool": {
            "type": "boolean",
            "description": "is the candidate part of talent pool?",
            "example": true
          },
          "phone_number": {
            "type": "string",
            "description": "phone number of the candidate.",
            "example": 645786980
          },
          "created_at": {
            "type": "string",
            "description": "creation date of the candidate.",
            "example": "2021-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "description": "last update of the candidate.",
            "example": "2021-01-01T00:00:00Z"
          },
          "consent_given_at": {
            "type": "string",
            "description": "date when the consent was given.",
            "example": "2021-01-01T00:00:00Z"
          },
          "inactive_since": {
            "type": "string",
            "description": "date when the candidate became inactive.",
            "example": "2021-01-01T00:00:00Z"
          },
          "ats_job_posting_ids": {
            "type": "array",
            "description": "list of job posting identifiers.",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "integer"
            }
          },
          "personal_url": {
            "type": "string",
            "description": "personal web resource from the candidate.",
            "example": "https://anaperez.factorial.com"
          },
          "consent_expiration_date": {
            "type": "string",
            "description": "date when the consent expires.",
            "example": "2021-01-01T00:00:00Z"
          },
          "consent_to_talent_pool": {
            "type": "boolean",
            "description": "consent to talent pool.",
            "example": true
          },
          "medium": {
            "type": "string",
            "description": "specifies additional details related to the source of the candidate, such as the referrer name for example if the source is referred.",
            "example": "email"
          },
          "source_id": {
            "type": "integer",
            "description": "candidate source identifier, refers to ats/candidate_sources endpoint.",
            "example": 1
          },
          "gender": {
            "type": "string",
            "description": "gender of the candidate.",
            "enum": [
              "female",
              "male",
              "unanswered",
              "other"
            ],
            "example": "female"
          },
          "score": {
            "type": "number",
            "description": "score of the candidate.",
            "example": 7
          }
        }
      },
      "ats_candidate_source": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "category",
          "name",
          "label"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier of the source.",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "identifier of the company.",
            "example": 1
          },
          "category": {
            "type": "string",
            "description": "category of the source.",
            "enum": [
              "job_board",
              "agency_or_external_recruiter",
              "event",
              "social_media",
              "referral",
              "internal",
              "manually_added",
              "organic"
            ],
            "example": "social_media"
          },
          "name": {
            "type": "string",
            "description": "name of the source.",
            "example": "manually_added"
          },
          "label": {
            "type": "string",
            "description": "Translated label of the source if it is a default one, or name otherwise",
            "example": "Manually added"
          }
        }
      },
      "ats_evaluation_form": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "name",
          "questions",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the evaluation form.",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Id of the company that the evaluation form belongs to.",
            "example": 1
          },
          "ats_job_posting_id": {
            "type": "integer",
            "description": "Id of the job posting that the evaluation form is associated with.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the evaluation form.",
            "example": "Technical Evaluation"
          },
          "based_on_id": {
            "type": "integer",
            "description": "Id of the evaluation form that this evaluation form is related.",
            "example": 1
          },
          "questions": {
            "type": "array",
            "description": "List of questions in the evaluation form.",
            "example": [
              {
                "id": 1,
                "text": "What is your experience with Ruby on Rails?",
                "description": "experience in years"
              }
            ],
            "items": {}
          },
          "created_at": {
            "type": "string",
            "description": "date and time when the evaluation form was created.",
            "example": "2021-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "description": "date and time when the evaluation form was last updated.",
            "example": "2021-01-01T00:00:00Z"
          }
        }
      },
      "ats_feedback": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "ats_candidate_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "the ID of the feedback entry.",
            "example": 1
          },
          "rating": {
            "type": "integer",
            "description": "the overall rating from 1 to 5 for the candidate's application.",
            "example": 4
          },
          "description": {
            "type": "string",
            "description": "the description of the feedback provided.",
            "example": "The candidate has a great attitude and is a good fit for the team."
          },
          "ats_application_id": {
            "type": "integer",
            "description": "the ID of the application related to the feedback.",
            "example": 1
          },
          "ats_application_phase_id": {
            "type": "integer",
            "description": "the ID of the phase within the application related to the feedback.",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "description": "the date and time when the feedback entry was created.",
            "example": "2022-01-01T00:00:00Z"
          },
          "ats_candidate_id": {
            "type": "integer",
            "description": "the ID of the candidate to whom the feedback is associated.",
            "example": 1
          },
          "ats_evaluation_forms_id": {
            "type": "integer",
            "description": "the ID of the evaluation form to which the feedback belongs if the evaluation forms feature is active.",
            "example": 1
          },
          "evaluation_form_answers": {
            "type": "array",
            "description": "the answers from the evaluation form, if this feedback is related to an evaluation form.",
            "example": [
              {
                "id": 1,
                "score": 3,
                "note": "Good communication skills."
              }
            ],
            "items": {}
          }
        }
      },
      "ats_hiring_stage": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id",
          "position"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the hiring stage",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the hiring stage",
            "enum": [
              "new",
              "screening",
              "interview",
              "assessment",
              "offer",
              "hired"
            ],
            "example": "Hired"
          },
          "company_id": {
            "type": "integer",
            "description": "Company identifier of the hiring stage",
            "example": 1
          },
          "position": {
            "type": "integer",
            "description": "Position of the hiring stage",
            "example": 1
          }
        }
      },
      "ats_job_posting": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "ats_company_id",
          "title",
          "remote",
          "status",
          "cv_requirement",
          "cover_letter_requirement",
          "phone_requirement",
          "photo_requirement",
          "salary_period",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the job posting",
            "example": 1
          },
          "company_id": {
            "type": "integer"
          },
          "ats_company_id": {
            "type": "integer",
            "description": "Identifier of the ATS company associated with the job posting",
            "example": "1"
          },
          "title": {
            "type": "string",
            "description": "Title of the job posting",
            "example": "My job title"
          },
          "description": {
            "type": "string",
            "description": "Description of the job posting",
            "example": "My job description"
          },
          "contract_type": {
            "type": "string"
          },
          "workplace_type": {
            "type": "string"
          },
          "remote": {
            "type": "boolean",
            "description": "Indicates if the job posting is remote",
            "example": "true"
          },
          "status": {
            "type": "string",
            "description": "The current status of the job posting (e.g., draft, published, archived)",
            "enum": [
              "draft",
              "published",
              "unlisted",
              "archived",
              "cancelled"
            ],
            "example": "draft"
          },
          "schedule_type": {
            "type": "string",
            "description": "The schedule type of the job posting (e.g., full_time, part_time)",
            "example": "full_time"
          },
          "team_id": {
            "type": "integer",
            "description": "Identifier of the team associated with the job posting",
            "example": "1"
          },
          "location_id": {
            "type": "integer",
            "description": "Identifier of the location associated with the job posting",
            "example": "1"
          },
          "legal_entity_id": {
            "type": "integer",
            "description": "Identifier of the legal entity associated with the job posting",
            "example": "1"
          },
          "salary_format": {
            "type": "string",
            "description": "The format of the salary (e.g., range, fixed_amount)",
            "example": "range"
          },
          "salary_from_amount_in_cents": {
            "type": "integer",
            "description": "The minimum salary amount in cents",
            "example": "3000000"
          },
          "salary_to_amount_in_cents": {
            "type": "integer",
            "description": "The maximum salary amount in cents",
            "example": "5000000"
          },
          "hide_salary": {
            "type": "boolean",
            "description": "Indicates whether the salary information for the job posting should be hidden from applicants.",
            "example": "true"
          },
          "cv_requirement": {
            "type": "string",
            "description": "Requirement for the CV (e.g, mandatory, optional, do_not_ask)",
            "example": "mandatory"
          },
          "cover_letter_requirement": {
            "type": "string",
            "description": "Requirement for the cover letter (e.g, mandatory, optional, do_not_ask)",
            "example": "optional"
          },
          "phone_requirement": {
            "type": "string",
            "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
            "example": "do_not_ask"
          },
          "photo_requirement": {
            "type": "string",
            "description": "Requirement for the phone number (e.g, mandatory, optional, do_not_ask)",
            "example": "do_not_ask"
          },
          "preview_token": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "description": "If published, the public URL of the job posting. Otherwise will be null",
            "example": "https://my-factorial-domain/job_posting/job-title-slug"
          },
          "salary_period": {
            "type": "string",
            "enum": [
              "annual",
              "monthly",
              "daily"
            ]
          },
          "published_at": {
            "type": "string",
            "description": "Published date in ISO 8601 format of the job. If never been published the value will be null",
            "example": "Tue, 02 Jul 2024 08:28:00.000000000 UTC +00:00"
          },
          "created_at": {
            "type": "string",
            "description": "Date in ISO 8601 format when the job posting was created",
            "example": "Wed, 10 Jul 2024 13:30:02.000000000 UTC +00:00"
          }
        }
      },
      "ats_message": {
        "type": "object",
        "required": [
          "id",
          "content",
          "ats_conversation_id",
          "sent_by_id",
          "sent_by_type",
          "created_at",
          "attachments",
          "topic"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "ats_conversation_id": {
            "type": "integer"
          },
          "sent_by_id": {
            "type": "integer"
          },
          "sent_by_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {}
          },
          "topic": {
            "type": "string"
          },
          "delayed_until": {
            "type": "string"
          },
          "sent_at": {
            "type": "string"
          },
          "delivered_at": {
            "type": "string"
          },
          "opened_at": {
            "type": "string"
          },
          "last_error_at": {
            "type": "string"
          }
        }
      },
      "ats_rejection_reason": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "decision_maker",
          "reason",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Rejection reason identifier",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Company identifier of the rejection reason",
            "example": 1
          },
          "decision_maker": {
            "type": "string",
            "description": "Decision maker of the rejection reason",
            "enum": [
              "company",
              "candidate"
            ],
            "example": "candidate"
          },
          "reason": {
            "type": "string",
            "description": "Reason of the rejection",
            "example": "Unfit for the role"
          },
          "created_at": {
            "type": "string",
            "description": "Rejection reason created date",
            "example": "2024-08-22T14:30:00-07:00"
          },
          "updated_at": {
            "type": "string",
            "description": "Rejection reason updated date",
            "example": "2024-08-22T14:30:00-07:00"
          }
        }
      },
      "attendance_break_configuration": {
        "type": "object",
        "required": [
          "id",
          "attendance_employees_setting_id",
          "time_settings_break_configuration_id",
          "enabled"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "attendance_employees_setting_id": {
            "type": "integer",
            "description": "Id of the attendance employee setting"
          },
          "time_settings_break_configuration_id": {
            "type": "integer",
            "description": "Id of the time settings break configuration"
          },
          "enabled": {
            "type": "boolean",
            "description": "Status of the break configuration if enabled or not"
          },
          "name": {
            "type": "string",
            "description": "Name of the break configuration"
          },
          "paid": {
            "type": "boolean",
            "description": "Check the break configuration is paid or not"
          }
        }
      },
      "attendance_estimated_time": {
        "type": "object",
        "required": [
          "date",
          "company_id",
          "employee_id",
          "expected_minutes",
          "regular_minutes",
          "overtime_minutes",
          "breaks",
          "time_unit",
          "estimated_half_days",
          "shifts",
          "source",
          "minutes"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "company_id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "expected_minutes": {
            "type": "number",
            "description": "Amount of minutes the employee has to work without taking into consideration time off leaves and bank holidays."
          },
          "regular_minutes": {
            "type": "number",
            "description": "Amount of regular minutes the employee has to work."
          },
          "overtime_minutes": {
            "type": "number",
            "description": "Amount of overtime minutes the employee has to work (only available with Shift Management)."
          },
          "breaks": {
            "type": "array",
            "items": {}
          },
          "time_unit": {
            "type": "string",
            "enum": [
              "minute",
              "half_day",
              "none"
            ]
          },
          "estimated_half_days": {
            "type": "integer"
          },
          "shifts": {
            "type": "array",
            "items": {}
          },
          "source": {
            "type": "string",
            "description": "Source of the estimated time. Could be employee's contract, work schedule or shift management.",
            "enum": [
              "shift_management",
              "work_schedule",
              "contract_hours",
              "none"
            ]
          },
          "minutes": {
            "type": "number",
            "description": "Amount of minutes the employee has to work."
          }
        }
      },
      "attendance_open_shift": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "date",
          "clock_in",
          "status",
          "workable",
          "automatic_clock_in"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Open Shift identifier.",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "Employee identifier from the open shift.",
            "example": 1
          },
          "date": {
            "type": "string",
            "description": "Date of the open shift.",
            "example": "2024-06-06"
          },
          "clock_in": {
            "type": "string",
            "description": "Clock in time from the shift. Ignore the date part.",
            "example": "2000-01-01T02:35:25.000Z"
          },
          "clock_out": {
            "type": "string",
            "description": "For open shifts, this field is null."
          },
          "status": {
            "type": "string",
            "description": "Status of the shift",
            "enum": [
              "opened",
              "closed",
              "created"
            ],
            "example": "opened"
          },
          "workable": {
            "type": "boolean",
            "description": "Indicates if the shift is a break or a workable shift.",
            "example": true
          },
          "automatic_clock_in": {
            "type": "boolean",
            "description": "Indicates if the shift is automatic or not"
          },
          "location_type": {
            "type": "string",
            "description": "String representing the location type of the shift. Examples work_from_home, office, etc.",
            "example": "work_from_home"
          },
          "workplace_id": {
            "type": "integer",
            "description": "Identifier for the workplace assinged to the shift.",
            "example": 1
          },
          "time_settings_break_configuration_id": {
            "type": "integer",
            "description": "If the shift is a break, this field will have the break configuration id.",
            "example": 1
          }
        }
      },
      "attendance_overtime_request": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "author_id",
          "status",
          "date",
          "hours_amount_in_cents",
          "approver",
          "is_editable"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "approver_id": {
            "type": "integer"
          },
          "author_id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected",
              "none"
            ]
          },
          "description": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "hours_amount_in_cents": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "approver": {
            "type": "boolean"
          },
          "approver_full_name": {
            "type": "string"
          },
          "is_editable": {
            "type": "boolean",
            "description": "Defines if the overtime request can be edited"
          }
        }
      },
      "attendance_shift": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "date",
          "reference_date",
          "created_at",
          "company_id",
          "minutes"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the shift",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "Identifier for the employee assigned to the shift",
            "example": 1
          },
          "date": {
            "type": "string",
            "description": "Date of the shift",
            "example": "2023-10-01"
          },
          "reference_date": {
            "type": "string",
            "description": "Reference date for the shift",
            "example": "2023-09-30"
          },
          "clock_in": {
            "type": "string",
            "description": "Time when the employee clocked in",
            "example": "08:30"
          },
          "clock_out": {
            "type": "string",
            "description": "Time when the employee clocked out",
            "example": "12:30"
          },
          "in_source": {
            "type": "string",
            "description": "Source of the clock-in time",
            "example": "automatic"
          },
          "out_source": {
            "type": "string",
            "description": "Source of the clock-out time",
            "example": "automatic"
          },
          "observations": {
            "type": "string",
            "description": "Additional observations about the shift",
            "example": "Employee arrived late due to traffic"
          },
          "location_type": {
            "type": "string",
            "description": "Type of location for the shift",
            "enum": [
              "office",
              "business_trip",
              "work_from_home"
            ],
            "example": "office"
          },
          "half_day": {
            "type": "string",
            "description": "Indicates which worked part of the day",
            "enum": [
              "beginning_of_day",
              "end_of_day"
            ],
            "example": "beginning_of_day"
          },
          "in_location_latitude": {
            "type": "number",
            "description": "Latitude of the clock-in location",
            "example": 37.7749
          },
          "in_location_longitude": {
            "type": "number",
            "description": "Longitude of the clock-in location",
            "example": -122.4194
          },
          "in_location_accuracy": {
            "type": "number",
            "description": "Accuracy of the clock-in location",
            "example": 5
          },
          "out_location_latitude": {
            "type": "number",
            "description": "Latitude of the clock-out location",
            "example": 37.7749
          },
          "out_location_longitude": {
            "type": "number",
            "description": "Longitude of the clock-out location",
            "example": -122.4194
          },
          "out_location_accuracy": {
            "type": "number",
            "description": "Accuracy of the clock-out location",
            "example": 5.7
          },
          "workable": {
            "type": "boolean",
            "description": "Indicates if the shift is workable",
            "example": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp when the shift record was created",
            "example": "2023-10-01T08:00:00Z"
          },
          "workplace_id": {
            "type": "integer",
            "description": "Identifier for the location",
            "example": 1
          },
          "time_settings_break_configuration_id": {
            "type": "integer",
            "description": "Identifier for the break configuration",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Identifier for the company",
            "example": 1
          },
          "minutes": {
            "type": "integer",
            "description": "Number in minutes of the shift",
            "example": 152
          },
          "clock_in_with_seconds": {
            "type": "string",
            "description": "Clock in time with seconds",
            "example": "08:30:15"
          }
        }
      },
      "attendance_worked_time": {
        "type": "object",
        "required": [
          "employee_id",
          "date",
          "company_id",
          "tracked_minutes",
          "effective_minutes",
          "pending_minutes",
          "minutes",
          "time_unit",
          "worked_time_blocks",
          "day_type",
          "id"
        ],
        "properties": {
          "employee_id": {
            "type": "integer"
          },
          "date": {
            "type": "string"
          },
          "company_id": {
            "type": "integer"
          },
          "tracked_minutes": {
            "type": "integer"
          },
          "effective_minutes": {
            "type": "integer"
          },
          "pending_minutes": {
            "type": "integer"
          },
          "minutes": {
            "type": "integer"
          },
          "time_unit": {
            "type": "string",
            "enum": [
              "minute",
              "half_day",
              "none"
            ]
          },
          "worked_time_blocks": {
            "type": "array",
            "items": {}
          },
          "day_type": {
            "type": "string",
            "enum": [
              "saturday",
              "sunday",
              "bank_holiday",
              "workday"
            ]
          },
          "id": {
            "type": "string",
            "description": "ID to specify the worked times it include the employee_id and the date but you can't fetch the certain worked time by this date",
            "example": "1_2024-07-01"
          }
        }
      },
      "bookkeepers_management_incidence": {
        "type": "object",
        "required": [
          "id",
          "legal_entity_id",
          "name",
          "target_id",
          "target_type",
          "status",
          "company_id",
          "created_at",
          "is_reopened"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier of the incidence (aka employee update).",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "identifier of employee related.",
            "example": 1
          },
          "legal_entity_id": {
            "type": "integer",
            "description": "identifier of legal entity related.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "name of the incidence (aka employee update). It also represent the incidence type. For example a new hire incidence will be",
            "example": "hiring"
          },
          "custom_name": {
            "type": "string"
          },
          "target_id": {
            "type": "integer",
            "description": "The incidence (aka employee update) is also related to a another resource, for example for a leave target, the target identifier will be the leave id.",
            "example": 1
          },
          "target_type": {
            "type": "string",
            "description": "The incidence (aka employee update) is also related to a another resource, for example a leave. This is the target type. The other types are Employee, Contracts::ContractVersion, BookkeepersManagement::ManualIncidence, Finance::CostCenterMembership.",
            "example": "Timeoff::Leave"
          },
          "starts_on": {
            "type": "string",
            "description": "The date the incidence (aka employee update) starts.",
            "example": "2020-01-01"
          },
          "ends_on": {
            "type": "string",
            "description": "The date the incidence (aka employee update) end.",
            "example": "2020-01-01"
          },
          "read_at": {
            "type": "string",
            "description": "The date the incidence (aka employee update) was read.",
            "example": "2020-01-01"
          },
          "status": {
            "type": "string"
          },
          "company_id": {
            "type": "integer",
            "description": "identifier of company related.",
            "example": 1
          },
          "message_from": {
            "type": "string",
            "description": "Indicate the message sender on the incidence (aka employee update). It can be any of 'bookkeeper', 'admin'",
            "example": "admin"
          },
          "has_message": {
            "type": "boolean",
            "description": "Boolean that indicates if the incidence (aka employee update) has unread messages.",
            "example": true
          },
          "created_at": {
            "type": "string",
            "description": "Date in which incidence (aka employee update) was created.",
            "example": true
          },
          "is_reopened": {
            "type": "boolean",
            "description": "Boolean that indicates if the incidence (aka employee update) has been reopened.",
            "example": true
          },
          "legal_entity_name": {
            "type": "string"
          },
          "employee_first_name": {
            "type": "string"
          },
          "employee_last_name": {
            "type": "string"
          }
        }
      },
      "companies_legal_entity": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "country",
          "legal_name",
          "currency"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "company_id": {
            "type": "integer"
          },
          "country": {
            "type": "string"
          },
          "legal_name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "tin": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          }
        }
      },
      "contracts_compensation": {
        "type": "object",
        "required": [
          "id",
          "contract_version_id",
          "contracts_taxonomy_id",
          "unit"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Compensation ID",
            "example": 1
          },
          "contract_version_id": {
            "type": "integer",
            "description": "Contract version ID",
            "example": 1
          },
          "contracts_taxonomy_id": {
            "type": "integer",
            "description": "Contracts taxonomy ID",
            "example": 1
          },
          "description": {
            "type": "string",
            "description": "Compensation description",
            "example": "Compensation for Meal"
          },
          "compensation_type": {
            "type": "string",
            "description": "Required field. You can only use the following options: fixed, undefined, up_to, per_worked_day, per_worked_hour",
            "example": "fixed"
          },
          "amount": {
            "type": "integer",
            "description": "Required field unless your compensation type is undefined",
            "example": 1000
          },
          "unit": {
            "type": "string",
            "description": "Unit of the compensation",
            "example": "Money"
          },
          "sync_with_supplements": {
            "type": "boolean",
            "description": "Sync with supplements"
          },
          "payroll_policy_id": {
            "type": "integer",
            "description": "Payroll policy ID",
            "example": 1
          },
          "recurrence_count": {
            "type": "integer",
            "description": "Recurrence count",
            "example": 1
          },
          "starts_on": {
            "type": "string",
            "description": "When the compensation starts_on",
            "example": "2022-01-01"
          },
          "recurrence": {
            "type": "string",
            "description": "Compensation recurrence",
            "example": "monthly"
          },
          "first_payment_on": {
            "type": "string",
            "description": "When the first payment is done",
            "example": "2022-01-01"
          },
          "calculation": {
            "type": "string",
            "description": "Compensation calculation",
            "example": "current period"
          },
          "currency": {
            "type": "string"
          },
          "time_condition": {
            "type": "string",
            "enum": [
              "full_day",
              "half_day",
              "custom"
            ]
          },
          "minimum_amount_of_hours": {
            "type": "integer"
          },
          "minimum_amount_of_hours_in_cents": {
            "type": "integer",
            "description": "Compensation expected minimum amount of hours in cents",
            "example": 1000
          }
        }
      },
      "contracts_contract_version": {
        "type": "object",
        "required": [
          "company_id",
          "employee_id",
          "effective_on",
          "has_payroll",
          "created_at",
          "updated_at",
          "fr_forfait_jours"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier for the contract version.",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "identifier for company.",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "employee identifier, refers to /employees/employees endpoint.",
            "example": 1
          },
          "effective_on": {
            "type": "string",
            "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
            "example": "2024-10-06"
          },
          "country": {
            "type": "string",
            "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "job_title": {
            "type": "string",
            "description": "job title of the employee.",
            "example": "Designer"
          },
          "job_catalog_level": {
            "type": "string",
            "description": "the level of the employee in the job catalog.",
            "example": "Senior Designer"
          },
          "job_catalog_role": {
            "type": "string",
            "description": "the role of the employee in the job catalog.",
            "example": "Designer"
          },
          "starts_on": {
            "type": "string",
            "description": "the day the employee is hired.",
            "example": "2024-10-06"
          },
          "ends_on": {
            "type": "string",
            "description": "the day the employee is terminated.",
            "example": "2024-10-06"
          },
          "has_payroll": {
            "type": "boolean",
            "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
            "example": true
          },
          "has_trial_period": {
            "type": "boolean",
            "description": "a flag that indicates if the employee has a trial period.",
            "example": true
          },
          "trial_period_ends_on": {
            "type": "string",
            "description": "when the trial period ends.",
            "example": "2024-10-06"
          },
          "salary_amount": {
            "type": "integer",
            "description": "the amount of money the employee earns.",
            "example": 1000
          },
          "salary_frequency": {
            "type": "string",
            "description": "the frequency of the salary payment.",
            "example": "yearly"
          },
          "working_week_days": {
            "type": "string",
            "description": "the days of the week the employee works.",
            "example": "monday,tuesday,wednesday,thursday,friday"
          },
          "working_hours": {
            "type": "integer",
            "description": "the amount of hours the employee works.",
            "example": 40
          },
          "working_hours_frequency": {
            "type": "string",
            "description": "the frequency of the working hours.",
            "example": "week"
          },
          "max_legal_yearly_hours": {
            "type": "integer",
            "description": "the maximum amount of hours the employee can work in a year.",
            "example": 2000
          },
          "maximum_weekly_hours": {
            "type": "integer",
            "description": "the maximum amount of hours the employee can work in a week.",
            "example": 40
          },
          "created_at": {
            "type": "string",
            "description": "the date the contract version was created.",
            "example": "2024-10-06"
          },
          "updated_at": {
            "type": "string",
            "description": "the date of the last contract version updated.",
            "example": "2024-10-06"
          },
          "es_has_teleworking_contract": {
            "type": "boolean",
            "description": "flag that indicates if the contract has teleworking.",
            "example": true
          },
          "es_cotization_group": {
            "type": "integer",
            "description": "the group of cotization of the employee.",
            "example": 1
          },
          "es_contract_observations": {
            "type": "string",
            "description": "observations of the contract.",
            "example": "review contract for job promotion"
          },
          "es_job_description": {
            "type": "string",
            "description": "the job description of the employee.",
            "example": "Designer"
          },
          "es_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          },
          "es_working_day_type_id": {
            "type": "integer",
            "description": "working day type identifier.",
            "example": 1
          },
          "es_education_level_id": {
            "type": "integer",
            "description": "education level identifier.",
            "example": 1
          },
          "es_professional_category_id": {
            "type": "integer",
            "description": "professional category identifier.",
            "example": 1
          },
          "fr_employee_type": {
            "type": "string",
            "description": "employee type.",
            "example": "apprenti"
          },
          "fr_forfait_jours": {
            "type": "boolean",
            "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
            "example": true
          },
          "fr_jours_par_an": {
            "type": "integer",
            "description": "the number of days the employee is allowed to work.",
            "example": 200
          },
          "fr_coefficient": {
            "type": "string"
          },
          "fr_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          },
          "fr_level_id": {
            "type": "integer",
            "description": "level identifier.",
            "example": 1
          },
          "fr_step_id": {
            "type": "integer",
            "description": "step identifier.",
            "example": 1
          },
          "fr_mutual_id": {
            "type": "integer",
            "description": "mutual identifier.",
            "example": 1
          },
          "fr_professional_category_id": {
            "type": "integer",
            "description": "professional category identifier.",
            "example": 1
          },
          "fr_work_type_id": {
            "type": "integer",
            "description": "work type identifier.",
            "example": 1
          },
          "de_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          },
          "pt_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          }
        }
      },
      "reference_contract_contract_version": {
        "type": "object",
        "required": [
          "company_id",
          "employee_id",
          "effective_on",
          "has_payroll",
          "created_at",
          "updated_at",
          "fr_forfait_jours"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier for the contract version.",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "identifier for company.",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "employee identifier, refers to /employees/employees endpoint.",
            "example": 1
          },
          "effective_on": {
            "type": "string",
            "description": "the day the specific contract starts, in case of hiring the same than starts_on.",
            "example": "2024-10-06"
          },
          "country": {
            "type": "string",
            "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "job_title": {
            "type": "string",
            "description": "job title of the employee.",
            "example": "Designer"
          },
          "job_catalog_level": {
            "type": "string",
            "description": "the level of the employee in the job catalog.",
            "example": "Senior Designer"
          },
          "job_catalog_role": {
            "type": "string",
            "description": "the role of the employee in the job catalog.",
            "example": "Designer"
          },
          "starts_on": {
            "type": "string",
            "description": "the day the employee is hired.",
            "example": "2024-10-06"
          },
          "ends_on": {
            "type": "string",
            "description": "the day the employee is terminated.",
            "example": "2024-10-06"
          },
          "has_payroll": {
            "type": "boolean",
            "description": "boolean that indicates if the employee asociated to this contract belongs to a payroll policy.",
            "example": true
          },
          "has_trial_period": {
            "type": "boolean",
            "description": "a flag that indicates if the employee has a trial period.",
            "example": true
          },
          "trial_period_ends_on": {
            "type": "string",
            "description": "when the trial period ends.",
            "example": "2024-10-06"
          },
          "salary_amount": {
            "type": "integer",
            "description": "the amount of money the employee earns.",
            "example": 1000
          },
          "salary_frequency": {
            "type": "string",
            "description": "the frequency of the salary payment.",
            "example": "yearly"
          },
          "working_week_days": {
            "type": "string",
            "description": "the days of the week the employee works.",
            "example": "monday,tuesday,wednesday,thursday,friday"
          },
          "working_hours": {
            "type": "integer",
            "description": "the amount of hours the employee works.",
            "example": 40
          },
          "working_hours_frequency": {
            "type": "string",
            "description": "the frequency of the working hours.",
            "example": "week"
          },
          "max_legal_yearly_hours": {
            "type": "integer",
            "description": "the maximum amount of hours the employee can work in a year.",
            "example": 2000
          },
          "maximum_weekly_hours": {
            "type": "integer",
            "description": "the maximum amount of hours the employee can work in a week.",
            "example": 40
          },
          "created_at": {
            "type": "string",
            "description": "the date the contract version was created.",
            "example": "2024-10-06"
          },
          "updated_at": {
            "type": "string",
            "description": "the date of the last contract version updated.",
            "example": "2024-10-06"
          },
          "es_has_teleworking_contract": {
            "type": "boolean",
            "description": "flag that indicates if the contract has teleworking.",
            "example": true
          },
          "es_cotization_group": {
            "type": "integer",
            "description": "the group of cotization of the employee.",
            "example": 1
          },
          "es_contract_observations": {
            "type": "string",
            "description": "observations of the contract.",
            "example": "review contract for job promotion"
          },
          "es_job_description": {
            "type": "string",
            "description": "the job description of the employee.",
            "example": "Designer"
          },
          "es_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          },
          "es_working_day_type_id": {
            "type": "integer",
            "description": "working day type identifier.",
            "example": 1
          },
          "es_education_level_id": {
            "type": "integer",
            "description": "education level identifier.",
            "example": 1
          },
          "es_professional_category_id": {
            "type": "integer",
            "description": "professional category identifier.",
            "example": 1
          },
          "fr_employee_type": {
            "type": "string",
            "description": "employee type.",
            "example": "apprenti"
          },
          "fr_forfait_jours": {
            "type": "boolean",
            "description": "flag that indicates if the employee is allowed to work within the framework of a fixed number of days.",
            "example": true
          },
          "fr_jours_par_an": {
            "type": "integer",
            "description": "the number of days the employee is allowed to work.",
            "example": 200
          },
          "fr_coefficient": {
            "type": "string"
          },
          "fr_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          },
          "fr_level_id": {
            "type": "integer",
            "description": "level identifier.",
            "example": 1
          },
          "fr_step_id": {
            "type": "integer",
            "description": "step identifier.",
            "example": 1
          },
          "fr_mutual_id": {
            "type": "integer",
            "description": "mutual identifier.",
            "example": 1
          },
          "fr_professional_category_id": {
            "type": "integer",
            "description": "professional category identifier.",
            "example": 1
          },
          "fr_work_type_id": {
            "type": "integer",
            "description": "work type identifier.",
            "example": 1
          },
          "de_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          },
          "pt_contract_type_id": {
            "type": "integer",
            "description": "contract type identifier.",
            "example": 1
          }
        }
      },
      "contracts_taxonomy": {
        "type": "object",
        "required": [
          "id",
          "name",
          "archived",
          "default",
          "legal_entity_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "legal_entity_id": {
            "type": "integer"
          }
        }
      },
      "custom_fields_field": {
        "type": "object",
        "required": [
          "id",
          "field_type",
          "label_text"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Field identifier",
            "example": 2
          },
          "field_type": {
            "type": "string",
            "description": "The type of the field's value",
            "enum": [
              "text",
              "long_text",
              "date",
              "rating",
              "checkbox",
              "single_choice",
              "multiple_choice",
              "money",
              "cents"
            ],
            "example": "text"
          },
          "label_text": {
            "type": "string",
            "description": "Field label",
            "example": "T-Shirt Size"
          },
          "position": {
            "type": "integer",
            "description": "Field position within employee profile",
            "example": 3
          },
          "required": {
            "type": "boolean",
            "description": "Requirement to fill this field",
            "example": true
          },
          "min_value": {
            "type": "integer",
            "description": "Minimum value in range field type",
            "example": 10
          },
          "max_value": {
            "type": "integer",
            "description": "Maximum value in range field type",
            "example": 0
          },
          "options": {
            "type": "array",
            "description": "Array of options",
            "example": [
              true,
              false,
              "maybe"
            ],
            "items": {
              "type": "string"
            }
          },
          "legal_entity_name": {
            "type": "string",
            "description": "Legal entity name where this field belongs",
            "example": "Factorial Legal"
          },
          "slug": {
            "type": "string",
            "description": "Custom field slug",
            "example": "tshirt_size"
          }
        }
      },
      "custom_fields_option": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Option identifier",
            "example": 1
          },
          "label": {
            "type": "string",
            "description": "Title for option",
            "example": "T-shirt size"
          },
          "value": {
            "type": "string",
            "description": "Option value",
            "example": "L"
          },
          "is_active": {
            "type": "boolean",
            "description": "Flag to make the option available",
            "example": true
          },
          "field_id": {
            "type": "integer",
            "description": "Custom Fields identifier",
            "example": 2
          }
        }
      },
      "custom_fields_resource_field": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Resource field identifier",
            "example": 1
          },
          "field_id": {
            "type": "integer",
            "description": "Custom Field identifier",
            "example": 2
          }
        }
      },
      "custom_fields_value": {
        "type": "object",
        "required": [
          "id",
          "custom_field_identifier",
          "valuable_id",
          "field_id",
          "valuable_type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the custom field value",
            "example": 1
          },
          "value": {
            "type": "boolean",
            "description": "Custom Fields value",
            "example": "This is an example value for a custom field"
          },
          "long_text_value": {
            "type": "string",
            "description": "Custom field text value",
            "example": "The value of a text custom field"
          },
          "custom_field_identifier": {
            "type": "string"
          },
          "date_value": {
            "type": "string",
            "description": "Custom field date value",
            "example": "2022-01-01"
          },
          "single_choice_value": {
            "type": "string",
            "description": "Custom field single choice value",
            "example": "Option 1"
          },
          "cents_value": {
            "type": "integer",
            "description": "Custom field number value",
            "example": 100
          },
          "valuable_id": {
            "type": "integer"
          },
          "field_id": {
            "type": "integer"
          },
          "valuable_type": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "usage_group_id": {
            "type": "integer"
          },
          "usage_group_slug": {
            "type": "string"
          }
        }
      },
      "custom_resources_schema": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id",
          "hidden"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Schema identifier",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Schema name",
            "example": "Company Offsite"
          },
          "company_id": {
            "type": "integer",
            "description": "Company identifier where this schema belongs",
            "example": 2
          },
          "hidden": {
            "type": "boolean",
            "description": "Manages visibility of the schema"
          },
          "position": {
            "type": "integer",
            "description": "Schema position within employee profile",
            "example": 1
          }
        }
      },
      "custom_resources_value": {
        "type": "object",
        "required": [
          "id",
          "field_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Value identifier",
            "example": 1
          },
          "field_id": {
            "type": "integer",
            "description": "Identifier of the field this value belongs to",
            "example": 2
          },
          "long_text_value": {
            "type": "string",
            "description": "When the field's type is long_text_value, value for schema long_text_value custom field",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
          },
          "date_value": {
            "type": "string",
            "description": "When the field's type is date_value, value for schema date_value custom field",
            "example": "2024-04-01"
          },
          "text_value": {
            "type": "string",
            "description": "When the field's type is text_value, value for schema text_value custom field",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
          },
          "number_value": {
            "type": "integer",
            "description": "When the field's type is number_value, value for schema number_value custom field",
            "example": 2
          },
          "option_value": {
            "type": "string",
            "description": "When the field's type is option_value, selected value for schema option_value custom field",
            "example": "one_of_the_options"
          },
          "cents_value": {
            "type": "integer",
            "description": "When the field's type is cents_value, value for schema cents_value custom field",
            "example": 5
          },
          "boolean_value": {
            "type": "boolean",
            "description": "When the field's type is boolean_value, value for schema boolean_value custom field",
            "example": true
          },
          "single_choice_value": {
            "type": "string",
            "description": "When the field's type is single_choice_value, selected value for schema single_choice_value custom field",
            "example": "selected_choice"
          },
          "multiple_choice_value": {
            "type": "array",
            "description": "When the field's type is multiple_choice_value,selected values for schema multiple_choice_value custom field",
            "example": [
              "selected_choice_1",
              "selected_choice_2"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "documents_document": {
        "type": "object",
        "required": [
          "created_at",
          "filename",
          "id",
          "public",
          "space",
          "updated_at"
        ],
        "properties": {
          "author_id": {
            "type": "integer",
            "description": "access identifier of the author, refers to /employees/employees endpoint.",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "company identifier, refers to /api/me endpoint.",
            "example": 1
          },
          "content_type": {
            "type": "string",
            "description": "document content type.",
            "example": "application/pdf"
          },
          "created_at": {
            "type": "string",
            "description": "creation date of the document.",
            "example": "2020-01-01T00:00:00Z"
          },
          "employee_id": {
            "type": "integer",
            "description": "employee identifier associated to the document.",
            "example": 1
          },
          "extension": {
            "type": "string",
            "description": "document extension.",
            "example": "pdf"
          },
          "file_size": {
            "type": "integer",
            "description": "document file size in bytes.",
            "example": 1024
          },
          "file": {
            "type": "string",
            "description": "url of the document for download it.",
            "example": "/documents/60"
          },
          "filename": {
            "type": "string",
            "description": "name of the document.",
            "example": "document.pdf"
          },
          "folder_id": {
            "type": "integer",
            "description": "folder identifier, references to documents/folders endpoint.",
            "example": 1
          },
          "id": {
            "type": "integer",
            "description": "document identifier.",
            "example": 1
          },
          "is_company_document": {
            "type": "boolean",
            "description": "flag that indicates if the document is a company document.",
            "example": true
          },
          "is_management_document": {
            "type": "boolean",
            "description": "flag that indicates if the document is a management document.",
            "example": true
          },
          "is_pending_assignment": {
            "type": "boolean",
            "description": "flag that indicates if the document is pending assignment.",
            "example": true
          },
          "leave_id": {
            "type": "integer",
            "description": "leave identifier associated to the document, refers to /timeoff/leaves endpoint.",
            "example": 1
          },
          "public": {
            "type": "boolean",
            "description": "flag to indicate if the document is public.",
            "example": true
          },
          "signature_status": {
            "type": "string",
            "description": "document signature status.",
            "enum": [
              "pending",
              "partially_signed",
              "declined",
              "completed",
              "bounced_email",
              "cancelled",
              "error"
            ],
            "example": "pending"
          },
          "signees": {
            "type": "array",
            "description": "list of signee access identifiers associated to the document, refers to /employees/employees endpoint.",
            "items": {
              "type": "integer"
            }
          },
          "space": {
            "type": "string",
            "description": "document space.",
            "example": "company_public"
          },
          "updated_at": {
            "type": "string",
            "description": "last update date of the document.",
            "example": "2020-01-01T00:00:00Z"
          },
          "deleted_at": {
            "type": "string",
            "description": "deletion date of the document.",
            "example": "2020-01-01T00:00:00Z"
          }
        }
      },
      "documents_folder": {
        "type": "object",
        "required": [
          "active",
          "id",
          "name"
        ],
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Whether the folder is active or not",
            "example": true
          },
          "company_id": {
            "type": "integer",
            "description": "Company ID of the folder",
            "example": 1
          },
          "id": {
            "type": "integer",
            "description": "Folder ID",
            "example": 10
          },
          "name": {
            "type": "string",
            "description": "Folder name",
            "example": "Payslips"
          }
        }
      },
      "employees_employee": {
        "type": "object",
        "required": [
          "id",
          "access_id",
          "first_name",
          "last_name",
          "full_name",
          "company_id",
          "created_at",
          "updated_at",
          "is_terminating"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "id of the employee.",
            "example": 1
          },
          "access_id": {
            "type": "integer",
            "description": "access_id associated to the employee.",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "description": "name of the employee.",
            "example": "Ana"
          },
          "last_name": {
            "type": "string",
            "description": "last name of the employee.",
            "example": "Blanco Perez"
          },
          "full_name": {
            "type": "string",
            "description": "full name of the employee.",
            "example": "Ana Blanco Perez"
          },
          "preferred_name": {
            "type": "string",
            "description": "nickname of the employee or a name that defines the employee better.",
            "example": "Anita"
          },
          "birth_name": {
            "type": "string",
            "description": "Birthname of the employee.",
            "example": "Anna"
          },
          "gender": {
            "type": "string",
            "description": "gender of the employee (male | female).",
            "example": "female"
          },
          "identifier": {
            "type": "string",
            "description": "national identifier number.",
            "example": "QKG587532Y"
          },
          "identifier_type": {
            "type": "string",
            "description": "type of identifier (ex passport).",
            "example": "passport"
          },
          "email": {
            "type": "string",
            "description": "personal email of the employee.",
            "example": "ana@factorial.com"
          },
          "login_email": {
            "type": "string",
            "description": "email associated to the session.",
            "example": "ana@factorial.com"
          },
          "birthday_on": {
            "type": "string",
            "description": "birthday of the employee.",
            "example": "1990-06-06"
          },
          "nationality": {
            "type": "string",
            "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "address_line_1": {
            "type": "string",
            "description": "address of the employee.",
            "example": "Calle Rosalía de Castro 10, 1º 1ª"
          },
          "address_line_2": {
            "type": "string",
            "description": "secondary address of the employee.",
            "example": "Calle Rosalía de Castro 10, 1º 1ª"
          },
          "postal_code": {
            "type": "string",
            "description": "postal code of the employee.",
            "example": 27004
          },
          "city": {
            "type": "string",
            "description": "city of the employee.",
            "example": "Santander"
          },
          "state": {
            "type": "string",
            "description": "state/province/region of the employee.",
            "example": "Cantabria"
          },
          "country": {
            "type": "string",
            "description": "country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "bank_number": {
            "type": "string",
            "description": "bank account number of the employee.",
            "example": "ES6220809324751871912999"
          },
          "swift_bic": {
            "type": "string",
            "description": "code to identify banks and financial institutions globally.",
            "example": "CAGLES2M510"
          },
          "bank_number_format": {
            "type": "string",
            "description": "bank number format.",
            "enum": [
              "iban",
              "sort_code_and_account_number",
              "routing_number_and_account_number",
              "clabe",
              "other",
              "bank_name_and_account_number"
            ],
            "example": "iban"
          },
          "company_id": {
            "type": "integer",
            "description": "id of the company to which the employee belongs (not editable).",
            "example": 1
          },
          "legal_entity_id": {
            "type": "integer",
            "description": "legal entity of the employee, references to companies/legal_entities.",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "description": "creation date of the employee.",
            "example": "2024-10-06"
          },
          "updated_at": {
            "type": "string",
            "description": "date of last modification of the employee",
            "example": "2024-10-06"
          },
          "social_security_number": {
            "type": "string",
            "description": "social security number of the employee.",
            "example": 238038194000
          },
          "is_terminating": {
            "type": "boolean",
            "description": "is the employee being terminated?"
          },
          "terminated_on": {
            "type": "string",
            "description": "termination date of the employee.",
            "example": "2024-10-06"
          },
          "termination_reason": {
            "type": "string",
            "description": "A reason for the termination.",
            "example": "The employee has left the company"
          },
          "termination_observations": {
            "type": "string",
            "description": "observations about the termination.",
            "example": "Ana has been working on this project before she left"
          },
          "manager_id": {
            "type": "integer",
            "description": "manager id of the employee, you can get the manager id from employees endpoint.",
            "example": 1
          },
          "timeoff_manager_id": {
            "type": "integer",
            "description": "Timeoff manager id of the employee.",
            "example": 1
          },
          "phone_number": {
            "type": "string",
            "description": "phone number of the employee.",
            "example": 657483987
          },
          "company_identifier": {
            "type": "string",
            "description": "identity number or string used inside a company to internally identify the employee.",
            "example": "bb9d281e"
          },
          "age_number": {
            "type": "integer",
            "description": "age of the employee.",
            "example": 30
          },
          "contact_name": {
            "type": "string",
            "description": "name of the employee contact.",
            "example": "Laura Delgado"
          },
          "contact_number": {
            "type": "string",
            "description": "phone number of the employee contact .",
            "example": 647384950
          },
          "personal_email": {
            "type": "string",
            "description": "personal email of the employee.",
            "example": "ana@factorial.com"
          },
          "pronouns": {
            "type": "string",
            "description": "pronouns that an employee uses to define themselves.",
            "example": "She/Her"
          },
          "active": {
            "type": "boolean",
            "description": "status of the employee, true when active, false when terminated.",
            "example": true
          },
          "disability_percentage_cents": {
            "type": "integer",
            "description": "officially certified level of disability granted by public administration for individuals with physical or mental impairments, expressed in cents",
            "example": 1200
          }
        }
      },
      "employee_updates_absence": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "employee_id": {
            "type": "integer"
          },
          "employee_full_name": {
            "type": "string"
          },
          "approved": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "start_on": {
            "type": "string"
          },
          "prev_start_on": {
            "type": "string"
          },
          "finish_on": {
            "type": "string"
          },
          "prev_finish_on": {
            "type": "string"
          },
          "half_day": {
            "type": "string"
          },
          "leave_type_id": {
            "type": "integer"
          },
          "leave_type_name": {
            "type": "string"
          }
        }
      },
      "employee_updates_contract_change": {
        "type": "object",
        "required": [
          "id",
          "status",
          "effective_on",
          "employee_id",
          "has_payroll",
          "fr_forfait_jours",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the contract change incidence",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "The status of the contract change incidence",
            "example": "done"
          },
          "effective_on": {
            "type": "string",
            "description": "The effective date of the contract",
            "example": "2024-10-06"
          },
          "starts_on": {
            "type": "string",
            "description": "The start date of the contract",
            "example": "2024-10-06"
          },
          "ends_on": {
            "type": "string",
            "description": "The end date of the contract",
            "example": "2024-10-06"
          },
          "employee_id": {
            "type": "integer",
            "description": "The employee id",
            "example": 1
          },
          "job_title": {
            "type": "string",
            "description": "The job title on the contract change",
            "example": "The job title"
          },
          "job_role": {
            "type": "string",
            "description": "The job role on the contract change",
            "example": "The job role"
          },
          "job_level": {
            "type": "string",
            "description": "The job level on the contract change",
            "example": "The job level"
          },
          "has_payroll": {
            "type": "boolean",
            "description": "The payrollable status of the employee on the contract change",
            "example": true
          },
          "salary_amount": {
            "type": "integer",
            "description": "The salary amount on the contract change",
            "example": 200000
          },
          "salary_frequency": {
            "type": "string",
            "description": "The salary payment frequency on the contract change",
            "example": "monthly"
          },
          "working_week_days": {
            "type": "string",
            "description": "The working week days on the contract change",
            "example": "Monday"
          },
          "working_hours": {
            "type": "integer",
            "description": "The working hours on the contract change",
            "example": 40
          },
          "working_hours_frequency": {
            "type": "string",
            "description": "The working hours frequency on the contract change",
            "example": "weekly"
          },
          "country": {
            "type": "string",
            "description": "The country on the contract change",
            "example": "es"
          },
          "es_has_teleworking_contract": {
            "type": "boolean",
            "description": "The teleworking status on the contract change",
            "example": true
          },
          "es_cotization_group": {
            "type": "integer",
            "description": "The cotization group on the contract change",
            "example": 1
          },
          "es_contract_observations": {
            "type": "string",
            "description": "The contract observations on the contract change",
            "example": "The contract observations"
          },
          "es_job_description": {
            "type": "string",
            "description": "The job description on the contract change",
            "example": "The job description"
          },
          "es_contract_type_id": {
            "type": "integer",
            "description": "The contract type id on the contract change",
            "example": 1
          },
          "es_contract_type_name": {
            "type": "string",
            "description": "The contract type name on the contract change",
            "example": "The contract type name"
          },
          "es_trial_period_ends_on": {
            "type": "string",
            "description": "The trial period end date on the contract change",
            "example": "2024-10-06"
          },
          "es_working_day_type_id": {
            "type": "integer",
            "description": "The working day type id on the contract change",
            "example": 1
          },
          "es_education_level_id": {
            "type": "integer",
            "description": "The education level id on the contract change",
            "example": 1
          },
          "es_professional_category_id": {
            "type": "integer",
            "description": "The professional category id on the contract change",
            "example": 1
          },
          "fr_employee_type": {
            "type": "string",
            "description": "The employee type on the contract change",
            "example": "The employee type"
          },
          "fr_forfait_jours": {
            "type": "boolean",
            "description": "The forfait jours status on the contract change",
            "example": true
          },
          "fr_jours_par_an": {
            "type": "integer",
            "description": "The jours par an on the contract change",
            "example": 1
          },
          "fr_coefficient": {
            "type": "string",
            "description": "The coefficient on the contract change",
            "example": "The coefficient"
          },
          "fr_level_id": {
            "type": "integer",
            "description": "The level id on the contract change",
            "example": 1
          },
          "fr_level_name": {
            "type": "string",
            "description": "The level name on the contract change",
            "example": "The level name"
          },
          "fr_step_id": {
            "type": "integer",
            "description": "The step id on the contract change",
            "example": 1
          },
          "fr_step_name": {
            "type": "string",
            "description": "The step name on the contract change",
            "example": "The step name"
          },
          "fr_mutual_id": {
            "type": "integer",
            "description": "The mutual id on the contract change",
            "example": 1
          },
          "fr_mutual_name": {
            "type": "string",
            "description": "The mutual name on the contract change",
            "example": "The mutual name"
          },
          "fr_professional_category_id": {
            "type": "integer",
            "description": "The professional category id on the contract change",
            "example": 1
          },
          "fr_professional_category_name": {
            "type": "string",
            "description": "The professional category name on the contract change",
            "example": "The professional category name"
          },
          "fr_work_type_id": {
            "type": "integer",
            "description": "The work type id on the contract change",
            "example": 1
          },
          "fr_work_type_name": {
            "type": "string",
            "description": "The work type name on the contract change",
            "example": "The work type name"
          },
          "compensation_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "fr_contract_type_id": {
            "type": "integer",
            "description": "The contract type id on the contract change",
            "example": 1
          },
          "fr_contract_type_name": {
            "type": "string",
            "description": "The contract type name on the contract change",
            "example": "The contract type name"
          },
          "de_contract_type_id": {
            "type": "integer",
            "description": "The contract type id on the contract change",
            "example": 1
          },
          "de_contract_type_name": {
            "type": "string",
            "description": "The contract type name on the contract change",
            "example": "The contract type name"
          },
          "pt_contract_type_id": {
            "type": "integer",
            "description": "The contract type id on the contract change",
            "example": 1
          },
          "pt_contract_type_name": {
            "type": "string",
            "description": "The contract type name on the contract change",
            "example": "The contract type name"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "employee_updates_new_hire": {
        "type": "object",
        "required": [
          "id",
          "status",
          "employee_id",
          "first_name",
          "last_name",
          "address"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the new hire incidence",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "The status of the new hire incidence",
            "example": "done"
          },
          "employee_id": {
            "type": "integer",
            "description": "The employee id of the new hire",
            "example": 1
          },
          "first_name": {
            "type": "string",
            "description": "name of the employee.",
            "example": "Ana"
          },
          "last_name": {
            "type": "string",
            "description": "last name of the employee.",
            "example": "Blanco Perez"
          },
          "birth_name": {
            "type": "string",
            "description": "The birth name of the new hire",
            "example": "John Doe"
          },
          "identifier": {
            "type": "string",
            "description": "national identifier number.",
            "example": "QKG587532Y"
          },
          "identifier_type": {
            "type": "string",
            "description": "type of identifier (ex passport).",
            "example": "passport"
          },
          "payroll_identifier": {
            "type": "string",
            "description": "payroll identifier.",
            "example": 123456
          },
          "work_email": {
            "type": "string",
            "description": "personal email of the employee.",
            "example": "ana@factorial.com"
          },
          "phone_number": {
            "type": "string",
            "description": "phone number of the employee.",
            "example": 123456789
          },
          "gender": {
            "type": "string",
            "description": "gender of the employee (male | female).",
            "example": "female"
          },
          "job_title": {
            "type": "string",
            "description": "job title of the employee.",
            "example": "Software Engineer"
          },
          "address": {
            "type": "string",
            "description": "address of the employee.",
            "example": "Calle Rosalía de Castro 10, 1º 1ª"
          },
          "city": {
            "type": "string",
            "description": "city of the employee.",
            "example": "Santander"
          },
          "country": {
            "type": "string",
            "description": "country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "state": {
            "type": "string",
            "description": "state/province/region of the employee.",
            "example": "Cataluña"
          },
          "postal_code": {
            "type": "string",
            "description": "postal code of the employee.",
            "example": 27004
          },
          "date_of_birth": {
            "type": "string",
            "description": "birthday of the employee.",
            "example": "1990-06-06"
          },
          "nationality": {
            "type": "string",
            "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "start_date": {
            "type": "string"
          },
          "contract_effective_date": {
            "type": "string"
          },
          "contract_end_date": {
            "type": "string"
          },
          "bank_account": {
            "type": "string",
            "description": "bank account number of the employee.",
            "example": "ES6220809324751871912999"
          },
          "salary_amount_in_cents": {
            "type": "integer",
            "description": "salary amount in cents.",
            "example": 200000
          },
          "salary_frequency": {
            "type": "string"
          },
          "working_hours": {
            "type": "integer"
          },
          "working_hours_frequency": {
            "type": "string"
          },
          "social_security_number": {
            "type": "string",
            "description": "social security number of the employee.",
            "example": 238038194000
          },
          "manager_id": {
            "type": "integer",
            "description": "manager id of the employee, you can get the manager id from employees endpoint.",
            "example": 1
          },
          "tax_id": {
            "type": "string"
          },
          "legal_entity_id": {
            "type": "integer",
            "description": "The legal entity id of the new hire",
            "example": 1
          },
          "workplace_id": {
            "type": "integer",
            "description": "workplace id of the employee.",
            "example": 1
          }
        }
      },
      "employee_updates_personal_change": {
        "type": "object",
        "required": [
          "id",
          "status",
          "employee_id",
          "first_name",
          "last_name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the new hire incidence",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "The status of the new hire incidence",
            "example": "done"
          },
          "employee_id": {
            "type": "integer",
            "description": "The employee id of the new hire",
            "example": 1
          },
          "work_email": {
            "type": "string",
            "description": "personal email of the employee.",
            "example": "ana@factorial.com"
          },
          "phone_number": {
            "type": "string",
            "description": "phone number of the employee.",
            "example": 123456789
          },
          "identifier_type": {
            "type": "string",
            "description": "type of identifier (ex passport).",
            "example": "passport"
          },
          "identifier": {
            "type": "string",
            "description": "national identifier number.",
            "example": "QKG587532Y"
          },
          "social_security_number": {
            "type": "string",
            "description": "social security number of the employee.",
            "example": 238038194000
          },
          "tax_id": {
            "type": "string"
          },
          "first_name": {
            "type": "string",
            "description": "name of the employee.",
            "example": "Ana"
          },
          "last_name": {
            "type": "string",
            "description": "last name of the employee.",
            "example": "Blanco Perez"
          },
          "gender": {
            "type": "string",
            "description": "gender of the employee (male | female).",
            "example": "female"
          },
          "date_of_birth": {
            "type": "string",
            "description": "birthday of the employee.",
            "example": "1990-06-06"
          },
          "nationality": {
            "type": "string",
            "description": "nationality country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "address_line_1": {
            "type": "string",
            "description": "address line 1 of the employee.",
            "example": "Calle Rosalía de Castro 10, 1º 1ª"
          },
          "address_line_2": {
            "type": "string",
            "description": "address line 1 of the employee.",
            "example": "Calle Rosalía de Castro 10, 1º 1ª"
          },
          "postal_code": {
            "type": "string",
            "description": "postal code of the employee.",
            "example": 27004
          },
          "city": {
            "type": "string",
            "description": "city of the employee.",
            "example": "Santander"
          },
          "state": {
            "type": "string",
            "description": "state/province/region of the employee.",
            "example": "Cataluña"
          },
          "country": {
            "type": "string",
            "description": "country code of the employee (Spain ES, United Kingdom GB).",
            "example": "ES"
          },
          "bank_number": {
            "type": "string",
            "description": "bank account number of the employee.",
            "example": "ES6220809324751871912999"
          },
          "job_title": {
            "type": "string",
            "description": "job title of the employee.",
            "example": "Software Engineer"
          },
          "workplace_id": {
            "type": "integer",
            "description": "workplace id of the employee.",
            "example": 1
          }
        }
      },
      "employee_updates_summary": {
        "type": "object",
        "required": [
          "id",
          "legal_entity_id",
          "status",
          "type",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "legal_entity_id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "starts_on": {
            "type": "string"
          },
          "ends_on": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        }
      },
      "employee_updates_termination": {
        "type": "object",
        "required": [
          "id",
          "status",
          "employee_id",
          "remaining_holidays"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "employee_id": {
            "type": "integer"
          },
          "terminated_on": {
            "type": "string"
          },
          "termination_reason": {
            "type": "string"
          },
          "termination_observations": {
            "type": "string"
          },
          "legal_entity_id": {
            "type": "integer"
          },
          "remaining_holidays": {
            "type": "array",
            "items": {}
          },
          "termination_reason_type": {
            "type": "string"
          }
        }
      },
      "expenses_expensable": {
        "type": "object",
        "required": [
          "id",
          "type",
          "company_id",
          "employee_id",
          "currency",
          "status",
          "status_updated_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the expensable",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "Type of the expensable. Can be either \"expense\" or \"mileage\" or \"perdiem\"",
            "enum": [
              "expense",
              "mileage",
              "perdiem"
            ],
            "example": "mileage"
          },
          "company_id": {
            "type": "integer",
            "description": "The ID of the company that owns the expensable",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "The ID of the employee that owns the expensable",
            "example": 1
          },
          "group_id": {
            "type": "integer",
            "description": "The optional ID of the group that the expensable belongs to",
            "example": 1
          },
          "amount": {
            "type": "integer",
            "description": "The optional amount in cents",
            "example": 1000
          },
          "currency": {
            "type": "string",
            "description": "The currency code in ISO 4217 format",
            "example": "EUR"
          },
          "status": {
            "type": "string",
            "description": "The status of the expensable. Can be pending, approved, paid, archived, in_review, rejected, reversed, draft, or in_payroll",
            "enum": [
              "pending",
              "approved",
              "paid",
              "archived",
              "inreview",
              "rejected",
              "reversed",
              "draft",
              "in_payroll",
              "sent_to_pay"
            ],
            "example": "approved"
          },
          "description": {
            "type": "string",
            "description": "The optional description of the expensable",
            "example": "Dinner with clients"
          },
          "reporter_id": {
            "type": "integer",
            "description": "The optional ID of the employee that reported the expensable",
            "example": 1
          },
          "status_updated_at": {
            "type": "string",
            "description": "The optional date and time when the status was last updated",
            "example": "2024-06-06T12:00:00Z"
          },
          "effective_on": {
            "type": "string",
            "description": "The optional date and time when the expensable was effective",
            "example": "2024-06-06T12:00:00Z"
          },
          "review_request_at": {
            "type": "string",
            "description": "The optional date and time when the expensable was requested for review",
            "example": "2024-06-06T12:00:00Z"
          },
          "paid_at": {
            "type": "string",
            "description": "The optional date and time when the expensable was set as paid",
            "example": "2024-06-06T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time when the expensable was last updated",
            "example": "2024-06-06T12:00:00Z"
          },
          "reimbursable_amount": {
            "type": "integer",
            "description": "The optional reimbursable amount in cents",
            "example": 1000
          },
          "reimbursable_currency": {
            "type": "string",
            "description": "The optional reimbursable currency code in ISO 4217 format",
            "example": "EUR"
          },
          "expense_id": {
            "type": "integer",
            "description": "The optional ID of the expense that the expensable belongs to",
            "example": 1
          },
          "mileage_id": {
            "type": "integer",
            "description": "The optional ID of the mileage that the expensable belongs to",
            "example": 1
          },
          "per_diem_id": {
            "type": "integer",
            "description": "The optional ID of the per_diem that the expensable belongs to",
            "example": 1
          }
        }
      },
      "expenses_expense": {
        "type": "object",
        "required": [
          "company_id",
          "creation_type",
          "currency",
          "status",
          "effective_on",
          "status_updated_at",
          "files",
          "taxes"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "company_id": {
            "type": "integer"
          },
          "card_payment_id": {
            "type": "integer"
          },
          "dispute_id": {
            "type": "integer"
          },
          "expenses_expensable_id": {
            "type": "integer"
          },
          "merchant_name": {
            "type": "string"
          },
          "user_merchant": {
            "type": "string"
          },
          "merchant_tin": {
            "type": "string"
          },
          "category": {
            "type": "object"
          },
          "subcategory": {
            "type": "string"
          },
          "creation_type": {
            "type": "string",
            "enum": [
              "manual",
              "automatic",
              "travelperk"
            ]
          },
          "reference": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "description": "The optional amount in cents",
            "example": 1000
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "paid",
              "archived",
              "inreview",
              "rejected",
              "reversed",
              "draft",
              "in_payroll",
              "sent_to_pay"
            ]
          },
          "description": {
            "type": "string"
          },
          "effective_on": {
            "type": "string"
          },
          "review_request_at": {
            "type": "string"
          },
          "status_updated_at": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {}
          },
          "external_authorization_id": {
            "type": "string"
          },
          "expenses_card_id": {
            "type": "integer"
          },
          "card": {
            "type": "object"
          },
          "document_id": {
            "type": "integer"
          },
          "signed_document": {
            "type": "object"
          },
          "access_token": {
            "type": "string"
          },
          "paid_at": {
            "type": "string"
          },
          "document_number": {
            "type": "string"
          },
          "document_type": {
            "type": "string"
          },
          "payment": {
            "type": "string",
            "enum": [
              "reimbursable",
              "not_reimbursable"
            ]
          },
          "payment_method": {
            "type": "string"
          },
          "exchange_rate": {
            "type": "number"
          },
          "reimbursable_currency": {
            "type": "string"
          },
          "reimbursable_amount": {
            "type": "integer",
            "description": "The optional reimbursable amount in cents",
            "example": 1000
          },
          "taxes": {
            "type": "array",
            "items": {}
          },
          "category_id": {
            "type": "integer"
          },
          "ledger_account_id": {
            "type": "integer"
          }
        }
      },
      "expenses_mileage": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "currency",
          "status",
          "files",
          "payment"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "company_id": {
            "type": "integer"
          },
          "expenses_expensable_id": {
            "type": "integer"
          },
          "category": {
            "type": "object"
          },
          "subcategory": {
            "type": "string"
          },
          "category_id": {
            "type": "integer"
          },
          "amount": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "mileage": {
            "type": "integer"
          },
          "units": {
            "type": "string"
          },
          "rate": {
            "type": "object"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effective_on": {
            "type": "string"
          },
          "review_request_at": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {}
          },
          "paid_at": {
            "type": "string"
          },
          "payment": {
            "type": "string",
            "enum": [
              "reimbursable",
              "not_reimbursable"
            ]
          },
          "ledger_account_id": {
            "type": "integer"
          },
          "round_trip": {
            "type": "boolean",
            "description": "Indicates if the mileage is a round trip",
            "example": true
          }
        }
      },
      "finance_account": {
        "type": "object",
        "required": [
          "id",
          "number",
          "disabled",
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier in factorial for the ledger account",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the ledger account",
            "example": "Bank account"
          },
          "legal_entity_id": {
            "type": "integer",
            "description": "Legal entity ID of the ledger account",
            "example": 1
          },
          "number": {
            "type": "string",
            "description": "Number of the ledger account",
            "example": "1000"
          },
          "disabled": {
            "type": "boolean",
            "description": "Whether the ledger account is disabled"
          },
          "type": {
            "type": "string",
            "description": "Type of the ledger account",
            "enum": [
              "equity",
              "non_current_asset",
              "current_asset",
              "bank",
              "non_current_liability",
              "current_liability",
              "expense",
              "income"
            ],
            "example": "bank"
          },
          "external_id": {
            "type": "string",
            "description": "Id of the ledger account on the external system",
            "example": "123"
          }
        }
      },
      "finance_cost_center": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id",
          "active_employees_count",
          "historical_employees_count",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "company_id": {
            "type": "integer"
          },
          "legal_entity_id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active_employees_count": {
            "type": "integer"
          },
          "historical_employees_count": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "deactivation_date": {
            "type": "string"
          }
        }
      },
      "finance_cost_center_membership": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "cost_center_id",
          "start_date",
          "percentage"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "cost_center_id": {
            "type": "integer"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "percentage": {
            "type": "number"
          }
        }
      },
      "holidays_company_holiday": {
        "type": "object",
        "required": [
          "id",
          "location_id",
          "date"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Company holiday id",
            "example": 56
          },
          "location_id": {
            "type": "integer",
            "description": "Related location id",
            "example": 1
          },
          "summary": {
            "type": "string",
            "description": "Company holiday summary",
            "example": "Christmas Day"
          },
          "description": {
            "type": "string",
            "description": "Company holiday description",
            "example": "Christmas Day"
          },
          "date": {
            "type": "string",
            "description": "Company holiday date",
            "example": "2024-12-25"
          },
          "half_day": {
            "type": "string",
            "description": "If the company holiday is half-day and which part of the day",
            "enum": [
              "beginning_of_day",
              "end_of_day"
            ]
          }
        }
      },
      "locations_location": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "name",
          "main"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "company_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "main": {
            "type": "boolean"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "radius": {
            "type": "number"
          },
          "siret": {
            "type": "string"
          }
        }
      },
      "locations_work_area": {
        "type": "object",
        "required": [
          "id",
          "location_id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "location_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "archived_at": {
            "type": "string"
          }
        }
      },
      "marketplace_installation_settings": {
        "type": "object",
        "required": [
          "leave_types",
          "additional_compensation_types",
          "file_numbers",
          "establishment_codes",
          "timeoff_allowance_code"
        ],
        "properties": {
          "leave_types": {
            "type": "array",
            "items": {}
          },
          "additional_compensation_types": {
            "type": "array",
            "items": {}
          },
          "file_numbers": {
            "type": "array",
            "items": {}
          },
          "establishment_codes": {
            "type": "array",
            "items": {}
          },
          "timeoff_allowance_code": {
            "type": "array",
            "items": {}
          }
        }
      },
      "marketplace_settings": {
        "type": "object",
        "required": [
          "integration_id",
          "title",
          "questions"
        ],
        "properties": {
          "integration_id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "questions": {
            "type": "object"
          }
        }
      },
      "payroll_family_situation": {
        "type": "object",
        "required": [
          "id",
          "employee_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the family situation.",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "Employee id of the family situation.",
            "example": 5
          },
          "civil_status": {
            "type": "string",
            "description": "Civil status of the employee.",
            "enum": [
              "single",
              "cohabitating",
              "divorced",
              "married",
              "unknown",
              "civil_partnership",
              "separated",
              "widow",
              "not_applicable"
            ],
            "example": "married"
          },
          "number_of_dependants": {
            "type": "integer",
            "description": "Number of dependants of the employee.",
            "example": 2
          }
        }
      },
      "payroll_policy_period": {
        "type": "object",
        "required": [
          "id",
          "starts_on",
          "policy_id",
          "company_id",
          "ends_on",
          "period"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Policy period id",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Policy name with start and end date",
            "example": "Policy name example 20 aug - 13 sep"
          },
          "starts_on": {
            "type": "string",
            "description": "The start date of the policy period",
            "example": "2020-01-01"
          },
          "policy_id": {
            "type": "integer",
            "description": "The id of the policy associated with the policy period",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "The id of the company",
            "example": 1
          },
          "ends_on": {
            "type": "string",
            "description": "The start date of the policy period",
            "example": "2020-01-01"
          },
          "period": {
            "type": "string",
            "description": "Period for the policy",
            "example": "20 aug - 13 sep 2021"
          },
          "status": {
            "type": "string",
            "description": "Policy period status",
            "example": "preparation"
          },
          "policy_name": {
            "type": "string",
            "description": "Policy name",
            "example": "Policy name example"
          },
          "calculation_started_at": {
            "type": "string",
            "description": "The date and time the calculation started",
            "example": "2020-01-01"
          }
        }
      },
      "payroll_supplement": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "company_id",
          "unit"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The identifier of the supplement",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "The identifier of the employee associated with the supplement",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "The identifier of the company associated with the supplement",
            "example": 1
          },
          "contracts_compensation_id": {
            "type": "integer",
            "description": "The contract compensation identifier associated with the supplement",
            "example": 1
          },
          "contracts_taxonomy_id": {
            "type": "integer",
            "description": "The taxonomy identifier associated with the supplement",
            "example": 1
          },
          "amount_in_cents": {
            "type": "integer",
            "description": "The amount of the supplement in cents",
            "example": 10000
          },
          "unit": {
            "type": "string",
            "description": "The unit of the supplement",
            "enum": [
              "money",
              "units",
              "time"
            ],
            "example": "hours"
          },
          "effective_on": {
            "type": "string",
            "description": "The date on which the supplement becomes effective",
            "example": "2024-01-01"
          },
          "created_at": {
            "type": "boolean",
            "description": "The created at date when the supplement was created",
            "example": "2024-01-01T12:00:00Z"
          },
          "updated_at": {
            "type": "boolean",
            "description": "The last updated at date when the supplement was last updated",
            "example": "2024-01-05T12:00:00Z"
          },
          "description": {
            "type": "string",
            "description": "The description of the supplement",
            "example": "Supplement for additional work hours"
          },
          "payroll_policy_period_id": {
            "type": "integer",
            "description": "The payroll policy period identifier associated with the supplement",
            "example": 23456
          },
          "employee_observations": {
            "type": "array",
            "description": "Observations on the employee made by the admin or manager",
            "example": [
              "Worked extra shifts",
              "Bonus for holiday work"
            ],
            "items": {
              "type": "string"
            }
          },
          "raw_minutes_in_cents": {
            "type": "integer",
            "description": "The raw value of minutes in cents associated with the supplement",
            "example": 5000
          },
          "minutes_in_cents": {
            "type": "integer",
            "description": "The value of minutes in cents after adjustments",
            "example": 4800
          },
          "equivalent_minutes_in_cents": {
            "type": "integer",
            "description": "The equivalent value of minutes in cents for payroll processing",
            "example": 4600
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the supplement, typically in ISO 4217 format",
            "example": "USD"
          },
          "legal_entity_id": {
            "type": "integer",
            "description": "The legal entity identifier associated with the supplement",
            "example": 1
          }
        }
      },
      "payroll_employees_identifier": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "country"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "payroll employee identifier",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "identifier of the employee",
            "example": 1
          },
          "social_security_number": {
            "type": "string",
            "description": "social security number of the employee",
            "example": 123456788
          },
          "tax_id": {
            "type": "string",
            "description": "tax id of the employee",
            "example": 123456789
          },
          "country": {
            "type": "string",
            "description": "country code of the employee pt | it | de",
            "enum": [
              "pt",
              "de",
              "it"
            ],
            "example": "it"
          }
        }
      },
      "payroll_integrations_base_code": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "code",
          "codeable_id",
          "codeable_type",
          "integration"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Code identifier",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Company ID where the code belongs to",
            "example": 2
          },
          "code": {
            "type": "string",
            "description": "Code value",
            "example": "COD-51"
          },
          "codeable_id": {
            "type": "integer",
            "description": "Related object ID. Used together with codeable_type",
            "example": 5
          },
          "codeable_type": {
            "type": "string",
            "description": "Related object type. Used together with codeable_id",
            "example": "Employee | Company | LegalEntity | Location | TimeoffLeaveType"
          },
          "integration": {
            "type": "string",
            "description": "Integration name",
            "enum": [
              "a3innuva",
              "a3nom",
              "paierh",
              "silae",
              "silae_api",
              "datev",
              "datev_api",
              "datev_lug_api",
              "zucchetti"
            ],
            "example": "a3innuva"
          }
        }
      },
      "performance_agreement": {
        "type": "object",
        "required": [
          "id",
          "process_id",
          "target_id",
          "status",
          "locked"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Action plan ID",
            "example": "1"
          },
          "process_id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "target_id": {
            "type": "string",
            "description": "Review process target ID",
            "example": "1-3"
          },
          "signer_id": {
            "type": "integer",
            "description": "Manager access ID who signed the action plan",
            "example": 5
          },
          "reviewer_id": {
            "type": "integer",
            "description": "Manager employee ID",
            "example": 3
          },
          "reviewer_access_id": {
            "type": "integer",
            "description": "Manager access ID",
            "example": 6
          },
          "manager_signed_at": {
            "type": "string",
            "description": "Date when the manager signed the action plan",
            "example": "2024-01-01T00:00:00Z"
          },
          "target_signed_at": {
            "type": "string",
            "description": "Date when the employee signed the action plan",
            "example": "2024-01-01T00:00:00Z"
          },
          "agreement_signed_at": {
            "type": "string",
            "description": "Date when the action plan was last signed",
            "example": "2024-01-01T00:00:00Z"
          },
          "last_modified_at": {
            "type": "string",
            "description": "Date when the action plan was last modified",
            "example": "2024-01-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "description": "Action plan status",
            "enum": [
              "pending",
              "signed"
            ],
            "example": "signed"
          },
          "locked": {
            "type": "boolean",
            "description": "When the action plan cannot be edited anymore. Locked when both manager and employee signed it.",
            "example": true
          },
          "conclusions": {
            "type": "object",
            "description": "Conclusions of the action plan",
            "example": {
              "text": "The employee is doing well.",
              "last_updated_at": "2024-01-01T00:00:00Z"
            }
          },
          "manager_questionnaire": {
            "type": "object",
            "description": "List of questions, answers and their respective comments grouped by sections.",
            "example": {
              "content": [
                {
                  "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                  "type": "section",
                  "section_title": "Performance",
                  "questions": [
                    {
                      "question": {
                        "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                        "mandatory": true,
                        "with_comment": false,
                        "title": "Do you think the employee is a team player?",
                        "answer_type": "multiple_choice",
                        "max_choices": 1,
                        "choice_options": [
                          "Yes",
                          "No"
                        ]
                      },
                      "answer": {
                        "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                        "answer_text": "Example answer",
                        "answer_int": 10,
                        "answer_float": 10.5,
                        "answer_choice": [
                          "Yes"
                        ],
                        "answer_rating": {
                          "value": 3,
                          "comment": "The employee is doing well."
                        }
                      },
                      "comments": [
                        {
                          "question_uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                          "author_access_id": 5,
                          "text": "The employee is a team player.",
                          "updated_at": "2024-01-01T00:00:00Z"
                        }
                      ]
                    },
                    {
                      "question": {
                        "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                        "mandatory": true,
                        "with_comment": true,
                        "title": "How would you rate the commitment of the employee?",
                        "answer_type": "rating"
                      },
                      "answer": {
                        "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                        "answer_text": "Example answer",
                        "answer_int": 10,
                        "answer_float": 10.5,
                        "answer_choice": [
                          "Yes"
                        ],
                        "answer_rating": {
                          "value": 3,
                          "comment": "The employee is doing well."
                        }
                      },
                      "comments": [
                        {
                          "question_uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                          "author_access_id": 5,
                          "text": "The employee is doing well.",
                          "updated_at": "2024-01-01T00:00:00Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "self_questionnaire": {
            "type": "object",
            "description": "List of questions, answers and their respective comments grouped by sections.",
            "example": {
              "content": [
                {
                  "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                  "type": "section",
                  "section_title": "Performance",
                  "questions": [
                    {
                      "question": {
                        "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                        "mandatory": true,
                        "with_comment": false,
                        "title": "Do you think you are a team player?",
                        "answer_type": "multiple_choice",
                        "max_choices": 1,
                        "choice_options": [
                          "Yes",
                          "No"
                        ]
                      },
                      "answer": {
                        "uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                        "answer_text": "Example answer",
                        "answer_int": 10,
                        "answer_float": 10.5,
                        "answer_choice": [
                          "Yes"
                        ],
                        "answer_rating": {
                          "value": 3,
                          "comment": "The employee is doing well."
                        }
                      },
                      "comments": [
                        {
                          "question_uuid": "z69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                          "author_access_id": 8,
                          "text": "I am a team player.",
                          "updated_at": "2024-01-01T00:00:00Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "performance_review_evaluation": {
        "type": "object",
        "required": [
          "id",
          "published",
          "status",
          "review_process_target_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Evaluation ID",
            "example": 1
          },
          "performance_review_process_id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "target_access_id": {
            "type": "integer",
            "description": "Participant access ID",
            "example": 1
          },
          "reviewer_access_id": {
            "type": "integer",
            "description": "Reviewer access ID",
            "example": 1
          },
          "evaluation_type": {
            "type": "string",
            "description": "Evaluation type",
            "enum": [
              "self",
              "manager",
              "direct_reports",
              "peers"
            ],
            "example": "manager"
          },
          "published": {
            "type": "boolean",
            "description": "Whether the evaluation is published",
            "example": true
          },
          "status": {
            "type": "string",
            "description": "Evaluation status",
            "enum": [
              "pending",
              "published"
            ],
            "example": "published"
          },
          "review_process_target_id": {
            "type": "string"
          },
          "published_at": {
            "type": "string",
            "description": "Date when the evaluation was published",
            "example": "2024-01-01T00:00:00Z"
          }
        }
      },
      "performance_review_evaluation_answer": {
        "type": "object",
        "required": [
          "id",
          "performance_review_evaluation_id",
          "answered_questionnaire_with_sections"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Review evaluation ID",
            "example": 1
          },
          "performance_review_evaluation_id": {
            "type": "integer",
            "description": "Review evaluation ID",
            "example": 1
          },
          "answered_questionnaire_with_sections": {
            "type": "object",
            "description": "List of questions and their respective answers grouped by section.",
            "example": {
              "content": [
                {
                  "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                  "type": "section",
                  "section_title": "Performance",
                  "questions": [
                    {
                      "question": {
                        "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                        "mandatory": true,
                        "with_comment": false,
                        "title": "Do you think the employee is a team player?",
                        "answer_type": "multiple_choice",
                        "max_choices": 1,
                        "choice_options": [
                          "Yes",
                          "No"
                        ]
                      },
                      "answer": {
                        "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                        "answer_text": "Example answer",
                        "answer_int": 10,
                        "answer_float": 10.5,
                        "answer_choice": [
                          "Yes"
                        ],
                        "answer_rating": {
                          "value": 3,
                          "comment": "The employee is doing well."
                        }
                      }
                    },
                    {
                      "question": {
                        "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                        "mandatory": true,
                        "with_comment": true,
                        "title": "How would you rate the commitment of the employee?",
                        "answer_type": "rating"
                      },
                      "answer": {
                        "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                        "answer_text": "Example answer",
                        "answer_int": 10,
                        "answer_float": 10.5,
                        "answer_choice": [
                          "Yes"
                        ],
                        "answer_rating": {
                          "value": 3,
                          "comment": "The employee is doing well."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          "answered_employee_score_questionnaire": {
            "type": "object",
            "description": "Questionnaire for getting employee score.",
            "example": {
              "content": [
                {
                  "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                  "type": "section",
                  "section_title": "Overall performance",
                  "questions": [
                    {
                      "question": {
                        "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                        "mandatory": true,
                        "with_comment": true,
                        "title": "How would you rate the evarall performance of the employee?",
                        "answer_type": "rating",
                        "scale": [
                          {
                            "value": 1,
                            "text": "Unsatisfactory"
                          },
                          {
                            "value": 2,
                            "text": "Needs Improvement"
                          },
                          {
                            "value": 3,
                            "text": "Meets Expectations"
                          },
                          {
                            "value": 4,
                            "text": "Exceeds Expectations"
                          },
                          {
                            "value": 5,
                            "text": "Outstanding"
                          }
                        ]
                      },
                      "answer": {
                        "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63625fb",
                        "answer_text": "Example answer",
                        "answer_int": 10,
                        "answer_float": 10.5,
                        "answer_choice": [
                          "Yes"
                        ],
                        "answer_rating": {
                          "value": 3,
                          "comment": "The employee is doing well."
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "performance_review_owner": {
        "type": "object",
        "required": [
          "id",
          "access_id",
          "performance_review_process_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Review owner ID",
            "example": 1
          },
          "access_id": {
            "type": "integer",
            "description": "Review owner access ID",
            "example": 2
          },
          "performance_review_process_id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          }
        }
      },
      "performance_review_process": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "status",
          "start_validation_errors",
          "archived",
          "agreements_configuration",
          "employee_score_configuration"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "company_id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "Review process name",
            "example": "Performance Review - Q1 2024"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the review process",
            "example": "The performance review for the first quarter of 2024 has started!"
          },
          "status": {
            "type": "string",
            "description": "Review process status",
            "enum": [
              "draft",
              "scheduled",
              "active",
              "finished"
            ],
            "example": "draft"
          },
          "target_strategy": {
            "type": "object",
            "description": "Condition that defines the employees that will be evaluated (participants). Calculated when the review process starts",
            "example": "all_employees"
          },
          "reviewer_strategies": {
            "type": "array",
            "description": "Review types that will be assigned to the review process. It'll be used to create the evaluations when the process starts",
            "enum": [
              "self",
              "manager",
              "direct_reports",
              "peers"
            ],
            "example": [
              "self",
              "manager"
            ],
            "items": {
              "type": "string"
            }
          },
          "starts_at": {
            "type": "string",
            "description": "Date when the review process should start",
            "example": "2024-01-01T00:00:00Z"
          },
          "ends_at": {
            "type": "string",
            "description": "Date when the review process should end",
            "example": "2024-04-01T00:00:00Z"
          },
          "start_validation_errors": {
            "type": "array",
            "description": "Missing or invalid information to be able to start the review process",
            "enum": [
              "missing_deadline",
              "invalid_deadline",
              "missing_title",
              "missing_target_strategy",
              "missing_target_strategy_members",
              "missing_reviewer_strategy",
              "missing_questions",
              "missing_potential_reviewers"
            ],
            "example": [
              "invalid_deadline",
              "missing_questions"
            ],
            "items": {
              "type": "string"
            }
          },
          "archived": {
            "type": "boolean",
            "description": "Whether the review process is archived or not"
          },
          "agreements_configuration": {
            "type": "object",
            "description": "Configuration of the action plans feature"
          },
          "employee_score_configuration": {
            "type": "object"
          },
          "last_bulk_reminder": {
            "type": "string",
            "description": "Date when the last bulk reminder was sent",
            "example": "2024-03-01T00:00:00Z"
          },
          "cycle_id": {
            "type": "string",
            "description": "Performance cycle ID",
            "example": "5"
          }
        }
      },
      "performance_review_process_estimated_target": {
        "type": "object",
        "required": [
          "id",
          "performance_review_process_id",
          "access_id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "performance_review_process_id": {
            "type": "integer"
          },
          "access_id": {
            "type": "integer"
          }
        }
      },
      "performance_review_process_target": {
        "type": "object",
        "required": [
          "id",
          "access_id",
          "performance_review_process_id",
          "materialized_process_target_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Review process target ID",
            "example": "1-3"
          },
          "access_id": {
            "type": "integer",
            "description": "Participant access ID",
            "example": 3
          },
          "performance_review_process_id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "materialized_process_target_id": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "performance_review_questionnaires_by_strategy": {
        "type": "object",
        "required": [
          "id",
          "performance_review_process_id",
          "default_rating_scale"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "performance_review_process_id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "default_rating_scale": {
            "type": "array",
            "description": "Scoring range used in rating questions",
            "example": [
              {
                "value": 1,
                "text": "Poor"
              },
              {
                "value": 2,
                "text": "Inconsistent"
              },
              {
                "value": 3,
                "text": "Meets expectations"
              },
              {
                "value": 4,
                "text": "Exceeds expectations"
              },
              {
                "value": 5,
                "text": "Exceptional"
              }
            ],
            "items": {}
          },
          "self_questionnaire": {
            "type": "object",
            "description": "Questionnaire for self evaluation",
            "example": {
              "reviewer_strategy": "self",
              "content": [
                {
                  "uuid": "26f26623-043f-4110-a5cb-1fd54a69626f",
                  "type": "question",
                  "questions": [
                    {
                      "uuid": "84ba99f3-4e4f-4917-a2af-6d0aa8c2e0f2",
                      "mandatory": true,
                      "with_comment": false,
                      "title": "Do you think you are a team player?",
                      "answer_type": "single_choice",
                      "choice_options": [
                        "Yes",
                        "No"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "manager_questionnaire": {
            "type": "object",
            "description": "Questionnaire for manager evaluation",
            "example": {
              "reviewer_strategy": "manager",
              "content": [
                {
                  "uuid": "b69c9b4d-0aa6-4ada-89d5-5fdcb04c1327",
                  "type": "section",
                  "section_title": "Performance",
                  "questions": [
                    {
                      "uuid": "a347a2fd-1a0a-4eee-b6c8-f74be63624fb",
                      "mandatory": true,
                      "with_comment": true,
                      "title": "How would you rate the commitment of the employee?",
                      "answer_type": "rating"
                    }
                  ]
                }
              ]
            }
          },
          "direct_report_questionnaire": {
            "type": "object",
            "description": "Questionnaire for direct report evaluation"
          },
          "peers_questionnaire": {
            "type": "object",
            "description": "Questionnaire for peers evaluation"
          },
          "employee_score_self_questionnaire": {
            "type": "object",
            "description": "Questionnaire included in the end of self evaluation to evaluate the employee performance"
          },
          "employee_score_manager_questionnaire": {
            "type": "object",
            "description": "Questionnaire included in the end of manager evaluation to evaluate the employee performance"
          }
        }
      },
      "performance_review_visibility_setting": {
        "type": "object",
        "required": [
          "id",
          "performance_review_process_id",
          "restrict_answers_visibility_to_reportees",
          "early_access_to_answers_for_managers",
          "anonymous_peer_evaluation_for_target"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "performance_review_process_id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "restrict_answers_visibility_to_reportees": {
            "type": "boolean",
            "description": "Employees don't have access to their results when enabled"
          },
          "early_access_to_answers_for_managers": {
            "type": "boolean",
            "description": "Managers can access the results of their reports before deadline when enabled",
            "example": true
          },
          "anonymous_peer_evaluation_for_target": {
            "type": "boolean",
            "description": "Peer evaluations are anonymous when enabled, so employees don't know who reviewed them"
          }
        }
      },
      "performance_target_manager": {
        "type": "object",
        "required": [
          "id",
          "performance_review_process_id",
          "manager_access_id",
          "manager_full_name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Manager employee ID",
            "example": 1
          },
          "performance_review_process_id": {
            "type": "integer",
            "description": "Review process ID",
            "example": 1
          },
          "manager_access_id": {
            "type": "integer",
            "description": "Manager access ID",
            "example": 3
          },
          "manager_full_name": {
            "type": "string",
            "description": "Manager full name",
            "example": "John Doe"
          }
        }
      },
      "posts_comment": {
        "type": "object",
        "required": [
          "id",
          "post_id",
          "author_id",
          "text",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier of the comment",
            "example": 1
          },
          "post_id": {
            "type": "integer",
            "description": "identifier of the post",
            "example": 1
          },
          "author_id": {
            "type": "integer",
            "description": "author identifier refers to the employee access, you can get the employee from the employee endpoint",
            "example": 1
          },
          "text": {
            "type": "string",
            "description": "text of the comment",
            "example": "How is the week going Ana?"
          },
          "created_at": {
            "type": "string",
            "description": "date of the comment",
            "example": "2024-07-17T00:00:00Z"
          }
        }
      },
      "posts_group": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier of the group.",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "title of the group.",
            "example": "Company announcements"
          },
          "description": {
            "type": "string",
            "description": "description of the group.",
            "example": "The place to find all company announcements."
          }
        }
      },
      "posts_post": {
        "type": "object",
        "required": [
          "id",
          "allow_comments_and_reactions",
          "published_at",
          "created_at",
          "updated_at",
          "visits_count",
          "comments_count"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifiers of the post",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "title of the post",
            "example": "Are you ready for the perfomance review?"
          },
          "description": {
            "type": "string",
            "description": "description of the post",
            "example": "As you know today we start the performance review process."
          },
          "allow_comments_and_reactions": {
            "type": "boolean",
            "description": "allow comments and reactions on the post",
            "example": true
          },
          "published_at": {
            "type": "string",
            "description": "date when the post has been published",
            "example": "2024-07-17T00:00:00Z"
          },
          "created_at": {
            "type": "string",
            "description": "date when the post has been created",
            "example": "2024-07-17T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "description": "date when the post has been updated",
            "example": "2024-07-17T00:00:00Z"
          },
          "visits_count": {
            "type": "integer",
            "description": "number of visits of the post",
            "example": 10
          },
          "cover_image_url": {
            "type": "string",
            "description": "url of the cover image",
            "example": "https://example.com/image.jpg"
          },
          "posts_group_id": {
            "type": "integer",
            "description": "group identifier of the post, references to posts/groups endpoint",
            "example": 1
          },
          "comments_count": {
            "type": "integer"
          }
        }
      },
      "project_management_expense_record": {
        "type": "object",
        "required": [
          "id",
          "project_worker_id",
          "expense_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "project_worker_id": {
            "type": "integer"
          },
          "expense_id": {
            "type": "integer"
          },
          "subproject_id": {
            "type": "integer"
          },
          "original_amount_currency": {
            "type": "string"
          },
          "original_amount_cents": {
            "type": "integer"
          },
          "legal_entity_amount_currency": {
            "type": "string"
          },
          "legal_entity_amount_cents": {
            "type": "string"
          },
          "effective_on": {
            "type": "string"
          },
          "exchange_rate": {
            "type": "number"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "project_management_exportable_expense": {
        "type": "object",
        "required": [
          "employee_name"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "subproject_name": {
            "type": "string"
          },
          "employee_name": {
            "type": "string"
          },
          "preferred_name": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "expense_category": {
            "type": "string"
          },
          "expense_subcategory": {
            "type": "string"
          },
          "expense_status": {
            "type": "string"
          },
          "expense_link": {
            "type": "string"
          }
        }
      },
      "project_management_exportable_project": {
        "type": "object",
        "required": [
          "id",
          "project_name",
          "project_status",
          "inputed_time"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "project_code": {
            "type": "string"
          },
          "project_start_date": {
            "type": "string"
          },
          "project_due_date": {
            "type": "string"
          },
          "project_status": {
            "type": "string"
          },
          "subproject_name": {
            "type": "string"
          },
          "employee_name": {
            "type": "string"
          },
          "employee_id": {
            "type": "integer"
          },
          "inputed_time": {
            "type": "string"
          }
        }
      },
      "project_management_flexible_time_record": {
        "type": "object",
        "required": [
          "id",
          "date",
          "imputed_minutes",
          "project_worker_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "date": {
            "type": "string"
          },
          "imputed_minutes": {
            "type": "integer"
          },
          "project_worker_id": {
            "type": "integer"
          },
          "subproject_id": {
            "type": "integer"
          }
        }
      },
      "project_management_flexible_time_record_comment": {
        "type": "object",
        "required": [
          "id",
          "content",
          "flexible_time_record_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "flexible_time_record_id": {
            "type": "integer"
          }
        }
      },
      "project_management_project": {
        "type": "object",
        "required": [
          "id",
          "name",
          "status",
          "employees_assignment",
          "is_billable",
          "legal_entity_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "closed",
              "processing"
            ]
          },
          "employees_assignment": {
            "type": "string",
            "enum": [
              "manual",
              "company"
            ]
          },
          "inputed_minutes": {
            "type": "integer"
          },
          "is_billable": {
            "type": "boolean"
          },
          "fixed_cost_cents": {
            "type": "integer"
          },
          "labor_cost_cents": {
            "type": "integer"
          },
          "legal_entity_id": {
            "type": "integer"
          },
          "spending_cost_cents": {
            "type": "integer"
          },
          "client_id": {
            "type": "integer",
            "description": "The client id of the project",
            "example": 123
          }
        }
      },
      "project_management_project_task": {
        "type": "object",
        "required": [
          "id",
          "project_id",
          "task_id",
          "follow_up"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "project_id": {
            "type": "integer"
          },
          "subproject_id": {
            "type": "integer"
          },
          "task_id": {
            "type": "integer"
          },
          "follow_up": {
            "type": "boolean"
          }
        }
      },
      "project_management_project_worker": {
        "type": "object",
        "required": [
          "id",
          "project_id",
          "employee_id",
          "assigned"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "project_id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "assigned": {
            "type": "boolean"
          },
          "inputed_minutes": {
            "type": "integer"
          },
          "labor_cost_cents": {
            "type": "integer"
          },
          "spending_cost_cents": {
            "type": "integer"
          },
          "full_name": {
            "type": "string"
          }
        }
      },
      "project_management_subproject": {
        "type": "object",
        "required": [
          "name",
          "project_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "project_id": {
            "type": "integer"
          },
          "inputed_minutes": {
            "type": "integer"
          },
          "labor_cost_cents": {
            "type": "integer"
          }
        }
      },
      "project_management_time_record": {
        "type": "object",
        "required": [
          "id",
          "project_worker_id",
          "attendance_shift_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "project_worker_id": {
            "type": "integer"
          },
          "attendance_shift_id": {
            "type": "integer"
          },
          "subproject_id": {
            "type": "integer"
          }
        }
      },
      "shift_management_shift": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "state",
          "employee_id",
          "start_at",
          "end_at",
          "timezone",
          "local_start_at",
          "local_end_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Shift identifier",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Company identifier",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the shift",
            "example": "Morning shift"
          },
          "state": {
            "type": "string",
            "example": "published, draft"
          },
          "location_id": {
            "type": "integer",
            "description": "Shift location identifier",
            "example": 3
          },
          "locations_work_area_id": {
            "type": "integer",
            "description": "Shift work area identifier",
            "example": 5
          },
          "employee_id": {
            "type": "integer",
            "description": "Employee identifier",
            "example": 45
          },
          "start_at": {
            "type": "string",
            "description": "Start date of the shift",
            "example": "2020-09-07T06:00:00.000+00:00"
          },
          "end_at": {
            "type": "string",
            "description": "End date of the shift",
            "example": "2020-09-07T15:00:00.000+00:00"
          },
          "notes": {
            "type": "string",
            "description": "Shift notes",
            "example": "This is a shift note"
          },
          "extra_hours": {
            "type": "boolean",
            "description": "Flag to indicate if the shift has extra hours"
          },
          "default_shift_title": {
            "type": "string",
            "description": "Default shift title"
          },
          "timezone": {
            "type": "string",
            "description": "Shift timezone",
            "example": "Europe/Madrid"
          },
          "local_start_at": {
            "type": "string",
            "description": "Local start date of the shift",
            "example": "2020-09-07T07:00:00.000+00:00"
          },
          "local_end_at": {
            "type": "string",
            "description": "Local end date of the shift",
            "example": "2020-09-07T15:00:00.000+00:00"
          }
        }
      },
      "tasks_task": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id",
          "assignee_ids",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the task",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the task",
            "example": "Upload payroll files"
          },
          "company_id": {
            "type": "integer",
            "description": "Company identifier of the author of the task",
            "example": 1
          },
          "content": {
            "type": "string",
            "description": "Content of the task",
            "example": "Do it as soon as possible"
          },
          "due_on": {
            "type": "string",
            "description": "Due on date of the task",
            "example": "2024-01-01T00:00:00Z"
          },
          "assignee_ids": {
            "type": "array",
            "description": "Employees assigned to the task, assignee_id references to employee_id",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "integer"
            }
          },
          "author_employee_id": {
            "type": "integer",
            "description": "Employee id of the author of the task",
            "example": 1
          },
          "completed_at": {
            "type": "string",
            "description": "Completed at date of the task",
            "example": "2024-01-01T00:00:00Z"
          },
          "completed_by_id": {
            "type": "integer",
            "description": "Completed by identifier",
            "example": 1
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "description": "Updated at date of the task",
            "example": "2024-01-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "description": "Status of the task",
            "enum": [
              "todo",
              "in_progress",
              "done",
              "discarded"
            ],
            "example": "done"
          }
        }
      },
      "tasks_task_file": {
        "type": "object",
        "required": [
          "id",
          "task_id",
          "filename",
          "path",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifier of the file.",
            "example": 1
          },
          "task_id": {
            "type": "integer",
            "description": "identifier of the task.",
            "example": 1
          },
          "filename": {
            "type": "string",
            "description": "name of the file.",
            "example": "expenses.png"
          },
          "content_type": {
            "type": "string",
            "description": "content type of the file.",
            "example": "image/png"
          },
          "path": {
            "type": "string",
            "description": "path of the file, for downloading the file you need to concat api_url/path.",
            "example": "/tasks/tasks_files/405"
          },
          "created_at": {
            "type": "string",
            "description": "creation date of the file.",
            "example": "2024-10-06"
          }
        }
      },
      "teams_membership": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "team_id",
          "lead"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Membership ID",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Company ID of the membership",
            "example": 5
          },
          "employee_id": {
            "type": "integer",
            "description": "Employee ID of the membership",
            "example": 12
          },
          "team_id": {
            "type": "integer",
            "description": "Team ID of the membership",
            "example": 4
          },
          "lead": {
            "type": "boolean",
            "description": "Whether the employee is a lead of the team or not",
            "example": true
          }
        }
      },
      "teams_team": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "employee_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lead_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "company_id": {
            "type": "integer"
          }
        }
      },
      "timeoff_allowance": {
        "type": "object",
        "required": [
          "id",
          "allowance_type",
          "available_days",
          "count_holiday_as_workable",
          "leave_type_ids",
          "name",
          "proration_type",
          "rounding",
          "tenure_periods",
          "timeoff_cycle",
          "timeoff_policy_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the allowance",
            "example": 1
          },
          "accrued_denominator_in_cents": {
            "type": "integer",
            "description": "Only for Allowances based on worked time. It represents how many units you need to work to be granted allowance units",
            "example": 1000
          },
          "accrued_factor_in_cents": {
            "type": "integer",
            "description": "Only for Allowances based on worked time. It represents how many units you are given per unit of time worked",
            "example": 10
          },
          "accrued_units_availability": {
            "type": "string",
            "description": "When can the acrrued units be spent.",
            "enum": [
              "current_cycle",
              "next_cycle"
            ],
            "example": "current_cycle"
          },
          "allowance_type": {
            "type": "string",
            "description": "Sets the allowance units. Can be \"days\" or \"hours\"",
            "enum": [
              "days",
              "hours"
            ],
            "example": "days"
          },
          "available_days": {
            "type": "string",
            "description": "Indicates how the allowance units are accrued. For example all_days means all allowance days are given on the first day of the cycle.",
            "enum": [
              "all_days",
              "generated_days",
              "generated_days_monthly",
              "generated_days_monthly_first_day",
              "monthly_fifteenth",
              "mensiversary",
              "bimonthly_first_and_fifteenth",
              "bimonthly_fifteenth_and_last"
            ],
            "example": "all_days"
          },
          "carry_over_days": {
            "type": "integer",
            "description": "How many units can carry over between cycles",
            "example": 15
          },
          "carry_over_units_in_cents": {
            "type": "integer",
            "description": "How many units can carry over between cycles multiplied by 100",
            "example": 1500
          },
          "count_holiday_as_workable": {
            "type": "boolean",
            "description": "This setting flags if units taken during a bank holiday should be deducted or not from allowance."
          },
          "cycle_length": {
            "type": "integer",
            "description": "How many months does each allowance cycle last",
            "example": 12
          },
          "cycle_start": {
            "type": "string",
            "description": "When does the cycle start.",
            "example": "jan"
          },
          "days_type": {
            "type": "string",
            "description": "Indicates if the allowance is based on working on calendar days.",
            "enum": [
              "working_days",
              "natural_days",
              "natural_days_only_range",
              "french_calendar_days",
              "french_ouvres"
            ],
            "example": "working_days"
          },
          "employee_carry_over_starting_year": {
            "type": "integer",
            "description": "When does the carryover start",
            "example": 1
          },
          "expire_in_months": {
            "type": "integer",
            "description": "When does the carryover expire in months.",
            "example": 6
          },
          "frequency": {
            "type": "string",
            "description": "Defines duration of the allowance cycles. Can be \"yearly\", \"monthly_flexible\" or \"lifetime\"",
            "enum": [
              "monthly_flexible",
              "yearly",
              "lifetime"
            ],
            "example": "yearly"
          },
          "holiday_allowance_in_cents": {
            "type": "integer",
            "description": "Base amount of holiday allowance units multiplied by 100",
            "example": 2300
          },
          "leave_type_ids": {
            "type": "array",
            "description": "An array of leave type ids associated with that allowance",
            "example": [
              1,
              2,
              3,
              4
            ],
            "items": {
              "type": "integer"
            }
          },
          "maximum_amount_in_cents": {
            "type": "integer",
            "description": "Maximum the allowance can reach on accrued",
            "example": 2800
          },
          "name": {
            "type": "string",
            "description": "Allowance name set by the user",
            "example": "Holiday Allowance"
          },
          "negative_counter_type": {
            "type": "string",
            "description": "Whether the allowance allows to request more days than available",
            "enum": [
              "negative_counter_disabled",
              "negative_counter_enabled"
            ],
            "example": "negative_counter_disabled"
          },
          "position": {
            "type": "integer",
            "description": "Indicates the position in the allowance when rendering them in UI",
            "example": 0
          },
          "proration_type": {
            "type": "string",
            "description": "Whether the allowance has proration enabled or not.",
            "enum": [
              "proration_enabled",
              "proration_disabled"
            ],
            "example": "proration_enabled"
          },
          "pto_proratio_enabled": {
            "type": "boolean",
            "description": "Whether the allowance days are prorrated or not"
          },
          "range_type": {
            "type": "string",
            "description": "Configures how leaves duration is handled.",
            "enum": [
              "exact_range",
              "extra_non_working_days_at_end"
            ],
            "example": "working_days"
          },
          "rounding": {
            "type": "string",
            "description": "How the accrued units of the allowance are rounded. It depends if the allowance is set in hours or days.",
            "enum": [
              "half_day",
              "decimals",
              "quarters",
              "round_up"
            ],
            "example": "half_day"
          },
          "send_notification": {
            "type": "boolean"
          },
          "source_units": {
            "type": "string",
            "description": "This field configures the type of allowance (fixed balance, based on worked time)",
            "enum": [
              "base_units",
              "overtime_units",
              "by_worked_time"
            ],
            "example": "base_units"
          },
          "tenure_period_transition": {
            "type": "string",
            "description": "In case the allowance has tenure periods, when is this tenure applied.",
            "enum": [
              "beginning_of_cycle",
              "end_of_cycle",
              "after_milestone"
            ],
            "example": "beginning_of_cycle"
          },
          "tenure_periods": {
            "type": "array",
            "description": "The tenure periods associated with the allowance.",
            "example": [
              {
                "id": 1,
                "period_type": "years",
                "period_length": 1,
                "adjustment_in_cents": 100,
                "max_cap_in_cents": 100,
                "time_worked_based_hours_accrued_in_cents": 100,
                "time_worked_based_per_hours_worked_in_cents": 100,
                "balance_type": "fixed_balance"
              }
            ],
            "items": {}
          },
          "tenure_periods_enabled": {
            "type": "boolean",
            "description": "Whether the allowance has tenure periods enabled or not."
          },
          "timeoff_cycle": {
            "type": "string",
            "description": "Value to indicate how the allowance cycle is configured. Its an abbreviation of the first and last month.",
            "example": "jan_dec"
          },
          "timeoff_policy_id": {
            "type": "integer",
            "description": "The Id of the policy to which the allowance belongs to",
            "example": 1
          },
          "unlimited_accrued_hours": {
            "type": "boolean",
            "description": "Flag to indicate if there is unlimited accrual."
          },
          "unlimited_carry_over": {
            "type": "boolean",
            "description": "Flag to indicate if there is unlimited carry over."
          },
          "unlimited_carry_over_expiration": {
            "type": "boolean",
            "description": "Boolean to flag if carryover does not expire"
          },
          "unlimited_holidays": {
            "type": "boolean",
            "description": "Flag to indicate that the allowance has unlimited available days"
          }
        }
      },
      "timeoff_allowance_incidence": {
        "type": "object",
        "required": [
          "id",
          "employee_id",
          "days_in_cents",
          "timeoff_allowance_id",
          "effective_on",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the allowance incidence",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "Employee id of the affected employee",
            "example": 1
          },
          "description": {
            "type": "string",
            "description": "Optional comment regarding the incidence",
            "example": "Added because working on a holiday"
          },
          "days_in_cents": {
            "type": "integer",
            "description": "How many units * 100 does the incidence add/substract. Can be positive or negative. Example is one unit",
            "example": 100
          },
          "timeoff_allowance_id": {
            "type": "integer",
            "description": "To what allowance does the incidence affect. It will dictate if its days or hours",
            "example": 2
          },
          "effective_on": {
            "type": "string",
            "description": "When does the incidence take effect; this is for time off cycles calculations.",
            "example": "2024-01-02"
          },
          "target_balance": {
            "type": "string",
            "description": "Whether the incidence affects the Accrued or the Available counter.",
            "example": "accrued"
          },
          "created_at": {
            "type": "integer",
            "description": "Unix timestamp when the DB record was created",
            "example": 1723623354
          },
          "updated_at": {
            "type": "integer",
            "description": "Unix timestamp when the DB record was last updated",
            "example": 1723623354
          }
        }
      },
      "timeoff_allowance_stats_new": {
        "type": "object",
        "required": [
          "id",
          "allowance_id",
          "employee_id",
          "year",
          "cycles",
          "carry_overs",
          "accumulated_carry_over",
          "available_days",
          "total_accrued_units",
          "incidences",
          "policy_allowance",
          "prorated_allowance_days",
          "used_carry_over",
          "used_days",
          "used_units_until_reference_date",
          "outstanding_units"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "allowance_id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "year": {
            "type": "integer"
          },
          "cycles": {
            "type": "string"
          },
          "carry_overs": {
            "type": "array",
            "items": {}
          },
          "accumulated_carry_over": {
            "type": "object"
          },
          "available_days": {
            "type": "object"
          },
          "total_accrued_units": {
            "type": "object"
          },
          "incidences": {
            "type": "object"
          },
          "max_balance_cap": {
            "type": "object"
          },
          "policy_allowance": {
            "type": "object"
          },
          "prorated_allowance_days": {
            "type": "object"
          },
          "total_in_decimal": {
            "type": "object"
          },
          "used_carry_over": {
            "type": "object"
          },
          "used_days": {
            "type": "object"
          },
          "used_units_until_reference_date": {
            "type": "object"
          },
          "outstanding_units": {
            "type": "object"
          }
        }
      },
      "timeoff_blocked_periods_policy": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "name",
          "leave_type_ids",
          "time_periods",
          "strategy",
          "members"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the blocked period",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Company id of the blocked period",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the blocked period.",
            "example": "Onboarding period"
          },
          "leave_type_ids": {
            "type": "array",
            "description": "Leave types for which absence request has been blocked",
            "example": [
              1,
              2
            ],
            "items": {
              "type": "integer"
            }
          },
          "time_periods": {
            "type": "array",
            "description": "The tenure periods associated with the allowance.",
            "example": [
              {
                "name": "Product offsite",
                "period_type": "by_contract_start_date",
                "duration": 2,
                "duration_unit": "months",
                "start_on": "2024-01-01",
                "finish_on": "2024-02-28"
              }
            ],
            "items": {}
          },
          "strategy": {
            "type": "string",
            "description": "Type of access group",
            "example": "everyone"
          },
          "members": {
            "type": "array",
            "description": "Employees whose timeoff will be affected",
            "example": [
              1,
              2
            ],
            "items": {
              "type": "integer"
            }
          },
          "location_ids": {
            "type": "array",
            "description": "Array of locations workplace identifiers where the employees are located",
            "example": [
              1,
              2
            ],
            "items": {
              "type": "integer"
            }
          },
          "team_ids": {
            "type": "array",
            "description": "Array of team identifiers which the selected employees belong to",
            "example": [
              1,
              2
            ],
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "timeoff_leave": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "employee_id",
          "start_on",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the Leave",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "Company identifier of the employee of the leave",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "description": "Employee identifier of the leave",
            "example": 1
          },
          "start_on": {
            "type": "string",
            "description": "The start date of the leave",
            "example": "2023-09-01"
          },
          "finish_on": {
            "type": "string",
            "description": "The end date of the leave",
            "example": "2023-09-10"
          },
          "half_day": {
            "type": "string",
            "description": "Indicates if the leave is taken as a half-day",
            "example": "end_of_day"
          },
          "description": {
            "type": "string",
            "description": "A description of the leave",
            "example": "Annual family vacation"
          },
          "reason": {
            "type": "string",
            "description": "The reason provided by the employee for taking the leave",
            "example": "Medical appointment"
          },
          "leave_type_id": {
            "type": "integer",
            "description": "The identifier for the type of leave",
            "example": 2
          },
          "leave_type_name": {
            "type": "string",
            "description": "The name of the leave type",
            "example": "Vacation"
          },
          "approved": {
            "type": "boolean",
            "description": "Indicates whether the leave has been approved",
            "example": true
          },
          "employee_full_name": {
            "type": "string",
            "description": "The full name of the employee taking the leave",
            "example": "John Doe"
          },
          "start_time": {
            "type": "string",
            "description": "The start time of the leave",
            "example": "09:00"
          },
          "hours_amount_in_cents": {
            "type": "integer",
            "description": "The total number of hours taken for the leave, represented in cents",
            "example": 80000
          },
          "updated_at": {
            "type": "string",
            "description": "The updated at date of the leave",
            "example": "2023-08-31T15:30:00Z"
          },
          "created_at": {
            "type": "string",
            "description": "The created at date of the leave",
            "example": "2023-08-01T08:00:00Z"
          }
        }
      },
      "timeoff_leave_type": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "color",
          "attachment",
          "visibility",
          "workable",
          "company_id",
          "allowance_ids",
          "details_required"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the leave type",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the leave type",
            "example": "Annual Leave"
          },
          "translated_name": {
            "type": "string",
            "description": "Translated name of the leave type, if available",
            "example": "Congé Annuel"
          },
          "identifier": {
            "type": "string",
            "description": "Unique identifier of the leave type",
            "example": "annual_leave"
          },
          "color": {
            "type": "string",
            "description": "The color associated with this leave type",
            "example": "red"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the leave type is active",
            "example": true
          },
          "editable": {
            "type": "boolean",
            "description": "Whether the leave type is editable"
          },
          "approval_required": {
            "type": "boolean",
            "description": "Whether approval is required for this leave type",
            "example": true
          },
          "accrues": {
            "type": "boolean",
            "description": "Whether the leave type accrues over time",
            "example": true
          },
          "attachment": {
            "type": "boolean",
            "description": "Whether an attachment is required for this leave type",
            "example": true
          },
          "allow_endless": {
            "type": "boolean",
            "description": "Whether endless leave is allowed"
          },
          "restricted": {
            "type": "boolean",
            "description": "Whether the leave type is restricted"
          },
          "visibility": {
            "type": "boolean",
            "description": "Whether the leave type is visible to employees",
            "example": true
          },
          "workable": {
            "type": "boolean",
            "description": "Whether the leave type is workable"
          },
          "payable": {
            "type": "boolean",
            "description": "Whether the leave type is payable",
            "example": true
          },
          "company_id": {
            "type": "integer",
            "description": "Identifier of the company associated with this leave type",
            "example": 1
          },
          "is_attachment_mandatory": {
            "type": "boolean",
            "description": "Whether the attachment is mandatory"
          },
          "allowance_ids": {
            "type": "array",
            "description": "List of allowance identifiers associated with this leave type",
            "example": [
              1,
              2
            ],
            "items": {
              "type": "integer"
            }
          },
          "half_days_units_enabled": {
            "type": "boolean",
            "description": "Whether half-day units are enabled for this leave type",
            "example": true
          },
          "max_days_in_cents": {
            "type": "integer",
            "description": "Maximum days in cents that can be taken",
            "example": 5000
          },
          "min_days_in_cents": {
            "type": "integer",
            "description": "Minimum days in cents that must be taken",
            "example": 1000
          },
          "description": {
            "type": "string",
            "description": "Description of the leave type",
            "example": "This leave type is for annual holidays."
          },
          "details_required": {
            "type": "boolean",
            "description": "Whether additional details are required for the leave type"
          }
        }
      },
      "timeoff_policy": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The policy id.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Policy name.",
            "example": "Policy for remotes"
          },
          "main": {
            "type": "boolean",
            "description": "Is the main policy? It will return true if it's the main policy if not it will return false.",
            "example": true
          },
          "company_id": {
            "type": "integer",
            "description": "The company id.",
            "example": 1
          },
          "description": {
            "type": "string",
            "description": "The policy description.",
            "example": "This policy will apply only for remote employees"
          }
        }
      },
      "timeoff_policy_timeline": {
        "type": "object",
        "required": [
          "employee_id",
          "start_limit_date",
          "end_limit_date",
          "items",
          "id"
        ],
        "properties": {
          "employee_id": {
            "type": "integer"
          },
          "start_limit_date": {
            "type": "string"
          },
          "end_limit_date": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {}
          },
          "id": {
            "type": "integer",
            "description": "This is the employee id since it's a virtual entity"
          }
        }
      },
      "time_planning_planning_version": {
        "type": "object",
        "required": [
          "effective_at",
          "planning_tool",
          "employee_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "effective_at": {
            "type": "string"
          },
          "planning_tool": {
            "type": "string"
          },
          "number_of_rest_days_in_cents": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "work_schedule_schedule_id": {
            "type": "integer"
          }
        }
      },
      "time_settings_break_configuration": {
        "type": "object",
        "required": [
          "id",
          "name",
          "paid",
          "archived"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "paid": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "trainings_category": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "company_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "trainings_session": {
        "type": "object",
        "required": [
          "id",
          "name",
          "training_id",
          "subsidized",
          "session_attendances_status"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "training_id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "training_class_id": {
            "type": "integer"
          },
          "starts_at": {
            "type": "string"
          },
          "ends_at": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "duration": {
            "type": "object"
          },
          "modality": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "session_attendance_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "session_feedback_id": {
            "type": "integer"
          },
          "subsidized": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "session_attendances_status": {
            "type": "string"
          }
        }
      },
      "trainings_session_access_membership": {
        "type": "object",
        "required": [
          "id",
          "access_id",
          "session_id",
          "session_attendance_status",
          "team_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "access_id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          },
          "session_id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "job_title": {
            "type": "string"
          },
          "session_attendance_status": {
            "type": "string"
          },
          "team_id": {
            "type": "integer"
          }
        }
      },
      "trainings_session_attendance": {
        "type": "object",
        "required": [
          "id",
          "status",
          "session_access_membership_id",
          "access_id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "session_access_membership_id": {
            "type": "integer"
          },
          "access_id": {
            "type": "integer"
          },
          "employee_id": {
            "type": "integer"
          }
        }
      },
      "trainings_training": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "author_id",
          "name",
          "description",
          "external",
          "fundae_subsidized",
          "cost",
          "subsidized_cost",
          "cost_decimal",
          "subsidized_cost_decimal",
          "year",
          "catalog",
          "competency_ids",
          "total_training_cost",
          "total_training_subsidized_cost",
          "total_participants",
          "training_attendance_status",
          "access_id",
          "session_attendance",
          "competency_id",
          "modality"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "company_id": {
            "type": "integer"
          },
          "author_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "external_provider": {
            "type": "string"
          },
          "external": {
            "type": "boolean"
          },
          "total_cost": {
            "type": "integer"
          },
          "fundae_subsidized": {
            "type": "boolean"
          },
          "cost": {
            "type": "integer"
          },
          "subsidized_cost": {
            "type": "integer"
          },
          "total_cost_decimal": {
            "type": "object"
          },
          "cost_decimal": {
            "type": "object"
          },
          "subsidized_cost_decimal": {
            "type": "object"
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "status": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "catalog": {
            "type": "boolean"
          },
          "competency_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "total_training_cost": {
            "type": "object"
          },
          "total_training_subsidized_cost": {
            "type": "object"
          },
          "total_participants": {
            "type": "integer"
          },
          "training_attendance_status": {
            "type": "string",
            "enum": [
              "notassigned",
              "notstarted",
              "missing",
              "started",
              "partiallycompleted",
              "completed"
            ]
          },
          "valid_for": {
            "type": "integer"
          },
          "objectives": {
            "type": "string",
            "description": "Objectives of the course",
            "example": "Intermediate-level communication course that focuses on building and enhancing language skills."
          },
          "number_of_expired_participants": {
            "type": "integer",
            "description": "Number of participants that have the course expired or about to expire in the next 3 months. Only applicable to trainings with validity period.",
            "example": 2
          },
          "access_id": {
            "type": "integer"
          },
          "session_attendance": {
            "type": "string"
          },
          "competency_id": {
            "type": "integer"
          },
          "modality": {
            "type": "string"
          }
        }
      },
      "trainings_training_membership": {
        "type": "object",
        "required": [
          "id",
          "access_id",
          "training_id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the training membership.",
            "example": 1
          },
          "access_id": {
            "type": "integer",
            "description": "Access_id associated to the employee, refers to employees/employees endpoint.",
            "example": 1
          },
          "training_id": {
            "type": "integer",
            "description": "This field is used to filter those trainings memberships that belongs to this training.",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "This field is used to filter those trainings memberships whose attendance status is the given.",
            "example": "notstarted"
          },
          "training_due_date": {
            "type": "string",
            "description": "This field is used for those trainings with an expiry date.",
            "example": "2022-01-01"
          },
          "training_completed_at": {
            "type": "string",
            "description": "This field is used to record the date a training was completed for trainings that have an expiry date.",
            "example": "2022-01-01"
          }
        }
      },
      "work_schedule_day_configuration": {
        "type": "object",
        "required": [
          "id",
          "overlap_period_id",
          "weekday",
          "duration_in_seconds"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "overlap_period_id": {
            "type": "integer"
          },
          "weekday": {
            "type": "string"
          },
          "start_at": {
            "type": "string"
          },
          "duration_in_seconds": {
            "type": "integer"
          }
        }
      },
      "work_schedule_overlap_period": {
        "type": "object",
        "required": [
          "id",
          "default",
          "schedule_id",
          "start_month",
          "start_day",
          "end_month",
          "end_day",
          "schedule_type"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "default": {
            "type": "boolean"
          },
          "schedule_id": {
            "type": "integer"
          },
          "start_month": {
            "type": "integer"
          },
          "start_day": {
            "type": "integer"
          },
          "end_month": {
            "type": "integer"
          },
          "end_day": {
            "type": "integer"
          },
          "schedule_type": {
            "type": "string"
          }
        }
      },
      "work_schedule_schedule": {
        "type": "object",
        "required": [
          "id",
          "name",
          "company_id",
          "created_at",
          "updated_at",
          "employee_ids",
          "periods"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "archived_at": {
            "type": "string"
          },
          "company_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "employee_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "periods": {
            "type": "array",
            "items": {}
          }
        }
      }
    }
  }
}